##################################################################
#
#  FICHIER: $Id: Makefile_linux64,v 1.1 2018/02/20 21:03:37 devgfi Exp $		$Revision: 1.1 $	$Date: 2018/02/20 21:03:37 $
#
###################################################################
# ESCOTA *  PROJET MIGRAZUR
###################################################################
# SOUS-SYSTEME  GESIHM
###################################################################
# HISTORIQUE :
#
# JPL	26/08/17 : Creation d'apres Makefile_linux V1.7 (DEM 1274)  1.1
# LCL	27/07/23 : Adaptation rabbitmq
###################################################################
#
#
# Inhibition de l'echo des commandes
#
.SILENT:
#
# Ajout des suffixes de fichiers concernes
#
.SUFFIXES: .d .as .am .elo
#
##################################################################
#
# nom du sous systeme
#

SSYST = GESIHM
PROJHOME  = $(HOME)/migrazur
TIBEMS_DIR=/opt/tibco/ems/8.5

#
# Definitions des chemins d'acces
#

DIRINC = $(CI_PROJECT_DIR)/$(SSYST)/inc
DIRSRC = $(CI_PROJECT_DIR)/$(SSYST)/src
DIRLIB = $(CI_PROJECT_DIR)/$(SSYST)/libx64RABBIT
DIREXE = $(CI_PROJECT_DIR)/$(SSYST)/binx64RABBIT

INCRTWORKS = $(RTHOME)/include
INCSYBASE = $(SYBASE)/$(SYBASE_OCS)/include

#
# 64-bit libs
#
TIBEMS_LIB64=-ltibems64 -ltibemslookup64
TIBEMSUFO_LIB64=-ltibemsufo64
TIBEMSADMIN_LIB64=-ltibemsadmin64
TIBEMS_SSL_LIB64=-lssl -lcrypto
TIBEMS_LDAP_LIB64=-lldap -llber
TIBEMS_ZLIB64=-lz
TLIBS=-lpthread

LIBS=$(TIBEMS_LIB64)\
$(TIBEMSADMIN_LIB64)\
$(TIBEMS_LDAP_LIB64)\
$(TIBEMS_XML_LIB64)\
$(TIBEMS_SSL_LIB64)\
$(TIBEMS_ZLIB64)\
$(TLIBS)\
$(TIBEMSUFO_LIB64)

RT_LIB=-L$(TIBEMS_DIR)/lib/64 -L$(TIBEMS_DIR)/lib $(LIBS)	  

X11_INCLUDE = /usr/include/X11

# Paths  communs

INCCOMMUN = $(CI_PROJECT_DIR)/XDMICG/inc
LIBCOMMUN = $(CI_PROJECT_DIR)/XDMICG/libx64RABBIT


# Librairies SmartSockets
#RT_PATH_LIB = $(RTHOME)/lib/$(RTARCH)/lib64
#RT_LIB      = -lrtutil -lrtipc
#LDRTWORKS = -L$(RT_PATH_LIB) $(RT_LIB)


# Librairies SYBASE
SYB_COMN_LIB = -lsybtcl64 -lsybcs64 -lsybcomn64 -lsybintl64 -lsybunic64
SYB_SYS_LIB = -Wl,-Bdynamic -ldl -lnsl -lm

SYBASE_PATH_LIB = $(SYBASE)/$(SYBASE_OCS)/lib
LDSYBASE = -L$(SYBASE_PATH_LIB)  -lsybct64  $(SYB_COMN_LIB)

RABBIT_PATH_LIB = /usr/local/lib64
RABBIT_LIB = -lrabbitmq -lm
RABBIT_INC = /usr/local/include/rabbitmq-c


# Sons
#SON_LIB = -lAlib


#
# Definition des outils de generation
#
PCC = pcc
RTLINK = $(RTHOME)/bin/rtlink  -64bit -verbose
RTLINK = cc
CC =  cc

#
# Definition des options du verificateur syntaxique
#

OPTLINT=no
LINTDIR=
#LINT = $(LINTDIR)/lint

LFLAGS = -u -I$(INCCOMMUN)\
-I$(DIRINC)\
-I$(TIBEMS_DIR)/include\
-I$(INCRTWORKS)\
-L$(TIBEMS_DIR)/lib/64\
-L$(TIBEMS_DIR)/lib\
-L$(RABBIT_LIB)


#
# Definition des options de compilation C
#
# En 64 bits, c'est uniquement l'application titre/tisse pour Magistra
CFLAGS = -g -m64\
	-D_XOPEN_SOURCE=500\
	-D_TIBCO_EMS\
	-D_RABBITMQ\
	-D_MAGISTRA\
	-I$(INCCOMMUN)\
	-I$(DIRINC)\
	-I$(INCRTWORKS)\
	-I$(TIBEMS_DIR)/include\
	-I$(RABBIT_INC)



# Definition des options de generation
#
#LDOPTS="-Wl,-a,archive"


########### Zone a modifier par le developpeur ################

#
# librairies communes a l'application
#

COMMUN  = \
	$(LIBCOMMUN)/xzs.a\
	$(LIBCOMMUN)/xzc.a\
	$(LIBCOMMUN)/xzi.a\
	$(LIBCOMMUN)/xzs.a\
	$(LIBCOMMUN)/xzaoa.a\
	$(LIBCOMMUN)/xza.a\
	$(LIBCOMMUN)/xze.a\
	$(LIBCOMMUN)/xzd.a\
	$(LIBCOMMUN)/xd.a


COMMUNisbi  = \
	$(LIBCOMMUN)/xzaoa.a \
	$(LIBCOMMUN)/xzaoc.a \
	$(LIBCOMMUN)/xzs.a\
	$(LIBCOMMUN)/xze.a\
	$(LIBCOMMUN)/xza.a\
	$(LIBCOMMUN)/xzi.a\
	$(LIBCOMMUN)/xd.a


#
# DEFINITION DES SOURCES D'UNE  TACHE
#

# includes

INCtitre = \
	$(INCCOMMUN)/xdc.h\
	$(INCCOMMUN)/xdy.h\
	$(INCCOMMUN)/xdg.h\
	$(INCCOMMUN)/xdm.h\
	$(INCCOMMUN)/xzst.h\
	$(INCCOMMUN)/xzss.h\
	$(INCCOMMUN)/xzdd.h\
	$(INCCOMMUN)/xzec.h\
	$(INCCOMMUN)/xzea.h\
	$(INCCOMMUN)/xzea28.h\
	$(INCCOMMUN)/xzea25.h\
	$(INCCOMMUN)/xzsm.h\
	$(INCCOMMUN)/xzsc.h\
	$(INCCOMMUN)/xzae.h\
	$(DIRINC)/itre_com.h\
	$(DIRINC)/itre_ax.h\
	$(DIRINC)/itre_rtw.h\
	$(DIRINC)/itre_dir.h

SRCtitre = $(DIRSRC)/itre_com.c\
	   $(DIRSRC)/itre_ax.c\
	   $(DIRSRC)/itre_rtw.c\
	   $(DIRSRC)/itre_dir.c


INCtitson = $(INCCOMMUN)/xdc.h\
	    $(INCCOMMUN)/xzst.h\
	    $(DIRINC)/itre_son.h

SRCtitson = $(DIRSRC)/itre_son.c



#
# librairies TACHE titre
#

SRCitr = $(SRCtitre) $(SRCtitson)
INCitr = $(INCtitre) $(INCtitson)

LIBitr = $(DIRLIB)/litre.a
LIBitson = $(DIRLIB)/litson.a
LIBtitre = $(LIBitr) $(LIBitson)



#
# librairies TACHE tisbi
#

LIBR =  $(DIRLIB)/msra.a


#MSMA:
INCM =  $(DIRINC)/isbi_sma.h \
        $(DIRINC)/isbi_sma_reg.h \
        $(DIRINC)/isbi_sra_tri.h \
        $(DIRINC)/isbi_sop.h \
		$(INCCOMMUN)/xdc.h\
		$(INCCOMMUN)/xdy.h

SRCM =  $(DIRSRC)/isbi_sma.c \
        $(DIRSRC)/isbi_sma_reg.c \
        $(DIRSRC)/isbi_sop.c \
        $(DIRSRC)/isbi_sra_tri.c \
		$(DIRSRC)/isbi_dir.c

LIBM =  $(DIRLIB)/msma.a


#MSCO:
INCC =  $(DIRINC)/isbi_sco.h \
		$(INCCOMMUN)/xdc.h \
		$(INCCOMMUN)/xdy.h

SRCC =  $(DIRSRC)/isbi_sco.c \
		$(DIRSRC)/isbi_sco_ft.c \
		$(DIRSRC)/isbi_sco_ft_bd.c \
		$(DIRSRC)/isbi_sco_bd.c \
		$(DIRSRC)/isbi_sco_inrets.c \
		$(DIRSRC)/isbi_sco_H1.c \
		$(DIRSRC)/isbi_sco_tdp.c \
                $(DIRSRC)/isbi_sco_ft_ref.c \
                $(DIRSRC)/isbi_sco_ft_ref_bd.c \
                $(DIRSRC)/isbi_sco_ft_ref_H4.c \
		$(DIRSRC)/isbi_sco_raf.c

LIBC =  $(DIRLIB)/msco.a


INCisbi = $(INCC) $(INCM)

SRCisbi = $(SRCC) $(SRCM)

LIBisbi = $(LIBC) $(LIBR) $(LIBM)





#
# nom des executables
#

EXEtitre = $(DIREXE)/titre.x

EXEisbi = $(DIREXE)/tisbi.x

KSHisbi = $(DIREXE)/nbscreen.sh $(DIREXE)/tivue.ksh


#
# DEFINITION DES REGLES DE GENERATION
#
# Premiere regle il faut tout faire : les communs et les executables
#
tout : isbi itr


isbi : $(EXEisbi)
	cp -p $(DIREXE)/tisbi.x $(DIREXE)/tisup.x

	@echo LA TACHE $(EXEisbi) EST A JOUR.


itr : $(EXEtitre)
	echo
	mv $(EXEtitre) $(DIREXE)/titmo.x
	cp -p $(DIREXE)/titmo.x $(DIREXE)/titre.x
	cp -p $(DIREXE)/titmo.x $(DIREXE)/titbi.x
	@[[ `uname -s` = "Linux" ]]  &&  cp -p $(DIREXE)/titmo.x $(DIREXE)/titme.x
	cp -p $(DIREXE)/titmo.x $(DIREXE)/titlt.x
	@echo LA TACHE $(EXEtitre) EST A JOUR.
	echo


#
# GENERATION  D'UN EXECUTABLE
#
# Phase edition de lien
#

$(EXEtitre): $(SRCitr) $(LIBtitre) $(COMMUN)
	echo
	echo "Generation de l'executable "$@
#	$(RTLINK)  $(CFLAGS) $(LIBitr) $(LIBitson) $(COMMUN) $(CI_PROJECT_DIR)/GESIHM/ctype.o -lX11  -o $@
	echo $(RTLINK)  $(CFLAGS) $(LIBitr) $(LIBitson) $(COMMUN) $(RT_LIB) -lX11  -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(RTLINK)  $(CFLAGS) $(LIBitr) $(LIBitson) $(COMMUN)  $(RT_LIB) -lX11  -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	@size $@
	@echo Executable $@ a jour.


$(DIREXE)/nbscreen.sh : $(DIRSRC)/nbscreen.sh
	cp $(DIRSRC)/nbscreen.sh $(DIREXE)/nbscreen.sh
	chmod +wx $(DIREXE)/nbscreen.sh

$(DIREXE)/tivue.ksh : $(DIRSRC)/tivue.ksh
	cp $(DIRSRC)/tivue.ksh $(DIREXE)/tivue.ksh
	chmod +wx $(DIREXE)/tivue.ksh


$(EXEisbi): $(SRCisbi) $(LIBisbi) $(COMMUNisbi) $(KSHisbi)
	echo
	echo "Generation de l'executable "$@
	echo $(RTLINK) $(CFLAGS) $(LIBisbi) $(LIBM) $(LIBR) $(LIBC) $(COMMUNisbi) $(RT_LIB) $(LDSYBASE)  -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(RTLINK) $(CFLAGS) $(LIBisbi) $(LIBM) $(LIBR) $(LIBC) $(COMMUNisbi) $(RT_LIB) $(LDSYBASE)  -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	@size $@
	@echo Executable $@ a jour.



$(LIBitr): \
	    $(LIBitr)(itre_com.o)\
	    $(LIBitr)(itre_ax.o)\
	    $(LIBitr)(itre_rtw.o)\
	    $(LIBitr)(itre_dir.o)

$(LIBitson): \
	    $(LIBitson)(itre_son.o)


$(LIBR):$(LIBR)(isbi_sra.o)\
        $(LIBR)(isbi_sra_ech.o)\
        $(LIBR)(isbi_sra_rafobj.o)\
        $(LIBR)(isbi_sra_recept.o)


$(LIBC):$(LIBC)(isbi_sco.o) \
        $(LIBC)(isbi_sco_ft.o)\
        $(LIBC)(isbi_sco_ft_bd.o)\
        $(LIBC)(isbi_sco_inrets.o)\
        $(LIBC)(isbi_sco_bd.o)\
        $(LIBC)(isbi_sco_tdp.o)\
        $(LIBC)(isbi_sco_ft_ref.o)\
        $(LIBC)(isbi_sco_ft_ref_bd.o)\
        $(LIBC)(isbi_sco_ft_ref_H4.o)\
        $(LIBC)(isbi_sco_raf.o)\
        $(LIBC)(isbi_sco_H1.o)


$(LIBM):$(LIBM)(isbi_dir.o) \
        $(LIBM)(isbi_sma.o) \
        $(LIBM)(isbi_sma_reg.o) \
        $(LIBM)(isbi_sop.o) \
        $(LIBM)(isbi_sra_tri.o)


#
# Regles liant les sources aux fichiers include communs
#

$(SRCtitre) : $(INCtitre)
	-touch $@

$(SRCtitson) : $(INCtitson)
	touch $@

$(SRCM) : $(INCM)
	touch $@

$(SRCC) : $(INCC)
	touch $@


########### Fin de zone a modifier par le developpeur ################

#
# Redefinition de la regle de construction d'un .o a partir d'un .c
#

.c.o :
	echo " "
	if test $(OPTLINT) = yes;\
          then echo "PHASE DE VERIFICATION SYNTAXIQUE : "   $<;\
               $(LINT) $(CFLAGS) -c $<;\
        fi;
	echo
	echo "compilation du fichier "   $<
	echo " "
	$(CC)   $(CFLAGS) -c $<


#
# Redefinition de la regle de construction d'un .a a partir d'un .o
#

.o.a:
	echo "CREATION DE LIBRAIRIE "$@.a
	ar rv $@.a $<
	rm -f $<


#
# Redefinition de la regle de construction d'un .a a partir d'un .c
#

.c.a :
	echo " "
	if test $(OPTLINT) = yes;\
          then echo "PHASE DE VERIFICATION SYNTAXIQUE : "   $*.c;\
               $(LINT) $(LFLAGS) -c $*.c;\
        fi;
	echo
	echo "compilation du fichier : "   $*.c
	echo " "
	$(CC)   $(CFLAGS) -c $*.c
	echo "MISE A JOUR DE LIBRAIRIE :"$@
	ar r $@ $*.o
	rm -f $*.o


