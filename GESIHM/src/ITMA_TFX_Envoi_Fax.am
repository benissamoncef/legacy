/*E*/
/*  Fichier : $Id: ITMA_TFX_Envoi_Fax.am,v 1.105 2020/11/03 17:38:49 pc2dpdy Exp $        Release : $Revision: 1.105 $        Date : $Date: 2020/11/03 17:38:49 $
---------------------------------------------------------------------------
* STERIA *  PROJET MIGRAZUR
-------------------------------------------------------------------------------
* SOUS-SYSTEME  GESIHM
-------------------------------------------------------------------------------
* MODULE ITMA_TFX * FICHIER ITMA_TFX_Envoi_Fax.am
-------------------------------------------------------------------------------
* DESCRIPTION DU MODULE :
*
*   Demander l'envoi d'un fax ou e-mail
*
*   Cf. DCG 2.4.33
*
-------------------------------------------------------------------------------
* HISTORIQUE :
*
* Guilhou   30 Sep 1994 : Creation                                        V1.1
* Lecrivain 06 Dec 1994 : Reprise complete                                V1.6
* Guilhou   22 dec 1994 : VRAIE reprise                                   V1.11
* Guilhou   23 dec 1994 : toutes les actions passent a Succes             V1.12
* Guilhou   26 dec 1994 : modif evt lie                                   V1.13
* Guilhou   27 dec 1994 : correction liste des interlocuteurs             V1.14
* Lecrivain 17 Fev 1995 : Reprise impression, ajout site                  V1.20
* Lecrivain 20 Fev 1995 : Mise a jour du format d'impression              V1.21
* Lecrivain 14 Avr 1995 : Envoi du fax sur le bon poste                   V1.23
* Lecrivain 21 Avr 1995 : Ajout nom site, adresse, telecopie ; formatage  V1.26
* Lecrivain 02 Mai 1995 : Constantes d'annuaire Escota en fichier inclus  V1.27
* Lecrivain 05 Mai 1995 : Correction gestion liste des actions Fax        V1.28
* Torregrossa 23 Jui 1995 : Correction consultation fax                   V1.29
* Torregrossa 27 Jui 1995 : Suppression dump_array                        V1.30
* Torregrossa 03 Jul 1995 : Correction consultation fax               V1.31
* Torregrossa 09 Aou 1995 : Suppression d'un return en trop ds Produirexx V 1.32
* Noel	   25 Sep 1995  : Mise en place procidure commune d'impression  V1.35
* Torregrossa 13 Oct 1995 : Ajout de la sauvegarde du texte du fax > 250 caract V 1.36
* Torregrossa 15 Nov 1995 : Modif horodate courante pour Applix version 4.1 V 1.37
* Torregrossa 29 Nov 1995 : Remplacement des caracteres posant prob pour envoi fax 4.1 V 1.38,V 1.39,V1.40
* Torregrossa 06 Fev 1996 : Deplacer bouton rechercher interlocuteur V1.41 
* Torregrossa 08 Fev 1996 : Suppression bouton expliquer et grisage bouton expliquer 
*                           pour interlocuteur si pas d'interloc selectionne V1.42
* Torregrossa 06 Mar 1996 : Ajout d'un blanc a la recuperation de chaque morceau de texte de fax
*                           si la longueur n'est pas de 250 caracteres (Applix supprime les blancs en fin de chaine)
*                           (1040) V1.43 
* Torregrossa 18 Mar 1996 : Ajout controle sur presence de texte a envoyer (1003) V1.44
*                           quite a ajout logo
* Torregrossa 25 Mar 1996 : Correction chemin du script V1.45
* Verdier	   29 Jul 1996 : Ajout envoi fax a depanneur V1.46    (DEM76)
* Verdier	   30 Aou 1996 : Ajout Copier/Coller	V1.47	(DEM1169)
* Guilhou	17 sep 1996 : modif gestion lien cause pour applix 4.2 V1.48
* Torregrossa 14 Oct 1996 : Pre-renseignement d'un fax sur FMC hors SAD (IHM7) V1.50-1.51
* Guilhou	25 nov 1996 : affichage montre a l'init (DEM/1306)		1.52
* Torregrossa 10 Oct 1996 : Pre-renseignement d'un fax sur FMC hors SAD 1.53(IHM7) 
* Guilhou	23 dec 1996 : amelioration mise en page (DEM/1345) 1.54
* Guilhou	03 oct 1997 : liste des FMC causes a le m look que celle des FMC a traiter (ana/65) 1.56
* Guilhou	25 nov 2000 : suppression info message sur envoi fax 1.57
* cluchague     20/08/01    : griser le bouton envoyer lorsqu'on envoi un fax (dem 175) 1.58
* Guilhou       27/03/02    : supprimer le type d astreinte du fax envoye 1.59
* Niepceron     22/06/05    : Envoi automatique 1.60 DEM413
* JPL		29/03/07    : Nouveau format TMC_Fiche_Vehicule suite a DEM/637 1.61
* JPL		27/04/07 : Ajout type FMC "Vehicule en Marche Arriere" DEM 643 1.62
* JPL		14/05/07 : Ajout FMCs Trait. Chaussees et Chaussee glissante DEM 644,646 1.63
* JPL	14/05/07 : Ajout FMC Echangeur deconseille (DEM 645) 1.64
* JPL		22/05/07 : Trait. Chaussees, Chaussee glissante : correction affichage Pr fin 1.65
* JPL		30/05/07 : Suppression du traitement des donnees de travaux mobiles (DEM 608) 1.66
* JPL		30/05/07 : Basculement pour travaux : traitements identiques a ceux des travaux (DEM 647) 1.67
* JMG		21/11/07 : envoi de mail DEM/718 1.68
* PNI		01/04/08 : District -> Secteur v1.69
* JMG		03/12/08 : envoi mail depuis les secteurs 1.70 DEM/851
* PNI		05/01/09 : Griser le bt envoyer tant qu'il n'y a pas de fmc liée DEM858 1.71 1.72
* JPL		25/02/09 : Ajout du champ 'feu maitrise' aux fiches de type Vehicule (DEM 845) 1.73
* JPL		12/06/09 : Modifications mineures (init, nommage, mise en forme); identique precedente 1.74
* JPL		12/06/09 : Ajout de la memorisation des destinataires de fax/mail (DEM 888) 1.75
* JPL		02/07/09 : Gestion correcte complete du numero d'action pour chaque destinataire 1.76
* JMG           29/09/09 : SECTO DEM 887 1.77, 1.78
* PNI           21/07/10 : SECTO DEM 887 1.79
* JPL		24/08/10 : Prise en compte des FMC "Zone de stockage" (DEM 942) 1.80
* JPL		23/09/10 : En consultation des actions, affichage date d'envoi du fax (DEM 947) 1.81
* PNI		02/12/10 : Correction de l'absence du destinataire à l'impression de la FMC DEM964 1.82
* JPL		05/09/11 : Conservation du formatage du texte du fax en base (DEM 992)  1.83
* JPL		10/10/11 : Marquer le texte du fax selon le mode indique par l'origine Fmc (DEM 995)  1.84
* JMG		07/06/12 : linux 1.85
* JPL		11/09/12 : Mention "maitrise" dans modele pre-renseigne pour Fmc Incendie (DEM 1037)  1.86
* JPL		20/12/12 : Gestion de destinataires multiples (DEM 1028)  1.87
* PCL		02/05/13 : Recompil avec nouveaux TAN_CI (CI -> CIT)  1.88
* PNI		09/09/14 : Ajout cas de FMC regul + modification de la localisation DEM1096 1.90
* PNI		19/11/14 : Compatibité linux DEM1102 v1.91
* JPL		22/03/16 : Gestion des mails d'alerte aux sociétés de Sophia (DEM 1155)  1.92, 1.93
* PNI		17/06/16 : Envoi de mails aux sociétés de Sophia: ne pas interdire de lier a une FMC  1.94
* JMG   09/03/17        : REGIONALISATION - DEM1220                         1.95
* JPL	23/03/17	: Changement du terme Secteur en Region (DEM 1173)  1.96
* JMG	10/01/17	: appel SMS depuis fiche vehicule appel a depanneur 1.97
* JMG	15/08/18	: envoi SMS LOT25 DEM1301                           1.98
* RGR	23/10/18	: Correction synchro revision                       1.102
* PNI   19/07/19	: DEM1344 : numerotation des fichiers pour envoi de mail 1.103
* LCL	22/04/20	: MOVIS Ajout site local pilotage DEM-SAE93		1.104
---------------------------------------------------------------------------- */

INCLUDE		"dbase_.am"

INCLUDE		"XDMICG/inc/xdc_ax.h"
INCLUDE		"XDMICG/inc/xzaec_ax.h"
INCLUDE		"XDMICG/inc/xzic_ax.h"

INCLUDE		"XDMICG/inc/xzal03sp.h"
INCLUDE		"XDMICG/inc/xzac09sp.h"
INCLUDE		"XDMICG/inc/xzac10sp.h"
INCLUDE		"XDMICG/inc/xzac18sp.h"
INCLUDE		"XDMICG/inc/xzac30sp.h"
INCLUDE		"GESIHM/inc/xzan15sp.h"
INCLUDE		"GESIHM/inc/xzac54sp.h"
INCLUDE		"GESIHM/inc/xzap17sp.h"

INCLUDE		"GESIHM/inc/ITMA_COM.h"
INCLUDE		"GESIHM/inc/ITMA_TMC.h"
INCLUDE		"GESIHM/inc/ITMA_TDO.h"
INCLUDE		"GESIHM/inc/ITMA_TAR.h"
INCLUDE		"GESIHM/inc/ITMA_TFA.h"
INCLUDE		"GESIHM/inc/ITMA_TAN_Escota.h"
INCLUDE		"GESIHM/inc/ITMA_TRG.h"


DEFINE	C_MODULE			"MTFX"						' Nom du module



DEFINE	C_MODELE_FAX			"ITMA_TFX_modele_fax"
DEFINE	C_OBJET_MAIL			"ITMA_TFX_objet_mail"
DEFINE	C_MODELE_MAIL			"ITMA_TFX_modele_mail"
DEFINE	C_SCRIPT_CARACT_SPECIAUX	"/produits/migrazur/appliSD/exec/ITMA_TFX.ksh"
DEFINE	C_FICHIER_TEMPO			"/tmp/morceau_fax.txt"
DEFINE	C_FICHIER_RESULT		"/tmp/morceau_fax_traite.txt"

DEFINE	C_NOM_POSTE_FAX		"SP"
DEFINE	C_FMT_CMD_FAX		"cat %s | remsh %s . .profile 2>&- \; tisendfax.ksh %s %s %s 0"
DEFINE	C_FMT_CMD_FAX_LX	"cat %s | rsh %s . ./.profile 2>&- \; tisendfax.ksh %s %s %s 0"
DEFINE	C_FMT_CMD_MAIL		"cat %s | remsh %s . .profile 2>&- \; tisendmail.ksh %s %s %s %s %d &"
DEFINE	C_FMT_CMD_MAIL_LX	"cat %s | rsh %s . ./.profile 2>&- \; tisendmail.ksh %s %s %s %s %d &"


DEFINE	CM_ALERTE_PRE		"mel_alerte_ech44_pre"			/* Message de pre-alerte */
DEFINE	CM_ALERTE_ENC		"mel_alerte_ech44_enc"			/* Message d'alerte */
DEFINE	CM_ALERTE_FIN		"mel_alerte_ech44_fin"			/* Message de fin d'alerte */


DEFINE	C_MODEM			1			/* Envoi du fax par modem */
DEFINE	C_IMPRESSION		2			/* Envoi du fax pour impression */
DEFINE	C_MAIL			3


DEFINE	CM_MARQUE_EXERCICE	"********** EXERCICE  EXERCICE  EXERCICE  EXERCICE  EXERCICE  EXERCICE *********"


/*A
 * Definition des codes et libelles
 * des erreurs specifiques au module
 * ---------------------------------
 */

DEFINE	C_ERR_IHM			1

DEFINE	C_LIB_CHOISIR_DEST	"Sélectionner d'abord un destinataire dans la liste"



/*A
 * Description du format des donnees destinataires affichees
 * ---------------------------------------------------------
 */

FORMAT	TFX_Destinataire
		type_astreinte,
		interlocuteur,
		numero_appel



/*A
 * Description du format des donnees internes
 * ------------------------------------------
 */

FORMAT	TFX_Info_Destinataire
		PR,
		num_autoroute,
		num_type_astr,
		explication,
		num_interlo,
		num_comp,
		sms



/*A
 * Description du format des donnees lues en base
 * ----------------------------------------------
 */

FORMAT	TFX_Donnees_Fax
		PR,
		num_autoroute,
		type_astreinte,
		explication,
		num_interlo,
		nom_interlo,
		num_comp,
		numero_appel,
		sens,
		sms


/*A
 * Position du libelle du type
 * ---------------------------
 */

DEFINE	TFX_COL_CODE			1
DEFINE	TFX_COL_TYP_LIB			3


DEFINE	TFX_FAX_ACCIDENT		"ITMA_TFX_FaxAccident"
DEFINE	TFX_FAX_DELESTAGE		"ITMA_TFX_FaxDelestage"
DEFINE	TFX_FAX_METEO			"ITMA_TFX_FaxMeteo"
DEFINE	TFX_FAX_VEH			"ITMA_TFX_FaxVehicule"
DEFINE	TFX_FAX_VEH_LENT		"ITMA_TFX_FaxVehLent"
DEFINE	TFX_FAX_MANIF			"ITMA_TFX_FaxManifestation"
DEFINE	TFX_FAX_ESCARG			"ITMA_TFX_FaxEscargot"
DEFINE	TFX_FAX_BASCUL			"ITMA_TFX_FaxBasculement"
DEFINE	TFX_FAX_TRAV			"ITMA_TFX_FaxTravaux"
DEFINE	TFX_FAX_STOCKAGE		"ITMA_TFX_FaxZoneStockage"
DEFINE	TFX_FAX_BOUCHON			"ITMA_TFX_FaxBouchon"
DEFINE	TFX_FAX_FERM_ECH		"ITMA_TFX_FaxFermEchangeur"
DEFINE	TFX_FAX_INCENDIE		"ITMA_TFX_FaxIncendie"
DEFINE	TFX_FAX_FERM_CONCES		"ITMA_TFX_FaxSousConces"
DEFINE	TFX_FAX_OPR			"ITMA_TFX_FaxOperateur"
DEFINE	TFX_FAX_CHAUSSEE		"ITMA_TFX_FaxChaussee"
DEFINE	TFX_FAX_GENERIQUE		"ITMA_TFX_FaxAutre"
DEFINE	TFX_FAX_REGUL			"ITMA_TFX_FaxRegul"

DEFINE	TFX_SOUS_REP_MODELES_FAX	"fichiers/opr/"


VAR FORMAT TDO_Dictionnaire	tm_types_alerte			' Les types de mails d'alerte predefinis

VAR FORMAT TDO_Dictionnaire	tm_dest_memo			' Listes de destinatairees memorisees

VAR FORMAT COM_Identifiant_FMC	vm_id_FMC			' FMC liee a l'appel
VAR vm_origine_fmc						' Origine creation FMC

VAR FORMAT TFA_Contact_Interlocuteur	vm_destinataire		' Interlocuteur selecte
VAR FORMAT TDO_Type_Astreinte		vm_type_astreinte	' Type astreinte corresp.

VAR FORMAT TFX_Destinataire tm_dest				' Table des destinataires affiches
VAR FORMAT TFX_Info_Destinataire tm_info			' Table des infos internes

VAR vm_date_action_fax

VAR tm_num_actions
VAR tm_liste_causes
VAR vm_auto	' flag d'execution automatique à partir du plan d'action
VAR vm_texte	' memorisation du texte fax en mode auto

VAR vm_mode_formation
VAR	vm_sms

VAR vm_appelant

/*X*/
/* ----------------------------------------------------------------------------
* SERVICE RENDU :
* Afficher le texte et demander une confirmation de celui-ci
-------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TFX_Envoi_Fax (va_appelant, ta_args, FORMAT TMC_fmc va_fiche)

/*
* ARGUMENTS EN ENTREE :
*  ta_args : table des arguments
*	si MTFA	numero d'appel, libelle appel
*	si MTFS	numero d'appel, numero et nom interlocuteur, type d'astreinte
*	si MTPA	donnees plan actions (num ordre proposition, num fiche fmc, libelle), fiche MC
*	si MTFP	num appel, libelle appel et texte
*	si MTMC	donnees action (evt, cle evt, num action, sit action, libelle fmc), fiche MC
*	si MTID	num fax,num interlo, nom, type astreinte, donnees fmc, libelle fmc, texte
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : COM_VALIDE si l'appel a ete effectue ;
*						COM_QUITTE si la fenetre est quittee ;
*						COM_REFUSE si l'appel a ete refuse ;
*						COM_NOK en cas d'erreur.
*
* CONDITION D'UTILISATION
*
*
* FONCTION
*
*   Gere le dialogue de commande d'un appel par fax.
*
---------------------------------------------------------------------------- */

	VAR vl_fenetre
	VAR vl_fenetre_active
	VAR vl_exit_value
	VAR tl_messages_acceptes
	VAR vl_installer_traitement_erreur

	VAR vl_appelant
	VAR vl_num_plan, vl_num_ordre, vl_libelle_FMC
	VAR tl_texte_fax_depanneur, vl_explication

	VAR FORMAT COM_Intitule_FMC vl_info_Fmc

	VAR FORMAT TFA_Contact_Interlocuteur tl_interlo	' Interlocuteurs choisis
	VAR vl_fax_envoye								' Indicateur d'envoi

	VAR tl_data									' Arguments de message
	VAR tl_titres, vl_sel
	VAR vl_tache, vl_taille, vl_idx, i, j
	VAR vl_fichier
	VAR tl_retour
	VAR vl_status
	VAR tl_select, tl_texte, tl_texte_select, tl_coller


/*A
 * Traitements en cas d'erreur durant l'initialisation :
 * informer l'operateur, tracer l'erreur et abandonner
 * -----------------------------------------------------
 */

ON ERROR {
    ERROR_BOX@
    COM01_Trace (COM_WARNING, COM03_Message_Erreur (C_MODULE))
    RETURN (COM_NOK)
}

IF (SYSTEM_VAR@(vg_formation)<>null)
	vm_mode_formation=TRUE

/*A
 * Charger la fenetre "Envoi de fax"
 * ---------------------------------
 */

vl_fenetre = DB_LOAD@ ("ITMA_TFX")

DB_XPOS@ (vl_fenetre, 0)
DB_YPOS@ (vl_fenetre, 93)
DB_WIDTH@ (vl_fenetre, 1688)

COM02_Attacher_Aide (vl_fenetre, "ITMA_TFX_Envoi_Fax")


/*A
 * Mettre en place la reception des messages
 * -----------------------------------------
 */

tl_messages_acceptes[0] = COM_CANAL_FIN
tl_messages_acceptes[1]= COM_CANAL_MTFX
DB_ACCEPT_POKES@ (vl_fenetre, tl_messages_acceptes)



/*A
 * Initialiser les donnees du module et la visualisation
 * -----------------------------------------------------
 */

'vl_car_valides="1234567890azertyuiopqsdfghjklmwxcvbnAZERTYUIOPQSDFGHJKLMWXCVBN,.?;:/!*()[]}{'\"+=-_"

tm_types_alerte = {
	{ CM_ALERTE_PRE,	"Pré-alerte fermeture échangeur 44 Sophia" },
	{ CM_ALERTE_ENC,	"Alerte fermeture échangeur 44 Sophia" },
	{ CM_ALERTE_FIN,	"Fin d'alerte fermeture échangeur 44 Sophia" }
}


/*A
 * Recuperer les arguments et afficher les donnees qu'ils contiennent
 * ------------------------------------------------------------------
 */

vl_fax_envoye = FALSE
vm_auto=XDC_FAUX
vm_sms=XDC_FAUX

vl_appelant = "M" ++ SUBSTRING@ (va_appelant, 6, 3)
vm_appelant = vl_appelant


DB_DISPLAY_ONLY@ (vl_fenetre, TRUE)
DB_CTRL_DISPLAY@ (vl_fenetre, "LI_Type_Mail", FALSE)
DB_CTRL_DISPLAY@ (vl_fenetre, "BO_Type_Alerte", FALSE)

	COM01_Trace(COM_DEBUG1,"Envoi Mail appelant="++vl_appelant)
IF vl_appelant = "MTMT" {
	/* Envoi d'e-mail d'alerte aux societes de Sophia Antipolis */
	DB_CTRL_STRINGS@ (vl_fenetre, "BO_Type_Alerte", ARRAY_COLUMN@ (tm_types_alerte, TDO_DICO_VAL))
	DB_CTRL_VALUE@ (vl_fenetre, "BO_Type_Alerte", -1)
	DB_CTRL_DISPLAY@ (vl_fenetre, "LI_Type_Mail", TRUE)
	DB_CTRL_DISPLAY@ (vl_fenetre, "BO_Type_Alerte", TRUE)
	DB_CTRL_RETURN_ON_CHANGE@ (vl_fenetre, "BO_Type_Alerte", TRUE)

	TFX_Lit_Interlocuteur ("SOCIETE%SOPHIA", tl_interlo)
	IF ARRAY_SIZE@ (tl_interlo) > 0 {
		vm_destinataire = tl_interlo[0]
		tm_dest[0].type_astreinte = ""
		tm_dest[0].interlocuteur = vm_destinataire.nom
		tm_dest[0].numero_appel = vm_destinataire.numero_appel
		tm_info[0].num_interlo = vm_destinataire.numero
	}

	vm_id_FMC.numero = SYSTEM_VAR@ (vg_num_fiche_operateur)
	vm_id_FMC.cle = SYSTEM_VAR@ (vg_cle_fiche_operateur)
	ITMA_COM_Lire_Evenement (vm_id_FMC.numero, vm_id_FMC.cle, vl_info_Fmc, C_MODULE)
	DB_CTRL_TITLE@ (vl_fenetre, "LI_Evt_Lie", COM11_Libelle_FMC (vl_info_Fmc))
	DB_CTRL_GRAYED@ (vl_fenetre, "BP_lier_fmc", FALSE)

	DB_CTRL_DISPLAY@ (vl_fenetre, "BP_Expliquer_Dest", FALSE)
	DB_CTRL_DISPLAY@ (vl_fenetre, "BP_refuser", FALSE)
	DB_CTRL_GRAYED@ (vl_fenetre, "BP_envoyer", TRUE)
} ELSE IF vl_appelant = "MTPA" {
	vl_num_plan = ta_args[0]
	vl_num_ordre = ta_args[1]
	vm_id_FMC = ta_args[2]
	vl_libelle_FMC = ta_args[3]
	vm_auto= ta_args[4]
	vm_origine_fmc = va_fiche.origine

	COM01_Trace(COM_DEBUG1,"Envoi Mail TPA:"++vl_num_plan)
	DB_CTRL_TITLE@ (vl_fenetre, "LI_Evt_Lie", vl_libelle_FMC)
	DB_CTRL_GRAYED@ (vl_fenetre, "BP_lier_fmc", TRUE)
	DB_CTRL_GRAYED@ (vl_fenetre, "BP_Expliquer_Dest", TRUE)
} ELSE IF vl_appelant = "MTMC" {
	DB_CTRL_GRAYED@ (vl_fenetre, "BP_Expliquer_Dest", TRUE)

	vm_origine_fmc = va_fiche.origine
	IF ta_args[2] <> NULL
	{
		/* consulter une action fax realisée */
		IF TFX_Consulter_Fax (vl_fenetre, ta_args) <> COM_OK
		{
			INFO_MESSAGE@("Erreur dans la lecture de l'action fax")
			RETURN (COM_NOK)
		}
		tm_dest[0].type_astreinte = ""
		tm_dest[0].interlocuteur = vm_destinataire.nom
		tm_dest[0].numero_appel = vm_destinataire.numero_appel
	}
	ELSE IF TFX_Afficher_Fax_Prerenseigne (vl_fenetre, ta_args, va_fiche) <> COM_OK
	{
		/* visualiser un fax prerenseigne suivant le type de fmc */
		INFO_MESSAGE@("Pas de fax pré-renseigné")
		RETURN (COM_NOK)
	}
} ELSE {
	/* appel depuis MTFA, MTFS, MTID */
	vm_destinataire.numero_appel = ta_args[0]
	vm_destinataire.numero = ta_args[1]
	vm_destinataire.nom = ta_args[2]
	vm_type_astreinte = ta_args[3]

	DB_CTRL_TITLE@ (vl_fenetre, "LI_Evt_Lie", NULL)
	DB_CTRL_TITLE@ (vl_fenetre, "LI_Remarque", NULL)

	DB_CTRL_DISPLAY@ (vl_fenetre, "BP_Expliquer_Dest", FALSE)
	DB_CTRL_DISPLAY@ (vl_fenetre, "BP_Rech_Astreinte", FALSE)
	DB_CTRL_DISPLAY@ (vl_fenetre, "BP_refuser", FALSE)

	/* Griser le bouton envoyer */
	DB_CTRL_GRAYED@ (vl_fenetre, "BP_envoyer", TRUE)
}

IF vl_appelant = "MTID" or vl_appelant = "MSMS" {
	vl_info_Fmc = ta_args[4]
	vm_id_FMC = vl_info_Fmc.IdFMC
	vl_libelle_FMC = ta_args[5]
	vm_origine_fmc = vl_info_Fmc.origine_creation

	DB_CTRL_TITLE@ (vl_fenetre, "LI_Evt_Lie", vl_libelle_FMC)

	DB_CTRL_GRAYED@ (vl_fenetre, "BP_lier_fmc", TRUE)
	DB_CTRL_GRAYED@ (vl_fenetre, "BP_Expliquer_Dest", TRUE)
	DB_CTRL_GRAYED@ (vl_fenetre, "BP_supprimer", FALSE)
	DB_CTRL_GRAYED@ (vl_fenetre, "BP_ajouter", FALSE)

	DB_CTRL_GRAYED@ (vl_fenetre, "BP_envoyer", FALSE)

	tm_dest[0].type_astreinte = vm_type_astreinte.nom
	tm_dest[0].interlocuteur = vm_destinataire.nom
	tm_dest[0].numero_appel = vm_destinataire.numero_appel
	tm_info[0].num_type_astr = vm_type_astreinte.numero
	tm_info[0].num_interlo = vm_destinataire.numero
}

IF vl_appelant = "MSMS"  {
	vm_auto = XDC_VRAI
	TFX_Texte_Marque_Selon_Mode (ta_args[6], vm_texte)
		vm_texte=ARRAY_TO_STRING@(vm_texte,"\n")
}

/*A
 * Afficher la fenetre sauf en cas d'execution automatique
 * -------------------------------------------------------
 */

IF (vm_auto=XDC_FAUX)
{
	DB_DISPLAY@ (vl_fenetre)

	/* et initialiser la table des destinataires, sauf pour une consultation d'action fax */
	IF NOT (vl_appelant = "MTMC" AND ta_args[2] <> NULL) {
		DB_CTRL_RETURN_ON_CHANGE@ (vl_fenetre, "TA_destinataires", TRUE)
		DB_TABLE_ALLOW_COLUMN_RESIZING@ (vl_fenetre, "TA_destinataires", FALSE)
		DB_CTRL_HORIZ_SCROLL@ (vl_fenetre, "TA_destinataires", FALSE)

		tl_titres = {
			{ "Type Astreinte",	250 },
			{ "Interlocuteur",	250 },
			{ "Numéro",		317 },
			{ "",	0 }
		}
	}

	DB_TABLE_SET_DATA@ (vl_fenetre, "TA_destinataires", tm_dest, tl_titres)
}


IF vl_appelant = "MTID"  {
	TFX_Texte_Marque_Selon_Mode (ta_args[6], tl_texte_fax_depanneur)
	DB_EDITBOX_SET_DATA@ (vl_fenetre, "BE_texte", tl_texte_fax_depanneur)

	vl_sel = { 0 }
	DB_TABLE_SET_SELECTIONS@ (vl_fenetre, "TA_destinataires", vl_sel)
}

/*A Si l'appelant est MTPA alors recuperer la proposition*/
IF vl_appelant = "MTPA"
{
	COM01_Trace(COM_DEBUG1,"Envoi Mail TPA0:"++vl_num_plan)
	IF TFX_Init_MTPA (vl_fenetre, vl_num_plan, vl_num_ordre, vl_explication) <> COM_OK
	{
		INFO_MESSAGE@ ("Erreur dans la lecture de la proposition de fax")
	}
}


/*A
 * Traitements en cas d'erreur durant la visualisation :
 * informer l'operateur et selon la nature et la gravite
 * de l'erreur la tracer ou non, continuer ou abandonner
 * -----------------------------------------------------
 */

vl_installer_traitement_erreur = TRUE
WHILE vl_installer_traitement_erreur
	vl_installer_traitement_erreur = FALSE

	ON ERROR {
		ERROR_BOX@
		IF ERROR_NUMBER@() <> C_ERR_IHM
			COM01_Trace (COM_WARNING, COM03_Message_Erreur (C_MODULE))
		vl_installer_traitement_erreur = TRUE
    }
WEND

'DB_CTRL_MONOSPACE@(vl_fenetre,"BE_texte",TRUE)
DB_CTRL_MONOSPACE@(vl_fenetre,"BE_annotation",TRUE)


/*A
 * En mode "execution automatique" envoyer le fax et quitter
 * ---------------------------------------------------------
 */

IF (vm_auto=XDC_VRAI)
{
	vl_fenetre_active = FALSE
	TFX_Envoyer(vl_fenetre)
} ELSE {
	vl_fenetre_active = TRUE
}


/*A
* Lire dans l'environnement les listes de destinataires de fax attachees aux FMC
* et definir les actions valides sur ces listes de destinataires memorisees
* ------------------------------------------------------------------------------
*/

tm_dest_memo = SYSTEM_VAR@ (vg_destinataires_fax)
TFX_Actions_Dest_Memorises (vl_fenetre)


/*A
* boucle infinie de traitement des evenements*/
WHILE vl_fenetre_active
	DB_CTRL_VALUE@ (vl_fenetre, "BS_num_appel", vm_destinataire.numero_appel)
	DB_CTRL_VALUE@ (vl_fenetre, "BS_interlocuteur", vm_destinataire.nom)

	/*A
	* afficher la fenetre*/
	DB_DISPLAY_ONLY@ (vl_fenetre, FALSE)
	DB_DISPLAY@(vl_fenetre)
	DB_DISPLAY_ONLY@ (vl_fenetre, TRUE)

	/*A
	* attente d'un evenement*/
	vl_exit_value = DB_EXIT_CTRL@(vl_fenetre)

	/*A
	* suivant l'evenement */
	CASE OF vl_exit_value
		
		/*A
		* un destinataire a ete selectionne dans la liste*/
		CASE "TA_destinataires"
			vl_sel = DB_TABLE_GET_SELECTIONS@ (vl_fenetre, "TA_destinataires")
			vl_sel = vl_sel[0]

			vm_type_astreinte.numero = tm_info[vl_sel].num_type_astr
			vm_destinataire.numero = tm_info[vl_sel].num_interlo

			vm_type_astreinte.nom = tm_dest[vl_sel].type_astreinte
			vm_destinataire.nom = tm_dest[vl_sel].interlocuteur
			vm_destinataire.numero_appel = tm_dest[vl_sel].numero_appel

			/*A
			* degrise les boutons supprimer et modifier */
			DB_CTRL_GRAYED@ (vl_fenetre, "BP_supprimer", FALSE)
			DB_CTRL_GRAYED@ (vl_fenetre, "BP_modifier", FALSE)
			IF vl_appelant = "MTPA" OR vl_appelant = "MTMC" {
				DB_CTRL_GRAYED@ (vl_fenetre, "BP_Expliquer_Dest", FALSE)
			}


		/*A
		 * Sur choix "Memoriser Destinataires", remplacer la liste de destinataires
		 * attachee a la FMC actuellement liee par les destinataires visualises
		 * ------------------------------------------------------------------------
		 */

		CASE "BP_Memo_Destinataires"
			IF (ARRAY_SIZE@ (tm_dest) > 0)
			{
				/* Rechercher si une liste de destinataires existe pour la FMC liee */
				j = ARRAY_SIZE@ (tm_dest_memo)
				FOR i = 0 TO ARRAY_SIZE@ (tm_dest_memo) - 1
					IF (tm_dest_memo[i].kle = vm_id_FMC)
					{
						j = i
						BREAK i
					}
				NEXT i
				/* et memoriser les destinataires visualises a la place, ou les ajouter a la fin */
				tm_dest_memo[j].kle = vm_id_FMC
				tm_dest_memo[j].valeur = { tm_dest, tm_info }
				SET_SYSTEM_VAR@ (vg_destinataires_fax, tm_dest_memo)

				/* Des lors, cette liste de destinataires peut etre recuperee */
				DB_CTRL_GRAYED@ (vl_fenetre, "BP_Recup_Destinataires", FALSE)
			}



		/*A
		 * Sur choix "Recuperer Destinataires", remplacer la liste de destinataires
		 * visualisee par les destinataires attaches a la FMC actuellement liee
		 * ------------------------------------------------------------------------
		 */

		CASE "BP_Recup_Destinataires"
			/* considerer la liste des destinataires DANS SON ETAT ACTUEL */
			tm_dest_memo = SYSTEM_VAR@ (vg_destinataires_fax)

			FOR i = 0 TO ARRAY_SIZE@ (tm_dest_memo) - 1
				IF (tm_dest_memo[i].kle = vm_id_FMC)
				{
					/*B Recuperer les destinataires attaches a la FMC et les afficher */
					tm_dest = tm_dest_memo[i].valeur[0]
					tm_info = tm_dest_memo[i].valeur[1]
					DB_TABLE_CLEAR_DATA@ (vl_fenetre, "TA_destinataires", 0, -1)
					DB_TABLE_SET_NEW_DATA@ (vl_fenetre, "TA_destinataires", tm_dest, 0)

					/*B Annuler toute selection et inhiber les actions sur la selection */
					DB_TABLE_SET_SELECTIONS@ (vl_fenetre, "TA_destinataires", NULL)
					DB_CTRL_GRAYED@ (vl_fenetre, "BP_supprimer", TRUE)
					DB_CTRL_GRAYED@ (vl_fenetre, "BP_modifier", TRUE)
					IF vl_appelant = "MTPA" OR vl_appelant = "MTMC" {
						DB_CTRL_GRAYED@ (vl_fenetre, "BP_Expliquer_Dest", TRUE)
					}

					IF ARRAY_SIZE@ (tm_dest) > 0 {
						DB_CTRL_GRAYED@ (vl_fenetre, "BP_envoyer", FALSE)
						/* Ces destinataires peuvent a leur tour etre memorises */
						DB_CTRL_GRAYED@ (vl_fenetre, "BP_Memo_Destinataires", FALSE)
					} ELSE {
						DB_CTRL_GRAYED@ (vl_fenetre, "BP_envoyer", TRUE)
					}

					BREAK i
				}
			NEXT i



		/*A
		* appui sur le bouton envoyer*/
		CASE "BP_envoyer"
			IF (vm_mode_formation)
				RETURN (COM_VALIDE)

			vl_status = TFX_Envoyer (vl_fenetre)
/*
			IF (vl_status = COM_OK) {
				vl_fax_envoye = TRUE
			}
*/



		/*A
		 * Sur choix "Ajouter" ajouter a la liste le numero d'appel
		 * et l'interlocuteur affiches s'ils ne sont pas NULLs
		 * --------------------------------------------------------
		 */

		CASE "BP_ajouter"
			vm_destinataire.numero_appel = DB_CTRL_GET_VALUE@ (vl_fenetre, "BS_num_appel")
			vm_destinataire.nom=DB_CTRL_GET_VALUE@ (vl_fenetre, "BS_interlocuteur")
			if (STRING_INDEX@(vm_destinataire.numero_appel,"@")= 0)
			{
				vm_destinataire.numero_appel =NULL
				vm_destinataire.nom=NULL
				info_message@("Adresse Mail Invalide, pas d'envoi de Mail possible")
			}

			IF (vm_destinataire.numero_appel <> NULL)
			{
				vl_taille = ARRAY_SIZE@ (tm_dest)
				tm_info[vl_taille].num_type_astr = vm_type_astreinte.numero
				tm_info[vl_taille].num_interlo = vm_destinataire.numero
				tm_dest[vl_taille].type_astreinte = vm_type_astreinte.nom
				tm_dest[vl_taille].interlocuteur = vm_destinataire.nom
				tm_dest[vl_taille].numero_appel = vm_destinataire.numero_appel
				DB_TABLE_SET_NEW_DATA@(vl_fenetre,"TA_destinataires", tm_dest,0)

				/*A
				* reinitialiser les boites de saisie numero et interlocuteur*/
				vm_destinataire = NULL
				vm_type_astreinte = NULL

				DB_CTRL_GRAYED@ (vl_fenetre, "BP_envoyer", FALSE)
				IF vl_appelant = "MTPA" OR vl_appelant = "MTMC" {
					DB_CTRL_GRAYED@ (vl_fenetre, "BP_Expliquer_Dest", TRUE)
				}

				IF (vm_id_FMC.numero <> NULL)  AND  (vm_id_FMC.cle <> NULL) {
					DB_CTRL_GRAYED@ (vl_fenetre, "BP_Memo_Destinataires", FALSE)
				}
			}



 		   CASE "BP_arobase"
		    vm_destinataire.numero_appel = TRIM@(DB_CTRL_GET_VALUE@(vl_fenetre, "BS_num_appel")) ++ "@"
		    DB_CTRL_VALUE@(vl_fenetre, "BS_num_appel", vm_destinataire.numero_appel)



		/*A
		 * Sur choix "Supprimer" verifier qu'une proposition
		 * d'envoi est choisie puis la supprimer de la liste
		 * -------------------------------------------------
		 */

		CASE "BP_supprimer"
			vl_sel = DB_TABLE_GET_SELECTIONS@ (vl_fenetre, "TA_destinataires")
			IF ARRAY_SIZE@ (vl_sel) = 0
				ERROR@ (C_ERR_IHM, C_LIB_CHOISIR_DEST)
			vl_sel = vl_sel[0]

			tm_dest = ARRAY_DELETE@ (tm_dest, vl_sel)
			tm_info = ARRAY_DELETE@ (tm_info, vl_sel)
			DB_TABLE_CLEAR_DATA@ (vl_fenetre, "TA_destinataires", 0, -1)
			DB_TABLE_SET_NEW_DATA@ (vl_fenetre, "TA_destinataires", tm_dest,0)

			/*A
			 * effacer les boites de saisie numero et nom et si la liste
			 * est vide griser les boutons supprimer, modifier et envoyer
			 * ----------------------------------------------------------
			 */

			vm_type_astreinte = NULL
			vm_destinataire = NULL

			DB_CTRL_GRAYED@ (vl_fenetre, "BP_supprimer", TRUE)
			DB_CTRL_GRAYED@ (vl_fenetre, "BP_modifier", TRUE)
			IF ARRAY_SIZE@ (tm_dest) = 0 {
				DB_CTRL_GRAYED@ (vl_fenetre, "BP_envoyer", TRUE)
				/* Plus aucun destinataire a memoriser */
				DB_CTRL_GRAYED@ (vl_fenetre, "BP_Memo_Destinataires", TRUE)
			}

			IF vl_appelant = "MTPA" OR vl_appelant = "MTMC" {
				DB_CTRL_GRAYED@ (vl_fenetre, "BP_Expliquer_Dest", TRUE)
			}



		/*A
		 * Sur choix "Modifier" verifier qu'une proposition d'envoi
		 * est choisie puis remplacer ses donnees par celles saisies
		 * ---------------------------------------------------------
		 */

		CASE "BP_modifier"
			vl_sel = DB_TABLE_GET_SELECTIONS@ (vl_fenetre, "TA_destinataires")
			IF ARRAY_SIZE@ (vl_sel) = 0
				ERROR@ (C_ERR_IHM, C_LIB_CHOISIR_DEST)
			vl_sel = vl_sel[0]

			vm_destinataire.numero_appel = DB_CTRL_GET_VALUE@ (vl_fenetre, "BS_num_appel")

			tm_info[vl_sel].num_type_astr = vm_type_astreinte.numero
			tm_info[vl_sel].num_interlo = vm_destinataire.numero

			tm_dest[vl_sel].type_astreinte = vm_type_astreinte.nom
			tm_dest[vl_sel].interlocuteur = vm_destinataire.nom
			tm_dest[vl_sel].numero_appel = vm_destinataire.numero_appel
			DB_TABLE_SET_NEW_DATA@ (vl_fenetre, "TA_destinataires", tm_dest,0)
			DB_TABLE_SET_SELECTIONS@ (vl_fenetre, "TA_destinataires", NULL)

			IF vl_appelant = "MTPA" OR vl_appelant = "MTMC" {
				DB_CTRL_GRAYED@ (vl_fenetre, "BP_Expliquer_Dest", TRUE)
			}


	/*B appui sur le bouton lier fmc*/
	CASE "BP_lier_fmc"
		MACRO_WINS_BUSY@()

		/*B on lance la tache de recherche d'evt cause*/
		tl_data=PEND_FOR_NEW_TASK@("ITMA_COM_Liste_Causes", "ITMA_TFx_Envoi_Fax")
		tm_liste_causes=tl_data[0]

		/*B affiche la liste des evts a traiter*/
		DB_CTRL_DISPLAY@(vl_fenetre,"TA_Evenements",TRUE)
		DB_CTRL_RETURN_ON_CHANGE@(vl_fenetre,"TA_Evenements",TRUE)
		DB_TABLE_SET_MARKER_WIDTH@(vl_fenetre, "TA_Evenements", 25)
		tl_titres[0] = COM_CAUSE_NUMERO,COM_CAUSE_LONG_NUMERO
		tl_titres[1] = COM_CAUSE_CLE,COM_CAUSE_LONG_CLE
		tl_titres[2] = COM_CAUSE_TYPE,COM_CAUSE_LONG_TYPE
		tl_titres[3] = COM_CAUSE_DATE,COM_CAUSE_LONG_DATE
		tl_titres[4] = COM_CAUSE_LOCALISATION,COM_CAUSE_LONG_LOCALISATION
		DB_TABLE_SET_DATA@(vl_fenetre,"TA_Evenements",tl_data[1],tl_titres)
		DB_TABLE_MARKER_PIXMAPS@(vl_fenetre, "TA_Evenements", 0, tl_data[2])



	/*B selection d'un element dans la liste des fiches a traiter*/	
  	CASE "TA_Evenements"
		MACRO_WINS_BUSY@()
		tl_retour=ITMA_COM_Validite_Cause("ITMA_TFX_Envoi_Fax",vl_fenetre,tm_liste_causes)
		vm_id_FMC = tl_retour[0]
		vl_libelle_FMC = tl_retour[1]
		DB_CTRL_TITLE@ (vl_fenetre, "LI_Evt_Lie", vl_libelle_FMC)
		IF ARRAY_SIZE@ (tm_dest) > 0 {
			/* DéGriser le bouton envoyer */
			DB_CTRL_GRAYED@ (vl_fenetre, "BP_envoyer", FALSE)
		}

		/*B Redefinir les actions valides sur les destinataires memorisees pour cette FMC */
		TFX_Actions_Dest_Memorises (vl_fenetre)



		/*A
		 * Sur choix "Rechercher Interlocuteur" invoquer MTLA
		 * --------------------------------------------------
		 */

		CASE "BP_Rech_Interlo"
			tl_interlo = PEND_FOR_NEW_TASK@ ("ITMA_TLA_Liste_Interlocuteurs", "ITMA_TFX_Envoi_Fax")

			/*B ajouter les interlocuteurs choisis aux destinataires s'ils ont un numero d'appel */
			vl_taille = ARRAY_SIZE@ (tm_dest)
			j = vl_taille
			FOR i = 0  TO (ARRAY_SIZE@ (tl_interlo) - 1)
				IF (tl_interlo[i].numero_appel <> NULL)
				{
					tm_info[j].num_interlo = tl_interlo[i].numero
					tm_dest[j].interlocuteur = tl_interlo[i].nom
					tm_dest[j].numero_appel = tl_interlo[i].numero_appel
					j = j + 1
				}
			NEXT i

			/*B si des destinataires sont ajoutes alors mettre a jour la visualisation */
			IF (j > vl_taille)
			{
				DB_TABLE_SET_NEW_DATA@(vl_fenetre,"TA_destinataires", tm_dest,0)

				DB_CTRL_GRAYED@ (vl_fenetre, "BP_envoyer", FALSE)
				IF vl_appelant = "MTPA" OR vl_appelant = "MTMC" {
					DB_CTRL_GRAYED@ (vl_fenetre, "BP_Expliquer_Dest", TRUE)
				}

				IF (vm_id_FMC.numero <> NULL)  AND  (vm_id_FMC.cle <> NULL) {
					DB_CTRL_GRAYED@ (vl_fenetre, "BP_Memo_Destinataires", FALSE)
				}
			}



		/*A
		 * Sur choix "Rechercher Astreinte" invoquer MTLS
		 * ----------------------------------------------
		 */

		CASE "BP_Rech_Astreinte"
			/*vl_sel = DB_TABLE_GET_SELECTIONS@ (vl_fenetre, "TA_destinataires")
			IF ARRAY_SIZE@ (vl_sel) = 0
				ERROR@ (C_ERR_IHM, C_LIB_CHOISIR_DEST)
			vl_sel = vl_sel[0]*/

			vl_tache = COM21_Tache_De_La_Macro ("ITMA_TLS_Liste_Astreintes")
			IF vl_tache = NULL {
				NEW_TASK@ ("ITMA_TLS_Liste_Astreintes",
								"ITMA_TFX_Envoi_Fax",null,null,null)
							/*	tm_info[vl_sel].num_type_astr,
								tm_info[vl_sel].num_autoroute,
								tm_info[vl_sel].PR)*/
			} ELSE {
				/*tl_data = { tm_info[vl_sel].num_type_astr,
				              tm_info[vl_sel].num_autoroute,
				              tm_info[vl_sel].PR }*/
				tl_data = { }
				DB_SEND_POKE@ (COM_CANAL_MTLS, ARRAY_TO_STRING@ (tl_data, MTAR_CAR_SEPAR))
			}


		/*A
		 * Sur choix "Quitter" si le fax a ete envoye retourner COM_VALIDE
		 * ---------------------------------------------------------------*/
		

		CASE "BP_quitter"
			IF vl_fax_envoye {
				vl_status = COM_VALIDE
			} ELSE {
				vl_status = COM_QUITTE
			}
			vl_fenetre_active = FALSE


		/*A
		 * Sur choix "Expliquer" invoquer MTEX pour visualiser le texte
		 * ------------------------------------------------------------
		 */

		CASE "BP_Expliquer_Dest"
			vl_sel = DB_TABLE_GET_SELECTIONS@ (vl_fenetre, "TA_destinataires")
			IF ARRAY_SIZE@ (vl_sel) = 0
				ERROR@ (C_ERR_IHM, C_LIB_CHOISIR_DEST)
			vl_sel = vl_sel[0]

			PEND_FOR_NEW_TASK@("ITMA_TEX_Explication_Propo",
								"ITMA_TFX_Envoi_Fax",
								tm_info[vl_sel].explication)


		/*A
		* appui sur le bouton refuser*/
		CASE "BP_refuser"
			vl_status = COM_REFUSE
			vl_fenetre_active = FALSE


		/*A
		* appui sur le bouton imprimer*/
		CASE "BP_imprimer"
			vl_fichier = C_MODELE_FAX ++ "_" ++ SYSTEM_VAR@ (vg_numero_poste)
			TFX_Produire_Document (vl_fenetre, vl_fichier, C_IMPRESSION)


		/*A
		 * Sur choix d'un type d'alerte, lire et afficher son texte
		 * --------------------------------------------------------
		 */

		CASE "BO_Type_Alerte"
			i = DB_CTRL_GET_VALUE@ (vl_fenetre, "BO_Type_Alerte")
			vl_fichier = SYSTEM_VAR@ (vg_repertoire_migrazur) ++ COM_SOUS_REP_MOD ++
			                tm_types_alerte[i].kle ++ ".txt"
			tl_texte = READ_ASCII_FILE@ (vl_fichier)
			DB_EDITBOX_SET_DATA@ (vl_fenetre, "BE_texte", tl_texte)

			/* autoriser l'envoi du mail */
			DB_CTRL_GRAYED@ (vl_fenetre, "BP_envoyer", FALSE)


		/*A
		* appui sur le bouton copier */
		CASE "BP_Copier"
			j=0
			tl_texte_select = null
			tl_select = null
			tl_texte = null
			tl_select = DB_EDITBOX_GET_SELECTION@(vl_fenetre, "BE_texte")
			tl_texte = DB_EDITBOX_GET_DATA@(vl_fenetre, "BE_texte")
			IF tl_select[2]=tl_select[0]
			{
				tl_texte_select[j]=SUBSTRING@(tl_texte[tl_select[0]], 
								tl_select[1], tl_select[3]-tl_select[1])
			}
			ELSE
			{
				tl_texte_select[j]=SUBSTRING@(tl_texte[tl_select[0]], tl_select[1])
				j=j+1
				FOR i=tl_select[0]+1 to tl_select[2]-1
					tl_texte_select[j]=tl_texte[i]
					j=j+1
				NEXT i
				tl_texte_select[j]=SUBSTRING@(tl_texte[tl_select[2]],1, tl_select[3]-1)
			}
			SET_SYSTEM_VAR@("vg_texte_copier_coller",tl_texte_select)

		/*A
		* appui sur le bouton coller */
		CASE "BP_Coller"
			j=0
			tl_coller = SYSTEM_VAR@("vg_texte_copier_coller")
			tl_texte_select = null
			tl_select = null
			tl_texte = null
			tl_select = DB_EDITBOX_GET_SELECTION@(vl_fenetre, "BE_texte")
			tl_texte = DB_EDITBOX_GET_DATA@(vl_fenetre, "BE_texte")
			FOR i=0 to tl_select[0]-1
				tl_texte_select[i]=tl_texte[i]
			NEXT i
			tl_texte_select[tl_select[0]] = SUBSTRING@(tl_texte[tl_select[0]],1, tl_select[1]-1)
									++tl_coller[0]
			IF ARRAY_SIZE@(tl_coller)>2
			{
				FOR i=1 to ARRAY_SIZE@(tl_coller)-2
					tl_texte_select[i+tl_select[0]]=tl_coller[i]
				NEXT i
			}
			IF ARRAY_SIZE@(tl_coller)>1
			{

				tl_texte_select[tl_select[0]+ARRAY_SIZE@(tl_coller)-1]=
					   tl_coller[ARRAY_SIZE@(tl_coller)-1]
					++ SUBSTRING@(tl_texte[tl_select[2]],tl_select[3])
			}
			ELSE
			{
				tl_texte_select[tl_select[0]]=tl_texte_select[tl_select[0]]
						++ SUBSTRING@(tl_texte[tl_select[2]],tl_select[3])
			}
			FOR i=tl_select[2]+1 to ARRAY_SIZE@(tl_texte)
				tl_texte_select[tl_select[0]+ARRAY_SIZE@(tl_coller)+j]= tl_texte[i]
				j=j+1
			NEXT i
			DB_EDITBOX_SET_DATA@(vl_fenetre, "BE_texte", tl_texte_select)



		/*A
		* reception d'un poke*/
		CASE "poke_"
			CASE OF DB_GET_POKE@(vl_fenetre)
				/*A
				* poke de fin*/
				CASE COM_CANAL_FIN
					vl_status = COM_QUITTE
					vl_fenetre_active = FALSE

				/*A
				 * Sur reception d'un message de MTFS
				 * lire les informations interlocuteur
				 * -----------------------------------
				 */

				CASE COM_CANAL_MTFX
					tl_data = DB_GET_POKE_DATA@ (vl_fenetre)
					tl_data = ARRAY_FROM_STRING@ (tl_data, MTAR_CAR_SEPAR)

					vm_destinataire.numero_appel = tl_data[0]
					vm_destinataire.numero = tl_data[1] + 0
					vm_destinataire.nom = tl_data[2]
					vm_type_astreinte.numero = tl_data[3] + 0
					vm_type_astreinte.nom = tl_data[4]
			ENDCASE

		ENDCASE
WEND

/*A
 * Signaler la fin du dialogue d'astreinte
 * ---------------------------------------
 */

DB_SEND_POKE@ (COM_CANAL_ASTREINTES)

RETURN (vl_status)

ENDMACRO




/*X*/
/* ----------------------------------------------------------------------------
* SERVICE RENDU :
*  Lit directement dans l'annuaire en base un interlocuteur par son nom.
-------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO TFX_Lit_Interlocuteur (va_format_nom, FORMAT TFA_Contact_Interlocuteur ta_interlocuteurs)

/*
* ARGUMENTS EN ENTREE :
*  va_format_nom      : Format du nom des interlocuteurs cherches (debut du nom).
*
*
* ARGUMENTS EN SORTIE :
*  ta_interlocuteurs  : Liste des interlocuteurs trouves.
*
*
* CODE RETOUR         : COM_OK en cas d'execution correcte, COM_NOK sinon.
*
* CONDITION D'UTILISATION
*   ITMA_TFX_Envoi_Fax
*
* FONCTION
*   Recherche en base de donnees et rretourne le ou les interlocuteurs
*   dont le nom repond au critere (prefixe) donne en argument.
*
---------------------------------------------------------------------------- */

	VAR	FORMAT SQL_Procedure_Params@	vl_parametres
	VAR	FORMAT SQL_Procedure_Result@	vl_resultats
	VAR	FORMAT TFA_Contact_Interlocuteur	tl_interlocuteurs
	VAR	vl_site_local

vl_site_local = SYSTEM_VAR@ (vg_site)
IF ( vl_site_local = XDC_CI ) vl_site_local = NULL

vl_parametres[0].type = SYB#CHAR_
vl_parametres[0].data = va_format_nom
vl_parametres[0].output = FALSE

vl_parametres[1].type = SYB#INT4_
vl_parametres[1].data = vl_site_local
vl_parametres[1].output = FALSE

IF COM05_SQL_Procedure (XZAN15_Rechercher_Annuaire,
			   vl_parametres, vl_resultats, C_MODULE) <> COM_OK
{
	ta_interlocuteurs = { }
	RETURN (COM_NOK)
}

ta_interlocuteurs = vl_resultats.select_results[0]
RETURN (COM_OK)

ENDMACRO




/*X*/
/* ----------------------------------------------------------------------------
* SERVICE RENDU :
*  Definit l'etat des boutons de meorisation / recuperation des destinataires
*  de fax refletant la validite des actions en fonction des donnees.
-------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO TFX_Actions_Dest_Memorises (va_fenetre)

/*
* ARGUMENTS EN ENTREE : Aucun
*  va_fenetre         : Id. de la fenetre contenant les objets visualises.
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*   ITMA_TFX_Envoi_Fax
*
* FONCTION
*   Grise ou degrise les boutons de Memorisation / recuperation
*   des destinataires de fax en fonction des donnees (FMC liee ...).
*
---------------------------------------------------------------------------- */

	VAR i

DB_CTRL_GRAYED@ (va_fenetre, "BP_Memo_Destinataires", TRUE)
DB_CTRL_GRAYED@ (va_fenetre, "BP_Recup_Destinataires", TRUE)

IF (vm_id_FMC.numero <> NULL)  AND  (vm_id_FMC.cle <> NULL) {
	IF ARRAY_SIZE@ (tm_dest) > 0 {
		DB_CTRL_GRAYED@ (va_fenetre, "BP_Memo_Destinataires", FALSE)
	}

	/* Rechercher si une liste de destinataires est memorisee pour cette FMC */
	FOR i = 0 TO ARRAY_SIZE@ (tm_dest_memo) - 1
		IF (tm_dest_memo[i].kle = vm_id_FMC)
		{
			DB_CTRL_GRAYED@ (va_fenetre, "BP_Recup_Destinataires", FALSE)
			BREAK i
		}
	NEXT i
}
ENDMACRO




/*X*/
/* ----------------------------------------------------------------------------
* SERVICE RENDU :
*  Initialise la visualisation dans le cas d'appel depuis MTPA.
-------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO TFX_Init_MTPA (va_fenetre, va_num_PA, va_num_ordre, va_explication)

/*
* ARGUMENTS EN ENTREE :
*  va_fenetre         : Id. de la fenetre contenant les objets a valuer ;
*  va_num_PA          : Numero du plan d'action ;
*  va_num_ordre       : Numero d'ordre du plan d'action.
*
*
* ARGUMENTS EN SORTIE :
*  va_explication     : Le texte d'explication.
*
*
* CODE RETOUR         : COM_OK en cas d'execution correcte, COM_NOK sinon.
*
* CONDITION D'UTILISATION
*   ITMA_TFX_Envoi_Fax
*
* FONCTION
*   Lit en base de donnees la proposition d'envoi de fax ;
*   value le champ "Remarque", le texte du fax et la table des destinataires
*   a l'ecran et retourne le texte d'explication.
*
---------------------------------------------------------------------------- */

    VAR FORMAT TDO_Type_Astreinte vl_l_types_astreintes
    VAR vl_l_num_types

    VAR FORMAT SQL_Procedure_Params@ vl_parametres
    VAR FORMAT SQL_Procedure_Result@ vl_resultats
    VAR FORMAT TFX_Donnees_Fax vl_data
    VAR vl_texte, vl_texte_marque
    VAR vl_idx_type, vl_taille, i

MACRO_WINS_BUSY@()

/*A
 * Lire la proposition d'envoi en base de donnees
 * ----------------------------------------------
 */

vl_parametres[0].type = COM_Numero_PA
vl_parametres[0].data = va_num_PA
vl_parametres[0].output = FALSE

vl_parametres[1].type = COM_Numero_Ordre_PA
vl_parametres[1].data = va_num_ordre
vl_parametres[1].output = FALSE

vl_parametres[2].type = SYB#CHAR_						' Remarque
vl_parametres[2].output = TRUE

vl_parametres[3].type = SYB#CHAR_						' Texte d'explication
vl_parametres[3].output = TRUE

IF COM05_SQL_Procedure (XZAP17_Lire_Prop_Fax,
			   vl_parametres, vl_resultats, C_MODULE) <> COM_OK
    RETURN (COM_NOK)
/*A
 * Afficher la remarque et le texte du fax
 * ---------------------------------------
 */
/*
DB_CTRL_TITLE@ (va_fenetre, "LI_Remarque", vl_resultats.return_parameters[0])

va_explication = vl_resultats.return_parameters[1]
*/

vl_data = ARRAY_COLUMN@ (vl_resultats.select_results[0], 0)
vl_taille = ARRAY_SIZE@ (vl_data)

/*B Coller les fragments de texte */
FOR i = 0  TO (vl_taille - 1)
    vl_texte = vl_texte ++ vl_data[i]

    /*! ajout d'un blanc en fin de ligne s'il manque un caractere */
    IF LEN@(vl_data[i]) < 250
	vl_texte = vl_texte ++ " "
NEXT i

/*B Composer le texte visualise et envoye selon le mode */
TFX_Texte_Marque_Selon_Mode (vl_texte, vl_texte_marque)

/*A si pilotage auto alors on memorise le txte sinon on met à jour la boite de dialogue */
IF (vm_auto=XDC_VRAI) {
	vm_texte=vl_texte_marque
} ELSE {
	DB_EDITBOX_SET_DATA@ (va_fenetre, "BE_texte", vl_texte_marque)
}

/*! il faut effacer les n premieres lignes qui proviennent du 1° select 
* sur les morceaux de texte*/
vl_data = SUBARRAY@ (vl_resultats.select_results[1], vl_taille)

/*A
 * Pour chaque proposition d'envoi, afficher le nom de
 * l'interlocuteur, le numero d'appel et le type d'astreinte
 * ---------------------------------------------------------
 */
vl_l_types_astreintes = SYSTEM_VAR@ (vg_les_types_astreintes)
vl_l_num_types = ARRAY_COLUMN@ (vl_l_types_astreintes,TDO_NUMERO_TYPE_ASTREINTE)

FOR i = 0  TO ARRAY_SIZE@ (vl_data) - 1
	tm_info[i].PR = vl_data[i].PR
	tm_info[i].num_autoroute = vl_data[i].num_autoroute
	tm_info[i].num_type_astr = vl_data[i].type_astreinte
	tm_info[i].explication = vl_data[i].explication
	tm_info[i].num_interlo = vl_data[i].num_interlo
	tm_info[i].num_comp = vl_data[i].num_comp
	tm_info[i].sms = vl_data[i].sms
	if (vl_data[i].sms+0=1)
		vm_SMS=XDC_VRAI

	vl_idx_type = ARRAY_INDEX@ (vl_l_num_types, tm_info[i].num_type_astr)
	IF vl_idx_type >= 0 {
		tm_dest[i].type_astreinte = vl_l_types_astreintes[vl_idx_type].nom
	} ELSE {
		tm_dest[i].type_astreinte = NULL
	}
	tm_dest[i].interlocuteur = vl_data[i].nom_interlo
	tm_dest[i].numero_appel = vl_data[i].numero_appel
NEXT i

if (vm_auto=XDC_FAUX) {
	DB_TABLE_SET_NEW_DATA@(va_fenetre,"TA_destinataires",tm_dest,0)
}

RETURN (COM_OK)

ENDMACRO




/*X*/
/* ----------------------------------------------------------------------------
* SERVICE RENDU :
* met a jour les actions d'envoi de fax en base
-------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO TFX_Actions_Fax (va_fenetre)

/*
* ARGUMENTS EN ENTREE :
*  va_fenetre         : Id. de la fenetre contenant les objets a valuer ;
*
*
* ARGUMENTS EN SORTIE :
*
*
* CODE RETOUR         : COM_OK en cas d'execution correcte, COM_NOK sinon.
*
* CONDITION D'UTILISATION
*   ITMA_TFX_Envoi_Fax
*
* FONCTION
*
---------------------------------------------------------------------------- */

	VAR FORMAT SQL_Procedure_Params@ vl_parametres
     VAR FORMAT SQL_Procedure_Result@ vl_resultats
     VAR vl_indice
	VAR vl_cr
	VAR vl_taille
	VAR vl_actionInseree
	VAR vl_indexParam
	VAR vl_texte 
	VAR vl_longueurTexte, vl_depart
	VAR vl_horodate,vl_string
	VAR vl_num_1ere_Action

	MACRO_WINS_BUSY@()

	vl_actionInseree=FALSE
	tm_num_actions= {}

	/*A recupere l'heure courante et la formate*/
	vl_horodate=COM09_Date_Courante()

	/*A recupere le texte du fax*/
	if (vm_auto=XDC_VRAI)
	{
		vl_texte=vm_texte
	} else {
		vl_texte=DB_EDITBOX_GET_DATA@(va_fenetre,"BE_texte")
		vl_texte=ARRAY_TO_STRING@(vl_texte,"\n")
	}
	vl_longueurTexte=LEN@(vl_texte)
/*A
 * ecrire la proposition d'envoi en base de donnees pour le 1° destinataire
 * ------------------------------------------------------------------------
 */
	/*A pour tous les destinataires*/
	FOR vl_indice=0 TO (ARRAY_SIZE@(tm_dest)-1)
		/*A si le destinataire a un numero associe*/
		IF (STRING_INDEX@(tm_dest[vl_indice].numero_appel,"@")<>0)
		{
		IF (tm_info[vl_indice].num_interlo<>null) 
			/*A si l'action n'a pas ete encore inseree*/
			IF (vl_actionInseree=FALSE)
			{	
				/*A je l'insere en base*/
				vl_indexParam=0
				vl_parametres[vl_indexParam].type = SYB#INT4_
				vl_parametres[vl_indexParam].data = vm_id_FMC.numero
				vl_parametres[vl_indexParam].output = FALSE
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#INT4_
				vl_parametres[vl_indexParam].data = vm_id_FMC.cle
				vl_parametres[vl_indexParam].output = FALSE
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#CHAR_
				vl_parametres[vl_indexParam].data = SUBSTRING@(vl_texte,1,250)
				vl_parametres[vl_indexParam].output = FALSE
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#INT4_
				vl_parametres[vl_indexParam].data =
									 tm_info[vl_indice].num_interlo
				vl_parametres[vl_indexParam].output = FALSE
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#INT4_
				vl_parametres[vl_indexParam].data = 
									tm_info[vl_indice].num_type_astr
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#CHAR_
				vl_parametres[vl_indexParam].data = 
									tm_dest[vl_indice].numero_appel++""
				vl_parametres[vl_indexParam].output = FALSE
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#DATETIME_
				vl_parametres[vl_indexParam].data = vl_horodate
				vl_parametres[vl_indexParam].output = FALSE
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#INT4_
				vl_parametres[vl_indexParam].data = SYSTEM_VAR@(vg_numero_poste)
				vl_parametres[vl_indexParam].output = FALSE
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#INT4_
				vl_parametres[vl_indexParam].output = TRUE
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#INT2_
				vl_parametres[vl_indexParam].data =  vm_SMS
				vl_parametres[vl_indexParam].output = FALSE
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#CHAR_
				vl_parametres[vl_indexParam].data = SYSTEM_VAR@(vg_nom_site)
				vl_parametres[vl_indexParam].output = FALSE

				/*A demander un numero d'action pour le premier destinataire*/
				IF COM05_SQL_Procedure (XZAC09_Ajouter_Fax,
						vl_parametres, vl_resultats, C_MODULE) <> COM_OK
				{
					INFO_MESSAGE@("Impossible de creer l'action en base")
					RETURN (COM_NOK)
				}
				if (vm_SMS = XDC_FAUX)
					vl_actionInseree=TRUE
				vl_num_1ere_Action=vl_resultats.return_parameters[0]
				tm_num_actions[vl_indice]=vl_num_1ere_Action

				/*A Si le fax a plus de 250 caracteres, ajout de la suite du */
				/*A texte en base */
				vl_longueurTexte = vl_longueurTexte - 250
				vl_depart = 251
				WHILE vl_longueurTexte > 0


					vl_indexParam=0
					vl_parametres[vl_indexParam].type = SYB#INT4_
					vl_parametres[vl_indexParam].data = vl_num_1ere_Action
					vl_parametres[vl_indexParam].output = FALSE
					vl_indexParam=vl_indexParam+1
					vl_parametres[vl_indexParam].type = SYB#INT4_
					vl_parametres[vl_indexParam].data = SYSTEM_VAR@(vg_site)
					vl_parametres[vl_indexParam].output = FALSE
					vl_indexParam=vl_indexParam+1
					vl_parametres[vl_indexParam].type = SYB#CHAR_
					vl_parametres[vl_indexParam].data = SUBSTRING@(vl_texte, vl_depart, 250)
					vl_parametres[vl_indexParam].output = FALSE
					vl_indexParam=vl_indexParam+1
					vl_parametres[vl_indexParam].type = SYB#CHAR_
					vl_parametres[vl_indexParam].data = SYSTEM_VAR@(vg_nom_site)
					vl_parametres[vl_indexParam].output = FALSE

					/*A demander un numero d'action pour le premier destinataire*/
					IF COM05_SQL_Procedure (XZAC54_Ajouter_Texte_Fax,
						vl_parametres, vl_resultats, C_MODULE) <> COM_OK
					{
						INFO_MESSAGE@("Impossible de sauvegarder le texte du fax en base")
						RETURN (COM_NOK)
					}
					vl_longueurTexte = vl_longueurTexte - 250
					vl_depart = vl_depart + 250
				WEND
			}
			ELSE
			{				
				/*A ajouter les autres destinataires*/
				vl_indexParam=0
				vl_parametres[vl_indexParam].type = SYB#INT4_
				vl_parametres[vl_indexParam].data = vl_num_1ere_Action
				vl_parametres[vl_indexParam].output = FALSE
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#INT4_
				vl_parametres[vl_indexParam].data = SYSTEM_VAR@(vg_site)
				vl_parametres[vl_indexParam].output = FALSE
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#INT4_
				vl_parametres[vl_indexParam].data =
									 tm_info[vl_indice].num_interlo
				vl_parametres[vl_indexParam].output = FALSE
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#INT4_
				vl_parametres[vl_indexParam].data = 
									tm_info[vl_indice].num_type_astr
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#CHAR_
				vl_parametres[vl_indexParam].data = 
									tm_dest[vl_indice].numero_appel++""
				vl_parametres[vl_indexParam].output = FALSE
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#DATETIME_
				vl_parametres[vl_indexParam].data = vl_horodate
				vl_parametres[vl_indexParam].output = FALSE
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#INT4_
				vl_parametres[vl_indexParam].data = SYSTEM_VAR@(vg_numero_poste)
				vl_parametres[vl_indexParam].output = FALSE
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#INT4_
				vl_parametres[vl_indexParam].output = TRUE
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#CHAR_
				vl_parametres[vl_indexParam].data = SYSTEM_VAR@(vg_nom_site)
				vl_parametres[vl_indexParam].output = FALSE

				IF COM05_SQL_Procedure (XZAC10_Ajouter_Dest_Fax,
							vl_parametres, vl_resultats, C_MODULE) <> COM_OK
				{
					COM01_Trace(COM_DEBUG1,"Envoi Mail Erreur ajout destinataire fax "++vl_num_1ere_Action++" "++tm_dest[vl_indice].numero_appel)
				/*A Mise en echec de l action par XZAC18*/
				vl_indexParam=0
				vl_parametres[vl_indexParam].type = SYB#INT4_
				vl_parametres[vl_indexParam].data = vl_num_1ere_Action
				vl_parametres[vl_indexParam].output = FALSE
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#INT4_
				vl_parametres[vl_indexParam].data = SYSTEM_VAR@(vg_site)
				vl_parametres[vl_indexParam].output = FALSE
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#DATETIME_
				vl_parametres[vl_indexParam].data = NULL
				vl_parametres[vl_indexParam].output = FALSE
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#DATETIME_
				vl_parametres[vl_indexParam].data = vl_horodate
				vl_parametres[vl_indexParam].output = FALSE
				vl_indexParam=vl_indexParam+1
				vl_parametres[vl_indexParam].type = SYB#CHAR_                               ' Site local
				vl_parametres[vl_indexParam].data = SYSTEM_VAR@(vg_nom_site)
				vl_parametres[vl_indexParam].output = FALSE


				COM05_SQL_Procedure (XZAC18_Ecrire_CR_Fax,
							vl_parametres, vl_resultats, C_MODULE)
					
					INFO_MESSAGE@ ("Erreur ajout destinataire fax")
					RETURN (COM_NOK)
				}		
				tm_num_actions[vl_indice]= vl_resultats.return_parameters[0]
			}

		/*A je sauve l'appel fax en base*/
		vl_indexParam=0
		vl_parametres[vl_indexParam].type = SYB#DATETIME_
		vl_parametres[vl_indexParam].data = vl_horodate
		vl_parametres[vl_indexParam].output = FALSE
		vl_indexParam=vl_indexParam+1
		vl_parametres[vl_indexParam].type = SYB#CHAR_
		vl_parametres[vl_indexParam].data = tm_dest[vl_indice].numero_appel++""
		vl_parametres[vl_indexParam].output = FALSE
		IF COM05_SQL_Procedure (XZAL03_CR_Envoi_Fax,
						vl_parametres, vl_resultats, C_MODULE) <> COM_OK
		{
			INFO_MESSAGE@ ("Erreur ajout destinataire fax")
			RETURN (COM_NOK)
		}		
		}
		ELSE
		{
		        INFO_MESSAGE@ ("Impossible d'envoyer Mail à "++tm_dest[vl_indice].interlocuteur++" "++tm_dest[vl_indice].numero_appel)
	        }

	NEXT vl_indice

	RETURN (COM_OK)
ENDFUNCTION




/*X*/
/* ----------------------------------------------------------------------------
* SERVICE RENDU :
*  Produit un document visualisant les donnees presentes a l'ecran.
-------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO TFX_Produire_Document (va_fenetre, va_fichier, va_destination)

/*
* ARGUMENTS EN ENTREE :
*  va_fenetre         : Id. de la fenetre contenant les objets ;
*  va_fichier         : Fichier a produire ;
*  va_destination     : Destination du fichier formate (modem fax ou impression)
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : COM_OK en cas d'execution correcte, COM_NOK sinon.
*
* CONDITION D'UTILISATION
*   ITMA_TFX_Envoi_Fax
*
* FONCTION
*   Produit un fichier de nom indique et dans le format precise
*   a partir des informations visualisees a l'ecran.
*
---------------------------------------------------------------------------- */

    VAR FORMAT TDO_District vl_les_sites
    VAR vl_site
    VAR vl_script
    VAR tl_texte, tl_texte_filtre, tl_annotation_filtree
    VAR vl_liste, vl_telecopie
    VAR vl_date_document
    VAR vl_index
    VAR vl_objet

ON ERROR 
{
	WP_EXIT@()
	RETURN (COM_NOK)
}
/*
 * Remplacement des caracteres posant un probleme a l'envoi
 * --------------------------------------------------------
 */
IF va_destination=C_MODEM OR va_destination=C_MAIL
{
	vl_script = C_SCRIPT_CARACT_SPECIAUX

	if (vm_auto=XDC_VRAI)
	{
		tl_texte = { vm_texte }
	}
	else
	{
		tl_texte = DB_EDITBOX_GET_DATA@ (va_fenetre, "BE_texte")
	}
	WRITE_ASCII_FILE@(C_FICHIER_TEMPO, tl_texte)
	SHELL_COMMAND@(vl_script ++ " " ++ C_FICHIER_TEMPO ++ " " ++ C_FICHIER_RESULT)
	tl_texte_filtre = 	READ_ASCII_FILE@(C_FICHIER_RESULT)

	tl_texte = NULL
	if (vm_auto=XDC_FAUX)
	{
		tl_texte = DB_EDITBOX_GET_DATA@ (va_fenetre, "BE_annotation")
	}
/*	if (vm_auto=XDC_VRAI)
		tl_texte[0] = "Envoi semi-automatique."*/


	WRITE_ASCII_FILE@(C_FICHIER_TEMPO, tl_texte)
	SHELL_COMMAND@(vl_script ++ " " ++ C_FICHIER_TEMPO ++ " " ++ C_FICHIER_RESULT)
	tl_annotation_filtree = 	READ_ASCII_FILE@(C_FICHIER_RESULT)

	SHELL_COMMAND@("rm "++ C_FICHIER_TEMPO ++ " " ++ C_FICHIER_RESULT)
}
ELSE	
{
	tl_texte_filtre = DB_EDITBOX_GET_DATA@ (va_fenetre, "BE_texte")
	tl_annotation_filtree = DB_EDITBOX_GET_DATA@ (va_fenetre, "BE_annotation")
}


IF (va_destination=C_MAIL)
{
	tl_texte=ARRAY_APPEND@(tl_texte_filtre,tl_annotation_filtree)
	tl_texte=ARRAY_APPEND@(tl_texte, { "" })
	if (vm_appelant = "MSMS")
		tl_texte = ARRAY_DELETE@(tl_texte,0)

	WRITE_ASCII_FILE@(va_fichier,tl_texte)

	/* Retourner la premiere ligne en tant qu'objet du mail */
	vl_objet = tl_texte_filtre[0]
	RETURN (vl_objet)
}

/*A
 * Ouvrir le traitement de texte et charger le modele de fax
 * ---------------------------------------------------------
 */

WP_APPLICATION_DLG@(NULL, TRUE)
WP_LOAD_FILE@ (SYSTEM_VAR@ (vg_repertoire_migrazur) ++
				COM_SOUS_REP_IHM ++ C_MODELE_FAX ++ ".aw")


/*
 * Valuer la date et l'heure dans l'en-tete du document produit
 * ------------------------------------------------------------
 */

IF (vm_date_action_fax <> NULL) {
	vl_date_document = vm_date_action_fax
	WP_SET_DOC_VAR@ ("date_en_tete", "Envoyé le " ++ SUBSTRING@ (vl_date_document, 1, 10))
} ELSE {
	vl_date_document = COM09_Date_Courante (TRUE)
	WP_SET_DOC_VAR@ ("date_en_tete", "Le " ++ SUBSTRING@ (vl_date_document, 1, 10))
}
WP_SET_DOC_VAR@ ("heure_en_tete", SUBSTRING@ (vl_date_document, 12, 8))


/*
 * Valuer le nom du site expediteur,
 * l'adresse et le numero de telecopie
 * -----------------------------------
 */

vl_les_sites = SYSTEM_VAR@ (vg_les_districts)
vl_site = SYSTEM_VAR@ (vg_site)
vl_index = ARRAY_INDEX@ (ARRAY_COLUMN@ (vl_les_sites, TDO_NUMERO_DISTRICT), vl_site)

IF vl_site = XDC_CI
	vl_site = vl_les_sites[vl_index].nom
ELSE vl_site = "Région " ++ vl_les_sites[vl_index].nom
WP_SET_DOC_VAR@ ("site", vl_site)


/*
 * Valuer l'adresse et le numero de telecopie selon le site
 * --------------------------------------------------------
 */

CASE OF  SYSTEM_VAR@ (vg_site)
CASE XDC_CI
    vl_telecopie = TAN_FAX_CI
    vl_liste = TAN_ADR1_CI, TAN_ADR2_CI, "Tél : " ++ TAN_TEL_CI
CASE XDC_CA
    vl_telecopie = TAN_FAX_CA
    vl_liste = TAN_ADR1_CA, TAN_ADR2_CA, "Tél : " ++ TAN_TEL_CA
CASE XDC_VE
    vl_telecopie = TAN_FAX_VE
    vl_liste = TAN_ADR1_VE, TAN_ADR2_VE, "Tél : " ++ TAN_TEL_VE
CASE XDC_PR
    vl_telecopie = TAN_FAX_PR
    vl_liste = TAN_ADR1_PR, TAN_ADR2_PR, "Tél : " ++ TAN_TEL_PR
CASE XDC_VD
    vl_telecopie = TAN_FAX_VD
    vl_liste = TAN_ADR1_VD, TAN_ADR2_VD, "Tél : " ++ TAN_TEL_VD
ENDCASE

WP_SET_DOC_VAR@ ("telecopie", vl_telecopie)

WP_SET_DOC_VAR@ ("adresse1", vl_liste[0])
WP_SET_DOC_VAR@ ("adresse2", vl_liste[1])
WP_SET_DOC_VAR@ ("adresse3", vl_liste[2])


/*
 * Valuer la liste des destinataires et leur numero
 * ------------------------------------------------
 */

if (vm_auto=XDC_VRAI) {
	vl_liste = tm_dest
} else {
	vl_liste = DB_TABLE_GET_DATA@ (va_fenetre, "TA_destinataires")
}


IF NOT IS_NULL@(vl_liste) {
	/* si pas le type d'astreinte alors prendre le nom des interlocuteurs */
/*	IF vl_liste[0][0]<>NULL
		vl_liste = ARRAY_DELETE@ (ARRAY_TRANSPOSE@ (vl_liste), 1)
	ELSE	*/
	vl_liste = ARRAY_DELETE@ (ARRAY_TRANSPOSE@ (vl_liste), 0)
	WP_SET_DOC_VAR@ ("destinataires", ARRAY_TRANSPOSE@ (vl_liste))
}


/*
 * Valuer le texte et l'annotation
 * -------------------------------
 */
IF ARRAY_SIZE@ (tl_texte_filtre) > 0 {
	WP_SET_DOC_VAR@ ("texte", tl_texte_filtre)
}
IF ARRAY_SIZE@ (tl_annotation_filtree) > 0 {
	WP_SET_DOC_VAR@ ("annotation", tl_annotation_filtree)
}


/*
 * Produire le fichier dans le format voulu
 * puis quitter le traitement de texte
 * ----------------------------------------
 */
 IF va_destination=C_MODEM
 {
	WP_PRINT@ (NULL, FALSE, 1, FALSE, TRUE, 0, 0, FALSE, NULL, va_fichier,
			NULL, NULL, NULL, NULL, NULL, FALSE, COM_FORMAT_PS)

	WP_EXIT@()
 }
 IF va_destination=C_IMPRESSION
 {
	COM36_Imprimer_Texte(va_fichier)
 }

RETURN (COM_OK)

ENDMACRO




/*X*/
/* ----------------------------------------------------------------------------
* SERVICE RENDU :
*  Afficher les caracteristiques de l'action fax en consultation
*  et initialise la fenetre
-------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO TFX_Consulter_Fax (va_fenetre, ta_args)

/*
* ARGUMENTS EN ENTREE :
*  va_fenetre         : Id. de la fenetre contenant les objets ;
*  ta_args            : tableau contenant info action
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : COM_OK en cas d'execution correcte, COM_NOK sinon.
*
* CONDITION D'UTILISATION
*   ITMA_TFX_Envoi_Fax
*
* FONCTION
*
---------------------------------------------------------------------------- */

VAR i
VAR vl_action
VAR vl_site
VAR vl_libelle_FMC
VAR vl_num_appel
VAR vl_interlocuteur
VAR vl_operateur
VAR vl_lancement
VAR vl_succes
VAR vl_echec
VAr vl_texte
VAr vl_taille
VAr vl_data
VAR FORMAT SQL_Procedure_Params@ vl_parametres
VAR FORMAT SQL_Procedure_Result@ vl_resultats

	MACRO_WINS_BUSY@()

	vl_action = ta_args[2]
	vl_site = ta_args[3]
	vl_libelle_FMC = ta_args[4]

	/*A initialisation des widgets */
	DB_CTRL_DISPLAY@ (va_fenetre, "LI_Destinataires", FALSE)
	DB_CTRL_DISPLAY@ (va_fenetre, "BP_lier_fmc", FALSE)
	DB_CTRL_DISPLAY@ (va_fenetre, "BP_ajouter", FALSE)
	DB_CTRL_DISPLAY@ (va_fenetre, "BP_modifier", FALSE)
	DB_CTRL_DISPLAY@ (va_fenetre, "BP_Memo_Destinataires", FALSE)
	DB_CTRL_DISPLAY@ (va_fenetre, "BP_Recup_Destinataires", FALSE)
	DB_CTRL_DISPLAY@ (va_fenetre, "BP_Expliquer_Dest", FALSE)
	DB_CTRL_DISPLAY@ (va_fenetre, "TA_destinataires", FALSE)
	DB_CTRL_DISPLAY@ (va_fenetre, "BP_Rech_Astreinte", FALSE)
	DB_CTRL_DISPLAY@ (va_fenetre, "BP_supprimer", FALSE)
	DB_CTRL_DISPLAY@ (va_fenetre, "BP_Rech_Interlo", FALSE)
	DB_CTRL_DISPLAY@ (va_fenetre, "BP_refuser", FALSE)
	DB_CTRL_DISPLAY@ (va_fenetre, "BP_envoyer", FALSE)
	DB_CTRL_DISPLAY@ (va_fenetre, "BP_imprimer", TRUE)

	/*A preparation des parametres de la requete */
	i=0
	vl_parametres[i].type = SYB#INT4_
	vl_parametres[i].data = vl_action
	vl_parametres[i].output = FALSE
	i=i+1

	vl_parametres[i].type = SYB#INT1_
	vl_parametres[i].data = vl_site
	vl_parametres[i].output = FALSE
	i=i+1

	vl_parametres[i].type = SYB#CHAR_
	vl_parametres[i].data = vl_interlocuteur
	vl_parametres[i].output = TRUE
	i=i+1

	vl_parametres[i].type = SYB#CHAR_
	vl_parametres[i].data = vl_num_appel
	vl_parametres[i].output = TRUE
	i=i+1

	vl_parametres[i].type = SYB#DATETIME_
	vl_parametres[i].data = vl_lancement
	vl_parametres[i].output = TRUE
	i=i+1

	vl_parametres[i].type = SYB#INT4_
	vl_parametres[i].data = vl_operateur
	vl_parametres[i].output = TRUE
	i=i+1

	vl_parametres[i].type = SYB#DATETIME_
	vl_parametres[i].data = vl_succes
	vl_parametres[i].output = TRUE
	i=i+1

	vl_parametres[i].type = SYB#DATETIME_
	vl_parametres[i].data = vl_echec
	vl_parametres[i].output = TRUE
	i=i+1

	/*A execution de la requete de lecture de fax */
	IF COM05_SQL_PROCEDURE(XZAC30_Lire_Fax,
				vl_parametres, vl_resultats, C_MODULE) <> COM_OK
	{
		INFO_MESSAGE@("Erreur dans la lecture de l'action fax")
		RETURN (COM_NOK)
	}

	DB_CTRL_TITLE@ (va_fenetre, "LI_Evt_Lie", vl_libelle_FMC)
	DB_CTRL_TITLE@ (va_fenetre, "LI_Remarque", NULL)

	vm_destinataire.nom = vl_resultats.return_parameters[0]
	vm_destinataire.numero_appel = vl_resultats.return_parameters[1]


	/*A
 	* Afficher le texte du fax
 	* ------------------------
 	*/

	vl_data = ARRAY_COLUMN@ (vl_resultats.select_results[0], 0)
	vl_taille = ARRAY_SIZE@ (vl_data)

	/*B Coller les fragments de texte */
	FOR i = 0  TO (vl_taille - 1)
		vl_texte = vl_texte ++ vl_data[i]
	NEXT i

	DB_DISPLAY@ (va_fenetre)

	DB_EDITBOX_SET_DATA@ (va_fenetre, "BE_texte", { vl_texte })


	/*A
	 * Determiner l'horodate de l'operation d'envoi de fax
	 * ---------------------------------------------------
	 */

	vl_lancement = COM18_Date_SGBD_Formatee (vl_resultats.return_parameters[2])
	vl_succes = COM18_Date_SGBD_Formatee (vl_resultats.return_parameters[4])
	vl_echec = COM18_Date_SGBD_Formatee (vl_resultats.return_parameters[5])
	IF (vl_succes <> NULL) {
		vm_date_action_fax = vl_succes
	} ELSE IF (vl_echec <> NULL) {
		vm_date_action_fax = vl_echec
	} ELSE {
		vm_date_action_fax = vl_lancement
	}

	RETURN (COM_OK)
ENDMACRO




/*X*/
/* ----------------------------------------------------------------------------
* SERVICE RENDU :
*  Afficher un fax pre-renseigne suivant le type de fmc
-------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO TFX_Afficher_Fax_Prerenseigne (va_fenetre, ta_args, FORMAT TMC_fmc va_fiche)

/*
* ARGUMENTS EN ENTREE :
*  va_fenetre         : Id. de la fenetre contenant les objets ;
*  ta_args            : tableau contenant info evt
*  va_fiche           : fiche main courante evt
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : COM_OK en cas d'execution correcte, COM_NOK sinon.
*
* CONDITION D'UTILISATION
*   ITMA_TFX_Envoi_Fax
*
* FONCTION
*
---------------------------------------------------------------------------- */

VAR vl_Fichier
VAR FORMAT TMC_fmc tl_CaractGen		/* caracteristiques generiques */
VAR FORMAT TMC_meteo tl_meteo		/* caracteristiques de la partie specifique */
VAR FORMAT TMC_chaussee tl_chaussee
VAR FORMAT TMC_sousconce tl_conces
VAR FORMAT TMC_travaux tl_travaux, tl_stockage
VAR FORMAT TMC_bascul tl_bascul
VAR FORMAT TMC_accident tl_accident
VAR FORMAT TMC_Fiche_Vehicule tl_vehicule
VAR FORMAT TMC_bouchon tl_bouchon
VAR FORMAT TMC_delestage tl_delestage
VAR FORMAT TMC_echangeur tl_echangeur
VAR FORMAT TMC_manif tl_manif
VAR FORMAT TMC_veh_lent tl_vehlent
VAR FORMAT TMC_incendie tl_incendie
VAR FORMAT TMC_regul	tl_reg

VAR FORMAT  T_zone  tl_zones
VAR     FORMAT TDO_Libelle_Predefini    tl_mesure, tl_mesure_valid

VAR vl_IntituleFMC			/* intitule de la fmc */
VAR vl_IntituleCause		/* intitule de la cause de la fmc */
VAR vl_IntituleAlerte		/* intitule de l'alerte de la fmc */
VAR vl_Localisation			/* localisation de la fmc */
VAR vl_LocalisationTete		/* localisation de la fmc tete de bouchon */
VAR tl_Types				/* listes des types fmc */
VAR tl_tableau, tl_tableauvalide
VAR vl_type_lib, vl_index, vl_indice
VAR FORMAT TDO_Autoroute tl_autoroutes
VAR vl_modele
VAR tl_texte, tl_texte_propose
VAR vl_voies
VAR vl_LibSens


ON ERROR 
{
	WP_EXIT@()
	RETURN (COM_NOK)
}

MACRO_WINS_BUSY@()

/*dump_array@(ta_args)
dump_array@(va_fiche)*/

/*A valuation des var. internes */
tl_CaractGen = va_fiche
vl_IntituleFMC = ta_args[4]
vl_IntituleCause = ta_args[8]
vl_Localisation = ta_args[9]
vl_LocalisationTete = ta_args[10]
vl_IntituleAlerte = ta_args[11]

vm_id_FMC.numero = tl_CaractGen.numero
vm_id_FMC.cle = tl_CaractGen.cle

DB_CTRL_DISPLAY@ (va_fenetre, "BP_lier_fmc", FALSE)
DB_CTRL_DISPLAY@ (va_fenetre, "BP_refuser", FALSE)

/*A Affichage de l'evenement lie */
DB_CTRL_TITLE@ (va_fenetre, "LI_Evt_Lie", vl_IntituleFMC)
DB_CTRL_TITLE@ (va_fenetre, "LI_Remarque", NULL)

DB_DISPLAY@ (va_fenetre)

/*A Lecture du modele de fax prerenseigne */
CASE OF (tl_CaractGen.type)
	CASE XZAEC_FMC_Accident 
		vl_Fichier = TFX_FAX_ACCIDENT
	CASE XZAEC_FMC_Delestage, XZAEC_FMC_Deviation
		vl_Fichier = TFX_FAX_DELESTAGE
	CASE XZAEC_FMC_Meteo
		vl_Fichier = TFX_FAX_METEO
	CASE XZAEC_FMC_Contresens, XZAEC_FMC_VehMarcheArr
	CASE XZAEC_FMC_VehArrete, XZAEC_FMC_VehPanne, XZAEC_FMC_VehFeu
		vl_Fichier = TFX_FAX_VEH
	CASE XZAEC_FMC_Cirque, XZAEC_FMC_ConvoiExc, XZAEC_FMC_ConvoiMil, XZAEC_FMC_VehLent
		vl_Fichier = TFX_FAX_VEH_LENT
	CASE XZAEC_FMC_Manifestation, XZAEC_FMC_GreveEscota
		vl_Fichier = TFX_FAX_MANIF
	CASE XZAEC_FMC_Escargot
		vl_Fichier = TFX_FAX_ESCARG
	CASE XZAEC_FMC_Basculement
		vl_Fichier = TFX_FAX_BASCUL
	CASE XZAEC_FMC_Travaux, XZAEC_FMC_BasculTravaux
		vl_Fichier = TFX_FAX_TRAV
	CASE XZAEC_FMC_ZoneStockage
		vl_Fichier = TFX_FAX_STOCKAGE
	CASE XZAEC_FMC_QueueBouchon
		vl_Fichier = TFX_FAX_BOUCHON
	CASE XZAEC_FMC_FermetureEch, XZAEC_FMC_EchDeconseille
		vl_Fichier = TFX_FAX_FERM_ECH
	CASE XZAEC_FMC_IncSsConces
		vl_Fichier = TFX_FAX_FERM_CONCES
	CASE XZAEC_FMC_Incendie
		vl_Fichier = TFX_FAX_INCENDIE
	CASE XZAEC_FMC_PosteOperateur
		vl_Fichier = TFX_FAX_OPR
	CASE XZAEC_FMC_TraitChaussees, XZAEC_FMC_ChausseeGliss
		vl_Fichier = TFX_FAX_CHAUSSEE
	CASE XZAEC_FMC_Regulation
		vl_Fichier = TFX_FAX_REGUL
	DEFAULT
		vl_Fichier = TFX_FAX_GENERIQUE
ENDCASE

/*A ouverture du fichier contenant le modele du fax*/
WP_APPLICATION_DLG@(NULL, TRUE)
vl_modele = SYSTEM_VAR@ (vg_repertoire_migrazur) ++
			TFX_SOUS_REP_MODELES_FAX ++ vl_Fichier ++ ".aw"
WP_LOAD_FILE@ (vl_modele)

/*A ajout des caracteristiques generiques */
/*! Si un champ ne doit pas s'afficher, il est positionne a "" */
WP_SET_DOC_VAR@ ("numero_evt", tl_CaractGen.numero)
WP_SET_DOC_VAR@ ("cle_evt", tl_CaractGen.cle)
tl_Types = SYSTEM_VAR@ (vg_les_types_FMC)
WP_SET_DOC_VAR@ ("type_evt", tl_Types[ARRAY_INDEX@(ARRAY_COLUMN@(tl_Types,TDO_NUMERO_FMC),tl_CaractGen.type)] [TDO_NOM_FMC])
IF tl_CaractGen.confirme = XDC_VRAI
{
	WP_SET_DOC_VAR@ ("veracite", "confirmée")
}
ELSE
{
	WP_SET_DOC_VAR@ ("veracite", "signalée")
}
IF tl_CaractGen.numero_alerte <> NULL
{
	WP_SET_DOC_VAR@ ("alerte", vl_IntituleAlerte)
	WP_SET_DOC_VAR@ ("origine", "")
}
ELSE
{
	WP_SET_DOC_VAR@ ("alerte", "")
	WP_SET_DOC_VAR@ ("origine", tl_CaractGen.origine)
}

IF tl_CaractGen.debut <> NULL
	WP_SET_DOC_VAR@ ("horo_debut", COM18_Date_SGBD_Formatee(tl_CaractGen.debut))
IF tl_CaractGen.debut_prevu <> NULL
	WP_SET_DOC_VAR@ ("horo_debut_prevu", 
				COM18_Date_SGBD_Formatee(tl_CaractGen.debut_prevu))
IF tl_CaractGen.fin <> NULL
	WP_SET_DOC_VAR@ ("horo_fin", 
					COM18_Date_SGBD_Formatee(tl_CaractGen.fin))
IF tl_CaractGen.fin_prevu <> NULL
	WP_SET_DOC_VAR@ ("horo_fin_prevue", 
					COM18_Date_SGBD_Formatee(tl_CaractGen.fin_prevu))

/* supprimer le retour a la ligne a la fin */
	if (vl_localisation[1]= "sur la section courante") {
		vl_voies=""
			if tl_CaractGen.bau>=XDC_VOIE_BLOQUEE AND tl_CaractGen.bau<=XDC_VOIE_BLOQUEE_NEUTRALISEE
				vl_voies="voie bau"
			if tl_CaractGen.vl >=XDC_VOIE_BLOQUEE AND tl_CaractGen.vl<=XDC_VOIE_BLOQUEE_NEUTRALISEE AND tl_CaractGen.vl<>XDC_VOIE_INEXISTANTE
				vl_voies="voie lente "

			if (tl_CaractGen.vm1 >=XDC_VOIE_BLOQUEE AND tl_CaractGen.vm1<=XDC_VOIE_BLOQUEE_NEUTRALISEE AND tl_CaractGen.vm1<>XDC_VOIE_INEXISTANTE ) OR (tl_CaractGen.vm2 >=XDC_VOIE_BLOQUEE AND tl_CaractGen.vm2<=XDC_VOIE_BLOQUEE_NEUTRALISEE AND tl_CaractGen.vm2<>XDC_VOIE_INEXISTANTE)
				vl_voies=vl_voies ++ "voie mediane "
			if tl_CaractGen.vr >=XDC_VOIE_BLOQUEE AND tl_CaractGen.vr<=XDC_VOIE_BLOQUEE_NEUTRALISEE AND tl_CaractGen.vr<>XDC_VOIE_INEXISTANTE
				vl_voies=vl_voies ++ "voie rapide"
		if (vl_voies<>"")
			vl_localisation[1] = vl_localisation[1] ++ ", sur " ++ vl_voies
	}



	if ( STRING_INDEX@ (vl_localisation[0],"sens 1")<>0 ){
		if ( tl_CaractGen.autoroute=1 ){
				vl_LibSens = "sens Aix-Italie"

		} ELSE IF ( tl_CaractGen.autoroute=2 ){
				vl_LibSens = "sens Nice-Monaco"
		} ELSE IF ( tl_CaractGen.autoroute=3 ){
				vl_LibSens = "sens Marseille-Toulon"
		} ELSE IF ( tl_CaractGen.autoroute=4 ){
				vl_LibSens = "sens Marseille-Aix"
		} ELSE IF ( tl_CaractGen.autoroute= 5){
				vl_LibSens = "sens Aix-Gap"
		} ELSE IF ( tl_CaractGen.autoroute=6 ){
				vl_LibSens = "sens Aix/Nice-Aubagne"
		} ELSE IF ( tl_CaractGen.autoroute=7 ){
				vl_LibSens = "sens Aubagne-Auriol"
		} ELSE IF ( tl_CaractGen.autoroute=8 ){
				vl_LibSens = "sens Cannet-Toulon"
		} 
			vl_localisation[0]=REPLACE_SUBSTR@(vl_localisation[0],"sens 1",vl_LibSens)
	}
	if ( STRING_INDEX@ (vl_localisation[0],"sens 2")<>0 ){
		if ( tl_CaractGen.autoroute=1 ){
				vl_LibSens = "sens Italie-Aix"
		} ELSE IF ( tl_CaractGen.autoroute=2 ){
				vl_LibSens = "sens Monaco-Nice"
		} ELSE IF ( tl_CaractGen.autoroute=3 ){
				vl_LibSens = "sens Toulon-Marseille"
		} ELSE IF ( tl_CaractGen.autoroute=4 ){
				vl_LibSens = "sens Aix-Marseille"
		} ELSE IF ( tl_CaractGen.autoroute= 5){
				vl_LibSens = "sens Gap-Aix"
		} ELSE IF ( tl_CaractGen.autoroute=6 ){
				vl_LibSens = "sens Aubagne-Aix/Nice"
		} ELSE IF ( tl_CaractGen.autoroute=7 ){
				vl_LibSens = "sens Auriol-Aubagne"
		} ELSE IF ( tl_CaractGen.autoroute=8 ){
				vl_LibSens = "sens Toulon-Cannet"
		} 
			vl_localisation[0]=REPLACE_SUBSTR@(vl_localisation[0],"sens 2",vl_LibSens)
		}

IF (tl_CaractGen.type=XZAEC_FMC_Regulation)
	vl_Localisation[1]=""

WP_SET_DOC_VAR@ ("localisation", vl_Localisation)

WP_SET_DOC_VAR@ ("intitule_fmc", vl_IntituleFMC)
WP_SET_DOC_VAR@ ("intitule_cause", vl_IntituleCause)

WP_SET_DOC_VAR@ ("district_envoi_fax", SYSTEM_VAR@ (vg_nom_site))
WP_SET_DOC_VAR@ ("horodate_envoi_fax", COM09_Date_Courante())

IF tl_CaractGen.degatsdom = XDC_VRAI
	WP_SET_DOC_VAR@ ("degats_domaine", "Dégats domaine")
ELSE	WP_SET_DOC_VAR@ ("degats_domaine", "")

/*A ajout des caracteristiques specifiques */
/*! Si un champ ne doit pas s'afficher, il est positionne a "" */
CASE OF (tl_CaractGen.type)
	CASE XZAEC_FMC_Accident 
		tl_Accident = ta_args[7]
		IF tl_Accident.vl > 0
			WP_SET_DOC_VAR@ ("nb_vl", tl_Accident.vl)
		IF tl_Accident.pl > 0
			WP_SET_DOC_VAR@ ("nb_pl", tl_Accident.pl)
		IF tl_Accident.remorques > 0
			WP_SET_DOC_VAR@ ("nb_remorques", tl_Accident.remorques)
		IF tl_Accident.cars > 0
			WP_SET_DOC_VAR@ ("nb_cars", tl_Accident.cars)
		IF tl_Accident.motos > 0
			WP_SET_DOC_VAR@ ("nb_motos", tl_Accident.motos)
		IF tl_Accident.bl > 0
			WP_SET_DOC_VAR@ ("nb_blesse_leg", tl_Accident.bl)
		IF tl_Accident.bg > 0
			WP_SET_DOC_VAR@ ("nb_blesse_grav", tl_Accident.bg)
		IF tl_Accident.morts > 0
			WP_SET_DOC_VAR@ ("nb_morts", tl_Accident.morts)

		IF tl_Accident.homescota = XDC_VRAI
		{		
			WP_SET_DOC_VAR@ ("presence_pers_escota", "personnel Escota")
		}
		IF tl_Accident.perso = XDC_VRAI
		{		
			WP_SET_DOC_VAR@ ("presence_personnalite", "personnalité")
		}
		IF tl_Accident.matdang = XDC_VRAI
			WP_SET_DOC_VAR@ ("mat_dangereuse", "présence de matière dangereuse")

	CASE XZAEC_FMC_Delestage, XZAEC_FMC_Deviation
		tl_delestage = ta_args[7]
		WP_SET_DOC_VAR@ ("nom_plan_secours", tl_delestage.nom_plan)
		WP_SET_DOC_VAR@ ("plan_secours", tl_delestage.numplan)
		WP_SET_DOC_VAR@ ("resp_hierarchique", tl_delestage.hierarchie)
		
	CASE XZAEC_FMC_Meteo
		tl_meteo = ta_args[7]
		WP_SET_DOC_VAR@ ("PR_fin_meteo", COM42_ConvertirPREnKm(tl_meteo.prfin))
		IF tl_meteo.visibilite <> NULL
			IF tl_meteo.visibilite >= 0
		
				WP_SET_DOC_VAR@ ("visibilite", tl_meteo.visibilite)
		tl_tableau = NULL
		tl_tableauvalide = NULL
		COM37_Lit_Libelles_Predefinis(XDC_LIB_TYPE_PERTURBATION, tl_tableau, tl_tableauvalide)
		vl_index = ARRAY_INDEX@(ARRAY_COLUMN@(tl_tableau, TFX_COL_CODE), tl_meteo.perturbation)
		IF vl_index >= 0
			WP_SET_DOC_VAR@ ("perturbation", 
							tl_tableau[vl_index][TFX_COL_TYP_LIB])
		
	CASE XZAEC_FMC_Contresens, XZAEC_FMC_VehMarcheArr
	CASE XZAEC_FMC_VehArrete, XZAEC_FMC_VehPanne, XZAEC_FMC_VehFeu
		tl_vehicule = ta_args[7]
		tl_tableau = NULL
		tl_tableauvalide = NULL
		COM37_Lit_Libelles_Predefinis(XDC_LIB_VEH_CATEGORIE, tl_tableau, tl_tableauvalide)
		WP_SET_DOC_VAR@ ("type_veh",tl_tableau[ARRAY_INDEX@(ARRAY_COLUMN@(tl_tableau, TFX_COL_CODE), tl_vehicule.type_veh)][TFX_COL_TYP_LIB])
/*		WP_SET_DOC_VAR@ ("nb_passagers", tl_vehicule.passagers)
		WP_SET_DOC_VAR@ ("bebe", tl_vehicule.nb_bebes)
		WP_SET_DOC_VAR@ ("pers_agee", tl_vehicule.nb_agees)
		IF tl_vehicule.animaux = XDC_VRAI
			WP_SET_DOC_VAR@ ("animaux", "présence d'animaux")
		IF tl_vehicule.escota = XDC_VRAI
			WP_SET_DOC_VAR@ ("veh_escota", "présence véhicule escota")
		IF tl_vehicule.mat_dang <> NULL
			IF TRIM@ (tl_vehicule.mat_dang) <> ""
				WP_SET_DOC_VAR@ ("mat_dangereuse", "présence de matière dang")
		IF tl_vehicule.volume <> NULL AND NOT IS_NULL@ (tl_vehicule.volume)
			WP_SET_DOC_VAR@ ("volume_veh", tl_vehicule.volume)
*/
		IF tl_vehicule.feu_maitrise = XDC_VRAI
			WP_SET_DOC_VAR@ ("feu_maitrise", "feu maitrise")
/*		WP_SET_DOC_VAR@ ("commentaire_veh", tl_vehicule.comment)
*/	
	
	CASE XZAEC_FMC_Cirque, XZAEC_FMC_ConvoiExc, XZAEC_FMC_ConvoiMil, XZAEC_FMC_VehLent
		tl_vehlent = ta_args[7]
		WP_SET_DOC_VAR@ ("long_veh_lent", tl_vehlent.longueur)
		WP_SET_DOC_VAR@ ("vit_veh_lent", tl_vehlent.vitesse)
		IF tl_CaractGen.type = XZAEC_FMC_ConvoiExc OR tl_CaractGen.type = XZAEC_FMC_ConvoiMil
		{
			IF tl_vehlent.largeur = NULL
				WP_SET_DOC_VAR@ ("larg_veh_lent", "")
			ELSE	WP_SET_DOC_VAR@ ("larg_veh_lent", tl_vehlent.largeur)
			IF tl_vehlent.hauteur = NULL
				WP_SET_DOC_VAR@ ("haut_veh_lent", "")
			ELSE	WP_SET_DOC_VAR@ ("haut_veh_lent", tl_vehlent.hauteur)
			IF tl_vehlent.poids = NULL
				WP_SET_DOC_VAR@ ("poids_veh_lent", "")
			ELSE	WP_SET_DOC_VAR@ ("poids_veh_lent", tl_vehlent.poids)
			IF tl_vehlent.contenu = XDC_CHAINE_VIDE
				WP_SET_DOC_VAR@ ("contenu_veh_lent", "")
			ELSE	WP_SET_DOC_VAR@ ("contenu_veh_lent", tl_vehlent.contenu)
		}

	CASE XZAEC_FMC_Manifestation, XZAEC_FMC_GreveEscota
		tl_manif = ta_args[7]
		IF tl_manif.perception = XDC_VRAI
			WP_SET_DOC_VAR@ ("perception", "pas de perception péage")
		WP_SET_DOC_VAR@ ("nombre_manifestants", tl_manif.nombre)
		IF tl_manif.violence = XDC_VRAI
			WP_SET_DOC_VAR@ ("violence", "violence")

	CASE  XZAEC_FMC_Escargot
		tl_manif = ta_args[7]
		IF tl_manif.perception = XDC_VRAI
			WP_SET_DOC_VAR@ ("perception", "pas de perception péage")
		WP_SET_DOC_VAR@ ("nombre_manifestants", tl_manif.nombre)
		IF tl_manif.violence = XDC_VRAI
			WP_SET_DOC_VAR@ ("violence", "violence")
		IF tl_CaractGen.longueur+0 > 0
			WP_SET_DOC_VAR@ ("longueur",tl_CaractGen.longueur)
	CASE XZAEC_FMC_Basculement
		tl_bascul = ta_args[7]
		WP_SET_DOC_VAR@ ("PR_tete_bascul", COM42_ConvertirPREnKm(tl_bascul.pr))

	CASE XZAEC_FMC_Travaux, XZAEC_FMC_BasculTravaux
		tl_travaux = ta_args[7]
		tl_tableau = NULL
		tl_tableauvalide = NULL
		COM37_Lit_Libelles_Predefinis(XDC_LIB_TYPE_NATURE_TRAV, tl_tableau, tl_tableauvalide)
		vl_index = ARRAY_INDEX@(ARRAY_COLUMN@(tl_tableau, TFX_COL_CODE), 
							tl_travaux.nature)
		IF vl_index >= 0
			WP_SET_DOC_VAR@ ("nature_travaux", 
						tl_tableau[vl_index][TFX_COL_TYP_LIB])

		tl_tableau = NULL
		tl_tableauvalide = NULL
		COM37_Lit_Libelles_Predefinis(XDC_LIB_TYPE_TRAVAUX, tl_tableau, tl_tableauvalide)
		vl_index = ARRAY_INDEX@(ARRAY_COLUMN@(tl_tableau, TFX_COL_CODE), 
							tl_travaux.type)
		IF vl_index >= 0
		{
			WP_SET_DOC_VAR@("type_travaux",tl_tableau[vl_index][TFX_COL_TYP_LIB])
		}
		IF tl_travaux.continu = XDC_VRAI
		{
			WP_SET_DOC_VAR@ ("trav_discont", "travaux discontinus")
			WP_SET_DOC_VAR@ ("horo_debut_planifie",tl_travaux.debut_continu)
			WP_SET_DOC_VAR@ ("horo_fin_planifiee",tl_travaux.fin_continu)
		}
		WP_SET_DOC_VAR@ ("pr_tete_trav", COM42_ConvertirPREnKm(tl_travaux.prt))

	CASE XZAEC_FMC_ZoneStockage
		tl_stockage = ta_args[7]
		WP_SET_DOC_VAR@ ("pr_tete_stockage", COM42_ConvertirPREnKm(tl_stockage.prt))
		IF tl_stockage.voiesret = XDC_VRAI
		{
			WP_SET_DOC_VAR@ ("etat_stockage", "Stockage en cours")
		} ELSE {
			WP_SET_DOC_VAR@ ("etat_stockage", "Stockage en préparation")
		}

	CASE XZAEC_FMC_QueueBouchon
		tl_bouchon = ta_args[7]
		WP_SET_DOC_VAR@ ("localisation_tete_bouchon", vl_LocalisationTete)
		WP_SET_DOC_VAR@ ("longueur", tl_bouchon.longueur)
		tl_tableau = NULL
		tl_tableauvalide = NULL
		COM37_Lit_Libelles_Predefinis(XDC_LIB_TYPE_BOUCHON, tl_tableau, tl_tableauvalide)
		WP_SET_DOC_VAR@ ("densite_bouchon",tl_tableau[ARRAY_INDEX@(ARRAY_COLUMN@(tl_tableau, TFX_COL_CODE), tl_bouchon.type)][TFX_COL_TYP_LIB])

	CASE XZAEC_FMC_FermetureEch
		tl_echangeur = ta_args[7]
		tl_tableau = NULL
		IF tl_echangeur.entree1 = XDC_VRAI
			tl_tableau[0]= "fermeture bretelle d'entrée sens 1"
		IF tl_echangeur.entree2 = XDC_VRAI
			tl_tableau[1]= "fermeture bretelle d'entrée sens 2"
		IF tl_echangeur.sortie1 = XDC_VRAI
			tl_tableau[2]= "fermeture bretelle de sortie sens 1"
		IF tl_echangeur.sortie2 = XDC_VRAI
			tl_tableau[3]= "fermeture bretelle de sortie sens 2"
		WP_SET_DOC_VAR@ ("bretelle_fermee", tl_tableau)

	CASE XZAEC_FMC_EchDeconseille
		tl_echangeur = ta_args[7]
		tl_tableau = NULL
		IF tl_echangeur.entree1 = XDC_VRAI
			tl_tableau[0] = "bretelle d'entrée sens 1 déconseillée"
		IF tl_echangeur.entree2 = XDC_VRAI
			tl_tableau[1] = "bretelle d'entrée sens 2 déconseillée"
		IF tl_echangeur.sortie1 = XDC_VRAI
			tl_tableau[2] = "bretelle de sortie sens 1 déconseillée"
		IF tl_echangeur.sortie2 = XDC_VRAI
			tl_tableau[3] = "bretelle de sortie sens 2 déconseillée"
		WP_SET_DOC_VAR@ ("bretelle_fermee", tl_tableau)

	CASE XZAEC_FMC_IncSsConces
		tl_Conces = ta_args[7]
		WP_SET_DOC_VAR@ ("nom_ss_concess", tl_Conces.nom)
		IF tl_Conces.ferme = XDC_VRAI
			WP_SET_DOC_VAR@ ("ss_concess_ferme", "sous concessionnaire fermé")
		IF tl_Conces.penurie = XDC_VRAI
		{
			WP_SET_DOC_VAR@ ("penurie", "pénurie")
			IF tl_Conces.carburant >= 0
			{
				tl_tableau = ITMA_TMC_lire_carburants()
				vl_index = ARRAY_INDEX@ (ARRAY_COLUMN@ (tl_tableau, COM_NUMERO_CARBURANT), tl_Conces.carburant)
				IF vl_index >= 0
					WP_SET_DOC_VAR@ ("carburant", 
								tl_tableau[vl_index][COM_NOM_CARBURANT])
			}
		}

	CASE XZAEC_FMC_Incendie
		tl_incendie = ta_args[7]
		IF tl_incendie.feu_maitrise = XDC_VRAI
		{
			WP_SET_DOC_VAR@ ("incendie_maitrise", "Incendie maîtrisé")
		}
		ELSE
		{
			WP_SET_DOC_VAR@ ("incendie_maitrise", "")
		}


	CASE XZAEC_FMC_PosteOperateur
		WP_SET_DOC_VAR@ ("nom_operateur", ta_args[7][0])

	CASE XZAEC_FMC_Regulation
		tl_reg=ta_args[7]
		COM37_Lit_Libelles_Predefinis (XDC_LIB_TYPE_MESURE_REGUL, tl_mesure, 
					tl_mesure_valid)

		/*mesure ?*/
		vl_indice=ARRAY_INDEX@(ARRAY_COLUMN@(tl_mesure, TDO_CODE_LIBELLe),
			 tl_reg.mesure)
		if (vl_indice>-1)
			WP_SET_DOC_VAR@ ("mesure",tl_mesure[vl_indice][TDO_TEXTE_LIBELLE])

		WP_SET_DOC_VAR@ ("scenario",tl_reg.transitoire )

		/* zones */
		tl_zones = SYSTEM_VAR@(vg_zones)

		vl_indice=ARRAY_INDEX@(ARRAY_COLUMN@(tl_zones, 0),
			 tl_reg.zone)

		if (vl_indice>-1)
			WP_SET_DOC_VAR@ ("zone", tl_zones[vl_indice][1])



	CASE XZAEC_FMC_TraitChaussees, XZAEC_FMC_ChausseeGliss
		tl_chaussee = ta_args[7]
		WP_SET_DOC_VAR@ ("PR_fin", COM42_ConvertirPREnKm (tl_chaussee.prfin))
		tl_tableau = NULL
		tl_tableauvalide = NULL
		IF tl_CaractGen.type = XZAEC_FMC_TraitChaussees {
			vl_type_lib = XDC_TYPE_LIB_TRAIT_CHAUSSEE
		} ELSE {
			vl_type_lib = XDC_TYPE_LIB_CHAUSSEE_GLISS
		}
		COM37_Lit_Libelles_Predefinis(vl_type_lib, tl_tableau, tl_tableauvalide)
		vl_index=COM45_IndexEnColonne (tl_tableau,TFX_COL_CODE,tl_chaussee.nature)
		IF vl_index >= 0
			WP_SET_DOC_VAR@ ("nature", tl_tableau[vl_index][TFX_COL_TYP_LIB])
ENDCASE

WP_EVAL_FIELDS@()
DELAY@(0.2)

/*A Mettre en forme le texte a envoyer et l'affichaer */
tl_texte = WP_GET_ALL_PARAS@ ()
TFX_Texte_Marque_Selon_Mode (tl_texte, tl_texte_propose)
DB_EDITBOX_SET_DATA@ (va_fenetre, "BE_texte", tl_texte_propose)

WP_EXIT@()

RETURN (COM_OK)
ENDMACRO




/*X*/
/* ----------------------------------------------------------------------------
* SERVICE RENDU :
*  Fabrique le doc a envoyer et genère la requete pour tous les destinataires
-------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO TFX_Envoyer (va_fenetre)

/*
* ARGUMENTS EN ENTREE :
*  va_fenetre         : Id. de la fenetre contenant les objets ;
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : COM_OK en cas d'execution correcte, COM_NOK sinon.
*
* CONDITION D'UTILISATION
*   ITMA_TFX_Envoi_Fax
*
* FONCTION
*
---------------------------------------------------------------------------- */
var vl_taille, vl_fichier,vl_poste_fax,vl_rep_dyn,vl_cmd, vl_liste_dest,vl_idx, vl_fax_envoye
var vl_liste_dest_mail,vl_poste_mail,vl_fichier_objet
var vl_idx_fax, vl_idx_mail,vl_objet,vl_fichier_mail
VAR FORMAT SQL_Procedure_Params@ vl_parametres
VAR FORMAT SQL_Procedure_Result@ vl_resultats
var vl_num
var pid

vl_fax_envoye = FALSE
/*A il faut au moins un destinataire*/
vl_taille = ARRAY_SIZE@ (tm_dest)
IF vl_taille = 0 {
	INFO_MESSAGE@("Pas de destinataire !!!")
}
ELSE 
{
	pid=RANDOM@()

	/*A sauvegarde des actions en base*/
	IF (TFX_Actions_Fax(va_fenetre)=COM_OK)
	{

	COM01_Trace(COM_DEBUG1,"Envoi Mail taille dest:"++vl_taille)
		/* Griser le bouton envoyer */
		DB_CTRL_GRAYED@ (va_fenetre, "BP_envoyer", TRUE)

		/*A Produire le fichier dans le format voulu */
		vl_fichier = C_MODELE_FAX ++ "_" ++ SYSTEM_VAR@ (vg_numero_poste) ++pid++ ".ps"
		TFX_Produire_Document (va_fenetre, "/tmp/" ++ vl_fichier, C_MODEM)
		vl_fichier_mail = C_MODELE_MAIL ++ "_" ++ SYSTEM_VAR@ (vg_numero_poste) ++pid++ ".txt"
		vl_objet=TFX_Produire_Document (va_fenetre, "/tmp/" ++ vl_fichier_mail, C_MAIL)	

		/*si SMS*/
		if (vm_sms=XDC_VRAI) {
		vl_objet=""
		FOR vl_idx = 0 TO vl_taille - 1
	COM01_Trace(COM_DEBUG1,"Envoi Mail dest:"++tm_dest[vl_idx].numero_appel++" "++tm_dest[vl_idx].interlocuteur++" "++tm_num_actions[vl_idx])
		
			if (SUBSTRING@(tm_dest[vl_idx].numero_appel, 1,2)="00")
				vl_num = SUBSTRING@(tm_dest[vl_idx].numero_appel,2)
			else
				vl_num = tm_dest[vl_idx].numero_appel
			if (len@(vl_objet)>0)
				vl_objet = vl_objet ++";"
			vl_objet = vl_objet ++ vl_num
		NEXT vl_idx
		}

		vl_fichier_objet = C_OBJET_MAIL ++ "_" ++ SYSTEM_VAR@ (vg_numero_poste) ++pid++ ".txt"
		WRITE_ASCII_FILE@("/tmp/" ++ vl_fichier_objet,vl_objet)

		/*B Copier le fichier dans le repertoire des fichiers
		 * dynamiques migrazur sur le poste fax, puis le supprimer
		 */
		vl_poste_fax = C_NOM_POSTE_FAX ++ SYSTEM_VAR@ (vg_nom_site)
		vl_rep_dyn=SYSTEM_VAR@(vg_repertoire_migrazur)++COM_SOUS_REP_DYN
		vl_cmd = FORMAT@ ("rcp %s %s:%s", "/tmp/" ++ vl_fichier,
							vl_poste_fax, vl_rep_dyn)
		SHELL_COMMAND@ (vl_cmd)
		SHELL_COMMAND@ ("rm /tmp/" ++ vl_fichier)


		vl_poste_mail = C_NOM_POSTE_FAX ++ SYSTEM_VAR@ (vg_nom_site)
		vl_rep_dyn=SYSTEM_VAR@(vg_repertoire_migrazur)++COM_SOUS_REP_DYN
		vl_cmd = FORMAT@ ("rcp %s %s:%s", "/tmp/" ++ vl_fichier_mail,
							vl_poste_mail, "/tmp")
		SHELL_COMMAND@ (vl_cmd)

		vl_cmd = FORMAT@ ("rcp %s %s:%s", "/tmp/" ++ vl_fichier_objet,
							vl_poste_mail, "/tmp")
		SHELL_COMMAND@ (vl_cmd)
		SHELL_COMMAND@ ("rm /tmp/" ++ vl_fichier_mail)
		SHELL_COMMAND@ ("rm /tmp/" ++ vl_fichier_objet)

		/*B Construire la liste des destinataires ;
		 *  Ajouter le 0 en tete des numeros de fax */
		vl_liste_dest = NULL
		vl_liste_dest_mail = NULL
		vl_idx_fax=0
		vl_idx_mail=0
		vl_taille=ARRAY_SIZE@(tm_dest)
		FOR vl_idx = 0 TO vl_taille - 1
	COM01_Trace(COM_DEBUG1,"Envoi Mail02 dest:"++tm_dest[vl_idx].numero_appel++" "++tm_dest[vl_idx].interlocuteur++" "++tm_num_actions[vl_idx])
			if (STRING_INDEX@(tm_dest[vl_idx].numero_appel,"@")= 0)
			{
				vl_liste_dest[vl_idx_fax] =tm_num_actions[vl_idx] ++ "|0" ++
				COM20_Extraire_Chiffres(tm_dest[vl_idx].numero_appel)
				vl_idx_fax=vl_idx_fax+1
			}
			else
			{
				if (tm_num_actions[vl_idx]++""="") {
					vl_liste_dest_mail[vl_idx_mail] = "0|" ++
							tm_dest[vl_idx].numero_appel
				} else {
					vl_liste_dest_mail[vl_idx_mail] =tm_num_actions[vl_idx] 
							++ "|" ++ tm_dest[vl_idx].numero_appel
				}
	COM01_Trace(COM_DEBUG1,"Envoi Mail2 dest:"++vl_liste_dest_mail[vl_idx_mail]++" "++tm_dest[vl_idx].numero_appel++" "++tm_dest[vl_idx].interlocuteur++" "++tm_num_actions[vl_idx])
				vl_idx_mail=vl_idx_mail+1
			}
		NEXT vl_idx

		/*si SMS remplacer le numero d appel par l adresse mail sfr pour le sms*/
		if (vm_sms=XDC_VRAI) {
		vl_parametres[0].type = SYB#CHAR_
	           vl_parametres[0].data = TRIM@("SMS CLIENT")
	           vl_parametres[0].output = FALSE
	            IF COM05_SQL_Procedure (XZAN15_Rechercher_Annuaire,
	                          vl_parametres, vl_resultats, C_MODULE) <> COM_OK
	                                     RETURN (COM_NOK)
			vl_idx_mail=0
			FOR vl_idx = 0 TO vl_taille - 1
			if (tm_num_actions[vl_idx]++""="") {
			vl_liste_dest_mail[0] = "0|" ++
					vl_resultats.select_results[0][0][2]
			} else {
			vl_liste_dest_mail[0] =tm_num_actions[vl_idx]
					 ++ "|" ++ vl_resultats.select_results[0][0][2]
			 }
			 vl_idx_mail=vl_idx_mail+1
			NEXT vl_idx
		}
		

		/*B Envoyer le(s) fax sur le poste adequat */
		SHELL_COMMAND@("rm -f /tmp/liste_actions"++pid)
		SHELL_COMMAND@("rm -f /tmp/liste_actions_mail"++pid)
	COM01_Trace(COM_DEBUG1,"Envoi Mail idx:"++vl_idx_fax++" "++vl_idx_mail)
		if (vl_idx_fax>0) 
		{
			WRITE_ASCII_FILE@ ("/tmp/liste_actions"++pid, vl_liste_dest)
			if (GET_ENV_VAR@("RTARCH")="hp700_hpux")
				vl_cmd = FORMAT@ (C_FMT_CMD_FAX,

							"/tmp/liste_actions"++pid,
							vl_poste_fax,
							vl_rep_dyn ++ vl_fichier,
							SYSTEM_VAR@ (vg_site),
							SYSTEM_VAR@ (vg_nom_site))
			else	
				vl_cmd = FORMAT@ (C_FMT_CMD_FAX_LX,
							"/tmp/liste_actions++pid",
							vl_poste_fax,
							vl_rep_dyn ++ vl_fichier,
							SYSTEM_VAR@ (vg_site),
							SYSTEM_VAR@ (vg_nom_site))
			SHELL_COMMAND@(vl_cmd)
		}
		if (vl_idx_mail>0)
		{
			WRITE_ASCII_FILE@ ("/tmp/liste_actions_mail"++pid, vl_liste_dest_mail)
			WRITE_ASCII_FILE@ ("/tmp/liste_actions_mail"++pid++tm_num_actions[0], vl_liste_dest_mail)
			if (GET_ENV_VAR@("RTARCH")="hp700_hpux")
				vl_cmd = FORMAT@ (C_FMT_CMD_MAIL,
							"/tmp/liste_actions_mail"++pid,
							vl_poste_mail,
							"/tmp/" ++ vl_fichier_mail,
							SYSTEM_VAR@ (vg_site),
							SYSTEM_VAR@ (vg_nom_site),
							"/tmp/" ++ vl_fichier_objet,
							vl_idx_mail)
			else
				vl_cmd = FORMAT@ (C_FMT_CMD_MAIL_LX,
							"/tmp/liste_actions_mail"++pid,
							vl_poste_mail,
							"/tmp/" ++ vl_fichier_mail,
							SYSTEM_VAR@ (vg_site),
							SYSTEM_VAR@ (vg_nom_site),
							"/tmp/" ++ vl_fichier_objet,
							vl_idx_mail)

			SHELL_COMMAND@(vl_cmd)
		}
		/*INFO_MESSAGE@ ("Fax en cours d'émission")*/
               SHELL_COMMAND@("rm -f /tmp/liste_actions"++pid)
	       SHELL_COMMAND@("rm -f /tmp/liste_actions_mail"++pid)
	       SHELL_COMMAND@("find /tmp/liste_actions_mai* -mtime +5 -exec rm {} \;")
			        
		vl_fax_envoye = TRUE

		if  (vl_idx_mail=0) and  (vl_idx_fax=0)
		{
			info_message@("Pas de destinataire !")
			vl_fax_envoye = FALSE
		}
	}
	ELSE
	{
	COM01_Trace(COM_DEBUG1,"Envoi Mail : Pas de destinataire !!")
		INFO_MESSAGE@("Pas de destinataire !!")
	}
}

IF (vl_fax_envoye = TRUE) {
	RETURN (COM_OK)
} ELSE {
	RETURN (COM_NOK)
}

ENDMACRO




/*X*/
/* ----------------------------------------------------------------------------
* SERVICE RENDU :
*  Formate le texte d'un fax en y adjoignant une marque selon le mode
*  (reel ou simule ...).
-------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO TFX_Texte_Marque_Selon_Mode (va_texte, va_texte_marque)

/*
* ARGUMENTS EN ENTREE :
*   va_texte          : le texte brut, [ tableau de ] chaine de caracteres.
*
*
* ARGUMENTS EN SORTIE :
*   va_texte_marque   : le texte marque.
*
*
* CODE RETOUR         : COM_OK en cas d'execution correcte,
*                       COM_NOK si erreur (entree non textuelle).
*
* CONDITION D'UTILISATION
*   Appele par les macros affichant un texte en zone de saisie.
*
* FONCTION
*   Selon l'origine de l'evenement motivant l'envoi du fax,
*   encadrer le texte de lignes signalant le mode.
*
---------------------------------------------------------------------------- */

VAR	tl_texte_marque
VAR	vl_index

va_texte_marque = va_texte		' par defaut, entree inchangee

/* Determiner le mode selon l'origine de la Fmc */
vl_index = 0
IF (vm_origine_fmc <> "")
{
	vl_index = STRING_INDEX@ (UPPERCASE@ (vm_origine_fmc), "EXERCICE")
}


/* En mode normal, le texte est retourne inchange */
IF (vl_index = 0)
{
	RETURN (COM_OK)
}

IF (IS_ARRAY@ (va_texte))
{
	va_texte_marque = ARRAY_INSERT@ (va_texte, CM_MARQUE_EXERCICE, 0)
	va_texte_marque[ARRAY_SIZE@ (va_texte_marque)] = CM_MARQUE_EXERCICE
	RETURN (COM_OK)
}
ELSE IF (IS_STRING@ (va_texte))
{
	tl_texte_marque = { CM_MARQUE_EXERCICE, va_texte, CM_MARQUE_EXERCICE }
	va_texte_marque = ARRAY_TO_STRING@ (tl_texte_marque, "\n")
	RETURN (COM_OK)
}
ELSE
	RETURN (COM_NOK)

ENDMACRO



/*X*/
/* ----------------------------------------------------------------------------
* SERVICE RENDU :
*  Retourne une fin de ligne
-------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO Retourner_retour_chariot ()

/*
* ARGUMENTS EN ENTREE :
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : retour a la ligne
*
* CONDITION D'UTILISATION
*   Appeler par les modeles de fax pre-renseignés
*
* FONCTION
*
---------------------------------------------------------------------------- */
	RETURN ("\n")
ENDMACRO
