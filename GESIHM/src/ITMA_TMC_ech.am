/*E*/
/* Fichier : $Id: ITMA_TMC_ech.am,v 1.15 2020/11/03 17:43:27 pc2dpdy Exp $			  Release :$Revision: 1.15 $ 	   Date :$Date: 2020/11/03 17:43:27 $
-----------------------------------------------------------------------
*  GTIE  *  PROJET MIGRAZUR
-----------------------------------------------------------------------
*  SOUS-SYSTEM GESIHM
-----------------------------------------------------------------------
*  MODULE MTMC  *  Fichier ITMA_TMC_ech.am
-----------------------------------------------------------------------
*  DESCRIPTION DU MODULE :
*
*   Gere les donnees specifiques au type Fermeture echangeur
*   et les champs correspondants dans la fenetre de saisie FMC
*
-----------------------------------------------------------------------
*  HISTORIQUE :
*
*  Guilhou	24 Oct 1994	1.1	: Création
*  Torregrossa  23 Sep 1996 : Modif cr de sauvegarde V1.10 (CONF 4)
*  Torregrossa  21 Oct 1996 : Suppression de la declaration de format TMC_echangeur (IHM7) V1.11
*  Lecrivain	26 Mar 2007 : Afficher/effacer champs pour retypage (dem/637) 1.12
*  Lecrivain	27/04/2007 : Ajout type FMC "Echangeur deconseille" (DEM 645) 1.13
* LCL   	22/04/20        : MOVIS Ajout site local pilotage DEM-SAE93
-----------------------------------------------------------------------
*/

/*A Déclaration des fichiers à inclure */
INCLUDE	"dbase_.am"
INCLUDE	"../../XDMICG/inc/xdc_ax.h"
INCLUDE	"../../XDMICG/inc/xzic_ax.h"
INCLUDE	"../../XDMICG/inc/xzaec_ax.h"
INCLUDE	"../inc/ITMA_COM.h"
INCLUDE	"../inc/ITMA_TMC.h"
INCLUDE	"../inc/ITMA_TDO.h"
INCLUDE	"../inc/ITMA_TAR.h"
INCLUDE	"../inc/xzae57sp.h"
INCLUDE	"../inc/xzae52sp.h"

/*A Définition des constantes */

DEFINE	C_MODULE		"MTMC"		' Nom du module


/*X*/
/* ---------------------------------------------------------------------------------
* SERVICE RENDU :
*
*  Affiche / masque dans la fenetre FMC les champs specifiques
*   au type Fermeture echangeur
*
------------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_ech (va_fenetre, va_type_fmc, va_visible)

/*
* ARGUMENTS EN ENTREE :
*  va_fenetre         : id de la boite de dialogue ou afficher les champs
*  va_type_fmc        : type de la fmc
*  va_visible         : indicateur de visibilite demandee
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*   MTMT
*
* FONCTION
--------------------------------------------------------------------------------- */
VAR tl_controles
VAR vl_indice
VAR vl_fenetre
VAR vl_droits


/*A Traitements en cas d'erreur :
 *   informer l'operateur, tracer l'erreur et abandonner
 * -----------------------------------------------------
 */
ON ERROR 
{
	ERROR_BOX@
	COM01_Trace (COM_WARNING, COM03_Message_Erreur (C_MODULE))
	RETURN
}

vl_fenetre = va_fenetre


/*A rendre visibles ou masquer les champs associes au type fmc */

tl_controles = {
	"BT_entree1",
	"BT_entree2",
	"BT_sortie1",
	"BT_sortie2",
	"LI_acces_ech"
}
FOR vl_indice = 0 TO ARRAY_SIZE@ (tl_controles) - 1
	DB_CTRL_DISPLAY@ (vl_fenetre, tl_controles[vl_indice], va_visible)
NEXT vl_indice

IF va_visible {
	IF va_type_fmc = XZAEC_FMC_FermetureEch {
		DB_CTRL_TITLE@ (vl_fenetre, "LI_acces_ech", "Accès fermés")
	} ELSE {
		DB_CTRL_TITLE@ (vl_fenetre, "LI_acces_ech", "Accès déconseillés")
	}
}

	RETURN (vl_fenetre)
ENDMACRO





/*X*/
/* -----------------------------------------------------------------------
* SERVICE RENDU :
* sauve en base les informations specifiques du type echangeur
*
-----------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_ech_sauve (FORMAT COM_Identifiant_FMC ta_num_evt, FORMAT TMC_echangeur va_tampon,va1,va2,va_fenetre)

/*
* ARGUMENTS EN ENTREE :
* ta_num_evt		: numero et cle d'evenement
* va_tampon		: valeurs des controles
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*   MTMT
*
* FONCTION
--------------------------------------------------------------------- */
VAR FORMAT SQL_Procedure_Params@	vl_parametres	
VAR FORMAT SQL_Procedure_Result@	vl_resultats
VAR vl_indice

/*A Traitements en cas d'erreur durant l'initialisation :
*   informer l'operateur, tracer l'erreur et abandonner
* ------------------------------------------------------*/
ON ERROR 
{
    ERROR_BOX@
    COM01_Trace (COM_WARNING, COM03_Message_Erreur (C_MODULE))
    RETURN
}
	vl_indice=0
	/*A preparation des parametres de la procedure stockee*/
	vl_parametres[vl_indice].data=ta_num_evt.numero
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=ta_num_evt.cle
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=-1*DB_CTRL_GET_VALUE@(va_fenetre,"BT_entree1")
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=-1*DB_CTRL_GET_VALUE@(va_fenetre,"BT_entree2")
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=-1*DB_CTRL_GET_VALUE@(va_fenetre,"BT_sortie1")
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=-1*DB_CTRL_GET_VALUE@(va_fenetre,"BT_sortie2")
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	IF (SYSTEM_VAR@(vg_surcharge)=TRUE)
		vl_parametres[vl_indice].data=SYSTEM_VAR@(vg_numero_poste_surcharge)
	ELSE
		vl_parametres[vl_indice].data=SYSTEM_VAR@(vg_numero_poste)
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE

/*B Site local */
        vl_indice = vl_indice +1
        vl_parametres[vl_indice].type = SYB#CHAR_
        vl_parametres[vl_indice].data = SYSTEM_VAR@(vg_nom_site)
        vl_parametres[vl_indice].output = FALSE

	IF COM05_SQL_Procedure (XZAE57_Ecrire_Fiche_Echangeur,
			   vl_parametres, vl_resultats, C_MODULE) <> COM_OK
	{
		INFO_MESSAGE@("Erreur lors de l'écriture en base des données spécifiques de l'événement")
		RETURN (COM_NOK)
	}
	ELSE IF vl_resultats.status = COM_NOK
		INFO_MESSAGE@("Erreur lors de l'écriture en base des données spécifiques de l'événement")

	RETURN (vl_resultats.status)
ENDMACRO





/*X*/
/* -----------------------------------------------------------------------
* SERVICE RENDU :
* charge de la base les informations specifiques du type fermeture echangeur
*
-----------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_ech_charge (va_fenetre,FORMAT COM_Identifiant_FMC ta_num_evt,
						va_horodate)

/*
* ARGUMENTS EN ENTREE :
* ta_num_evt            : numero et cle d'evenement
* va_fenetre            : id de la boite de dialogue fiche main courante
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*   MTMT
*
* FONCTION
--------------------------------------------------------------------- */
VAR FORMAT SQL_Procedure_Params@        vl_parametres
VAR FORMAT SQL_Procedure_Result@        vl_resultats
VAR 							vl_indice
VAR FORMAT TMC_echangeur        	 vl_tampon
VAR 							vl_fenetre
VAR 							tl_retour



/*A Traitements en cas d'erreur durant l'initialisation :
*   informer l'operateur, tracer l'erreur et abandonner
* ------------------------------------------------------*/
ON ERROR
{
    ERROR_BOX@
    COM01_Trace (COM_WARNING, COM03_Message_Erreur (C_MODULE))
    RETURN
}

    vl_indice=0
    vl_fenetre=va_fenetre

	vl_parametres[vl_indice].type=SYB#DATETIME_
	vl_parametres[vl_indice].data=va_horodate
	vl_parametres[vl_indice].output=false
	vl_indice=vl_indice+1

     vl_parametres[vl_indice].data=ta_num_evt.numero
     vl_parametres[vl_indice].type=SYB#INT4_
     vl_parametres[vl_indice].output=false
     vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=ta_num_evt.cle
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=false
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

  	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

     IF COM05_SQL_Procedure (XZAE52_Lire_Fiche_Echangeur,
				  vl_parametres, vl_resultats, C_MODULE) <> COM_OK
     {
	  INFO_MESSAGE@("Erreur lors de la lecture en base des données spécifiques de l'événement")
	  tl_retour[0]=va_fenetre
	       tl_retour[1]=null
	  RETURN (tl_retour)
	}

	vl_tampon=vl_resultats.return_parameters

	/*A mise a jour des controles dans la boite de dialogue*/
	DB_CTRL_VALUE@(vl_fenetre,"BT_entree1",-1*vl_tampon.entree1)
	DB_CTRL_VALUE@(vl_fenetre,"BT_entree2",-1*vl_tampon.entree2)
	DB_CTRL_VALUE@(vl_fenetre,"BT_sortie1",-1*vl_tampon.sortie1)
	DB_CTRL_VALUE@(vl_fenetre,"BT_sortie2",-1*vl_tampon.sortie2)
	
	tl_retour[0]=vl_fenetre
	tl_retour[1]=vl_tampon																		   																			   RETURN (tl_retour)
ENDMACRO




/*X*/
/* ---------------------------------------------------------------------------------
* SERVICE RENDU :
*
*  Affiche les donnees specifiques d'une fiche Echangeur
*
------------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_ech_affiche (va_fenetre, FORMAT TMC_echangeur va_echangeur)

/*
* ARGUMENTS EN ENTREE :
*  va_fenetre         : ID de la fenetre FMC
*  va_echangeur       : Données de la fiche Echangeur
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*   ITMA_TMC sur ouverture fiche Echangeur
*
* FONCTION
*  Value les champs de saisie spécifiques aux FMC de classe Echangeur
*
--------------------------------------------------------------------------------- */

ENDMACRO




/*X*/
/* ---------------------------------------------------------------------------------
* SERVICE RENDU :
*
*  Lit les donnees specifiques d'une fiche Echangeur saisies dans la fenetre
*
------------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_ech_saisie (va_fenetre, FORMAT TMC_echangeur va_echangeur)

/*
* ARGUMENTS EN ENTREE :
*  va_fenetre         : ID de la fenetre FMC
*
*
* ARGUMENTS EN SORTIE :
*  va_echangeur       : Donnees de la fiche Echangeur
*
*
* CODE RETOUR         : XDC_NOK si une valeur saisie est incorrecte, XDC_OK sinon.
*
* CONDITION D'UTILISATION
*   ITMA_TMC sur validation fiche Echangeur
*
* FONCTION
*  Remplit la fiche avec les donnees des champs de saisie specifiques.
*
--------------------------------------------------------------------------------- */

	RETURN (XDC_OK)
ENDMACRO




/*X*/
/* ---------------------------------------------------------------------------------
* SERVICE RENDU :
*
*  Effectue les controles de validite des donnees specifiques d'une fiche Echangeur
*
------------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_ech_controle (FORMAT TMC_fmc va_fiche, FORMAT TMC_echangeur va_echangeur)

/*
* ARGUMENTS EN ENTREE :
*  va_fiche           : Donnees generiques de la Fmc ;
*  va_echangeur       : Donnees specifiques a la Fmc Echangeur
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : XDC_NOK si les donnees sont incorrectes, XDC_OK sinon.
*
* CONDITION D'UTILISATION
*   ITMA_TMC sur validation fiche Echangeur
*
* FONCTION
*
--------------------------------------------------------------------------------- */

	RETURN (XDC_OK)
ENDMACRO
