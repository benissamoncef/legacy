/*E*/
/* Fichier : $Id: ITMA_THE_Histo_Exploitation.am,v 1.32 2017/03/09 17:11:49 pc2dpdy Exp $      Release : $Revision: 1.32 $        Date : $Date: 2017/03/09 17:11:49 $
-------------------------------------------------------------------------------
* STERIA *  PROJET MIGRAZUR
-------------------------------------------------------------------------------
* SOUS-SYSTEME  GESIHM
-------------------------------------------------------------------------------
* MODULE ITMA_THE * FICHIER ITMA_THE_Histo_Exploitation.am
-------------------------------------------------------------------------------
* DESCRIPTION DU MODULE :
*
* Historique de l'exploitation.
*
*   Cf. DCG 2.4.36
*
-------------------------------------------------------------------------------
* HISTORIQUE :
*
* Lecrivain 05 Sep 1994	: Creation                                        V1.1
* Lecrivain 13 Jan 1995	: Terminaison                                     V1.2
* Lecrivain 04 Mai 1995 : Plus de tete de bouchon proposee en type FMC    V1.7
* Torregrossa 02 Jui 1995 : Modification de la selection d'une fmc        V1.8
* Torregrossa 26 Jui 1995 : Suppression dump_array                        V1.9
* Torregrossa 03 Aou 1995 : Modif degrisage bouton choisir                V1.10
* Guilhou	01 aug 1995 : ajout bouton imprimer			V1.11
* Torregrossa 05 Sep 1995 : Modif grisage bouton choisir sur choix inval   V1.12
* Torregrossa 06 Sep 1995 : Modif suite grisage bouton choisir sur choix inval   V1.13
* Noel	  21 Sep 1995 : Introduction de la procedure commune d'impression	 V1.14
* Torregrossa 22 Jan 1996  : revue format impression V1.15
* Torregrossa 25 Jan 1996  : Modif libelle "supprimer FMC"               V1.16
*                            et deplacement de ce bouton 
* Torregrossa 31 Jan 1996  : Ajouter de tous dans la liste des districts V1.17-1.18
*                            limite a 30 types de fmc pour le critere 1
* Torregrossa 09 Fev 1996  : Modif recherche lorsque l'horodate de debut est non
*                            renseignee                                  V1.19
* Guilhou	24 Sep 1996 : ajout bouton Modifier pour les fiches vehicule achevees (ANA/33) (DEM/1207) V1.20
* Guilhou	09 dec 1996 : le bouton modifier reste grise sur autre selection que depanneur (DEM/1207) 1.21
* Guilhou	10 dec 1996 : acces depuis les PC simplifies (DEM/1207) 1.22
* Torregrossa 19 Jan 1998  : Ajouter des nouveaux equipements (1538) V1.23
* Torregrossa 24 Fev 1998  : Modif appel proc XZAE71 pour des nouveaux equipements (1538) V1.24
* Niepceron   03 Jul 1998 : Connexion a SQL_HIS (dem/1699) v1.25
* JMG	28/09/05	: ajout PMVA BAF BAD 1.26
* Claudel 09/07/07      : Suppression DY 1.27
* JMG     29/09/09      : SECTO DEM 887
* JPL		11/10/11 : ITMA_COM_Lire_Evenement n'est plus appele sur HIS (DEM 995)  1.29
* PNI	3/5/2013	: Ajout de l'indicateur d'enrichir à l'appel de ITMA_TID_Interv_Depanneur DEM1068/FI 2009 v1.30
* PNI 01/08/2014      : Limiter la profondeur de recherche d'évènements DEM1181 v1.31
* JMG   09/03/17        : REGIONALISATION - DEM1220 1.32
< 
---------------------------------------------------------------------------- */

INCLUDE	"dbase_.am"

INCLUDE	"XDMICG/inc/xdc_ax.h"
INCLUDE	"XDMICG/inc/xzic_ax.h"

INCLUDE	"GESIHM/inc/ITMA_COM.h"
INCLUDE	"GESIHM/inc/ITMA_TDO.h"
INCLUDE	"GESIHM/inc/ITMA_TAR.h"

INCLUDE	"GESIHM/inc/xzae71sp.h"
INCLUDE	"GESIHM/inc/xzae108sp.h"
INCLUDE "fichiers/mbo/VUES.h"


DEFINE	C_MODULE	"MTHE"			' Nom du module

DEFINE	C_SOUS_REP_MODELES	COM_SOUS_REP_IHM		' Repertoire des modeles

DEFINE	C_MODELE_HIST_EXP		"ITMA_THE_Hist_Expl"

/*A
 * Valeur maximale du type FMC dans le premier groupe de criteres
 * --------------------------------------------------------------
 */

DEFINE	C_MAX_CRITERE_FMC_1	30
DEFINE	C_MAX_CRITERE_ACT_1	14
DEFINE	C_MIN_CRITERE_ACT_2	XDC_EQT_FAC

/*A
 * Definition des libelles du bouton FMC
 * -------------------------------------
 */

DEFINE	C_LI_CHOISIR_FMC	"Sélectionner FMC"
DEFINE	C_LI_SUPPRIMER_FMC	"Désélectionner FMC"


/*A
 * Definition des codes et des libelles
 * d'erreurs specifiques au module
 * ------------------------------------
 */

DEFINE	C_ERR_IHM			1

DEFINE	C_LIB_CHOISIR_TYPE	"Choisir au moins un type FMC ou Action"
DEFINE	C_LIB_PERIODE_INVAL	"Période définie invalide"
DEFINE	C_LIB_CHOISIR_FMC	"Choisir une FMC avant"
DEFINE	C_LIB_CHOIX_INVAL	"Choisir une FMC au lieu d'une action"
DEFINE	C_LIB_PLUS_DE_CI	"Probleme de liaison avec la base de données du CI : modification momentanément impossible"


/*A
 * Description du format des donnees affichees
 * -------------------------------------------
 */

FORMAT	THE_Historique
	type,					' Type action/even/oper (25 car)
	localisation,				' Localisation initiale (23 car)
	date_debut,				' Horodate debut event. (19 car)
	date_fin,					' Horodate de fin (si existante)
	evt_lie					' Operation/event. lie (25 car)



/*A
 * Description du format des donnees lues en base
 * ----------------------------------------------
 */

FORMAT	THE_Donnees_Historique
	num_evt,
	cle_evt,
	type_evt,
	num_cause,
	cle_cause,
	date_deb,
	date_fin,
	autoroute,
	PR,
	sens,
	categorie


VAR FORMAT THE_Donnees_Historique vm_data		' Donnees selectees

VAR FORMAT THE_Historique vm_histo			' Historique selecte

VAR FORMAT COM_Intitule_FMC vm_FMC			' FMC choisie

VAR FORMAT TDO_District vm_l_districts			' Liste des districts
VAR FORMAT TDO_Type_FMC	vm_l_types_FMC			' Liste des types FMC
VAR vm_lib_types_action					' Libelles types actions

VAR vm_num_districts					' Numeros de districts
VAR vm_num_types_FMC					' Numeros de types FMC
VAR vm_num_types_action					' Numeros types action

VAR vm_masques_districts				' Masques associes

VAR vm_sel

/*X*/
/* ----------------------------------------------------------------------------
* SERVICE RENDU :
*  Affichage de la liste chronologique des actions, evenements ou operations
*  survenus sur des lieux et dans une periode donnes.
-------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_THE_Histo_Exploitation (va_appelant)

/*
* ARGUMENTS EN ENTREE :
*  va_appelant        : Nom de la macro Applix ayant invoque la presente.
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*   Selection de l'option "Consulter -> Historique d'Exploitation" dans MTMS
*
* FONCTION
*   Permet a l'operateur de saisir des criteres de recherche (periode, district
*   et type d'action).
*   Lit ensuite en base de donnees puis affiche la liste des actions, evenements
*   ou operations survenus sur les lieux et dans la periode choisis.
*
---------------------------------------------------------------------------- */

    VAR     vl_fenetre_histo			' Nom de la fenetre du module
    VAR     vl_objet_selecte			' L'objet courant de la fenetre
    VAR     vl_les_messages_acceptes		' Pour reception de signaux
    VAR     vl_la_fenetre_est_active
    VAR     vl_installer_traitement_erreur

    VAR FORMAT TDO_Evt_Cause vl_evt		' Evenement lie

    VAR     vl_date_deb, vl_date_fin
    VAR     vl_districts			' District(s) selecte(s)
    VAR     vl_types_FMC			' Type(s) FMC selecte(s)
    VAR     vl_types_act			' Type(s) d'action selecte(s)
	VAR tl_data
	VAR vl_fichier
	VAR tl_args,tl_message
	VAR tl_str,vl_indice
	VAR vl_comm

/*A
 * Traitements en cas d'erreur durant l'initialisation :
 * informer l'operateur, tracer l'erreur et abandonner
 * -----------------------------------------------------
 */

ON ERROR {
    ERROR_BOX@
    COM01_Trace (COM_WARNING, COM03_Message_Erreur (C_MODULE))
    RETURN
}


/*A
 * Charger la fenetre "Historique exploitation"
 * --------------------------------------------
 */

vl_fenetre_histo = DB_LOAD@ ("ITMA_THE")
DB_WINDOW_REMAIN@ (vl_fenetre_histo, TRUE)

DB_XPOS@ (vl_fenetre_histo, 0)
DB_YPOS@ (vl_fenetre_histo, 93)
COM27_Agrandir_Fenetre (vl_fenetre_histo, COM_LARGEUR_MAX, COM_HAUTEUR_MAX)

COM02_Attacher_Aide (vl_fenetre_histo, "ITMA_THE_Histo_Exploitation")


/*A
 * Mettre en place la reception des messages
 * -----------------------------------------
 */

vl_les_messages_acceptes[0] = COM_CANAL_FIN
DB_ACCEPT_POKES@ (vl_fenetre_histo, vl_les_messages_acceptes)


/*A
 * Definir les caracteristiques (initiales) des objets graphiques
 * --------------------------------------------------------------
 */

DB_CTRL_VALID_CHARS@ (vl_fenetre_histo, "BS_Jour_Debut", COM_CHIFFRES)
DB_CTRL_VALID_CHARS@ (vl_fenetre_histo, "BS_Mois_Debut", COM_CHIFFRES)
DB_CTRL_VALID_CHARS@ (vl_fenetre_histo, "BS_Annee_Debut", COM_CHIFFRES)
DB_CTRL_VALID_CHARS@ (vl_fenetre_histo, "BS_Heure_Debut", COM_CHIFFRES)
DB_CTRL_VALID_CHARS@ (vl_fenetre_histo, "BS_Minute_Debut", COM_CHIFFRES)
DB_CTRL_VALID_CHARS@ (vl_fenetre_histo, "BS_Jour_Fin", COM_CHIFFRES)
DB_CTRL_VALID_CHARS@ (vl_fenetre_histo, "BS_Mois_Fin", COM_CHIFFRES)
DB_CTRL_VALID_CHARS@ (vl_fenetre_histo, "BS_Annee_Fin", COM_CHIFFRES)
DB_CTRL_VALID_CHARS@ (vl_fenetre_histo, "BS_Heure_Fin", COM_CHIFFRES)
DB_CTRL_VALID_CHARS@ (vl_fenetre_histo, "BS_Minute_Fin", COM_CHIFFRES)

DB_CTRL_MULTI_SELECT@ (vl_fenetre_histo, "BL_Districts", TRUE)

DB_CTRL_MULTI_SELECT@ (vl_fenetre_histo, "BL_Types_FMC", TRUE)
vl_types_FMC[0] = 0
DB_CTRL_VALUE@ (vl_fenetre_histo, "BL_Types_FMC", vl_types_FMC)

DB_CTRL_MULTI_SELECT@ (vl_fenetre_histo, "BL_Types_Actions", TRUE)
DB_CTRL_VALUE@ (vl_fenetre_histo, "BL_Types_Actions", vl_types_FMC)

DB_CTRL_TITLE@ (vl_fenetre_histo, "LI_FMC", NULL)

DB_TABLE_ALLOW_COLUMN_RESIZING@ (vl_fenetre_histo, "TA_Historique", FALSE)
DB_CTRL_HORIZ_SCROLL@ (vl_fenetre_histo, "TA_Historique", FALSE)
DB_CTRL_RETURN_ON_CHANGE@ (vl_fenetre_histo, "TA_Historique", TRUE)

DB_CTRL_TITLE@	(vl_fenetre_histo, "BP_Choix_FMC", C_LI_CHOISIR_FMC)
DB_CTRL_GRAYED@(vl_fenetre_histo,"BP_Choix_FMC",TRUE)

DB_CTRL_GRAYED@(vl_fenetre_histo,"BP_modifier",TRUE)

/*A
 * Initialiser les donnees a visualiser (listes des districts et des types FMC)
 * ----------------------------------------------------------------------------
 */

IF THE_Init_Districts_Types_FMC (vl_fenetre_histo) <> COM_OK
    RETURN (COM_NOK)


/*A
 * Traitements en cas d'erreur durant la visualisation :
 * informer l'operateur et selon la nature et la gravite
 * de l'erreur la tracer ou non, continuer ou abandonner
 * -----------------------------------------------------
 */

vl_installer_traitement_erreur = TRUE
WHILE vl_installer_traitement_erreur
    vl_installer_traitement_erreur = FALSE

    ON ERROR {
	ERROR_BOX@
	IF ERROR_NUMBER@() <> COM_ERR_DATE_INVAL  AND
	   ERROR_NUMBER@() <> C_ERR_IHM
	    COM01_Trace (COM_WARNING, COM03_Message_Erreur (C_MODULE))
	vl_installer_traitement_erreur = TRUE
    }
WEND


/*A
 * Tant que la fenetre n'est pas desactivee, la visualiser
 * -------------------------------------------------------
 */

vl_la_fenetre_est_active = TRUE
WHILE vl_la_fenetre_est_active

    DB_DISPLAY@ (vl_fenetre_histo)
    vl_objet_selecte = DB_EXIT_CTRL@ (vl_fenetre_histo)
    IF vl_objet_selecte <> "poke_"  AND  SYSTEM_VAR@ (vg_verrou)
	vl_objet_selecte = NULL

    CASE OF vl_objet_selecte

    CASE "poke_"
        CASE OF  DB_GET_POKE@ (vl_fenetre_histo)
        CASE COM_CANAL_FIN
            vl_la_fenetre_est_active = FALSE
        ENDCASE


    CASE "BP_Quitter"
	vl_la_fenetre_est_active = FALSE


    /*A
     * Sur action "horodate courante", la lire et l'afficher
     * -----------------------------------------------------
     */

    CASE "BP_horodeb"
	COM24_Afficher_Horodate (COM09_Date_Courante(), vl_fenetre_histo,
			     "BS_Jour_Debut", "BS_Mois_Debut", "BS_Annee_Debut",
			     "BS_Heure_Debut", "BS_Minute_Debut")


    CASE "BP_horofin"
	COM24_Afficher_Horodate (COM09_Date_Courante(), vl_fenetre_histo,
				 "BS_Jour_Fin", "BS_Mois_Fin", "BS_Annee_Fin",
				 "BS_Heure_Fin", "BS_Minute_Fin")

    CASE "BP_modifier"
	MACRO_WINS_BUSY@()
	/*teste la connexion avec le CI*/
	if (SYSTEM_VAR@(vg_type_machine)=XDC_TYPEM_PCS)
	  vl_comm=SYSTEM_VAR@(vg_comm_CI)
	else 
	  vl_comm=COM40_Teste_Connexion_Site(XDC_CI)
	
	if (vl_comm=COM_OK)
	  /*ouvre la fiche depanneur*/ /*DEM1068*/
	  PEND_FOR_NEW_TASK@("ITMA_TID_Interv_Depanneur",
				"ITMA_THE_Historique_Exploitation",
				vm_data[vm_sel[0]],TRUE)
	else
	  INFO_MESSAGE@(C_LIB_PLUS_DE_CI)

    /*A
     * recupere la fiche choisie
     * -------------------------
     */

   CASE "TA_Historique"
	vm_sel=DB_TABLE_GET_SELECTIONS@(vl_fenetre_histo,"TA_Historique")

	/*si action depanneur*/
	IF (vm_data[vm_sel[0]].type_evt = XDC_ACT_DEPANNEUR)
		DB_CTRL_GRAYED@(vl_fenetre_histo, "BP_modifier", FALSE)
	ELSE{
		DB_CTRL_GRAYED@(vl_fenetre_histo, "BP_modifier", TRUE)
     		IF vm_data[vm_sel[0]].categorie = XDC_HIS_EXP_ACT {
			vm_sel = NULL
			DB_TABLE_SET_SELECTIONS@(vl_fenetre_histo,"TA_Historique", NULL)
			INFO_MESSAGE@(C_LIB_CHOIX_INVAL)
			IF (DB_CTRL_GET_TITLE@	(vl_fenetre_histo, "BP_Choix_FMC") = 	C_LI_CHOISIR_FMC)
				DB_CTRL_GRAYED@(vl_fenetre_histo,"BP_Choix_FMC",TRUE)
		}
		ELSE IF IS_NULL@ (vm_FMC)
			DB_CTRL_GRAYED@(vl_fenetre_histo,"BP_Choix_FMC",FALSE)
	}


    /*A
     * Sur choix "Choix FMC", positionner ou suppimer la FMC selectionnee
     * ------------------------------------------------------------------
     */

    CASE "BP_Choix_FMC"
	IF IS_NULL@ (vm_FMC)  {
		DB_CTRL_TITLE@	(vl_fenetre_histo, vl_objet_selecte,
						 C_LI_SUPPRIMER_FMC)

		vm_FMC.IdFMC.numero=vm_data[vm_sel[0]].num_evt
		vm_FMC.IdFMC.cle=vm_data[vm_sel[0]].cle_evt
		vm_FMC.Numtype=vm_data[vm_sel[0]].type_evt
		vm_FMC.localisation.NumAuto=vm_data[vm_sel[0]].autoroute
		vm_FMC.localisation.PR=vm_data[vm_sel[0]].PR
		vm_FMC.localisation.sens_circulation=vm_data[vm_sel[0]].sens
		vm_FMC.date=COM18_Date_SGBD_Formatee(vm_data[vm_sel[0]].date_deb)

		DB_CTRL_TITLE@ (vl_fenetre_histo, "LI_FMC",
				   		COM11_Libelle_FMC (vm_FMC))

	} ELSE {
	    /*A suppression de la fmc selectionnee */
	    DB_CTRL_TITLE@ (vl_fenetre_histo, "LI_FMC", NULL)
	    DB_CTRL_TITLE@	(vl_fenetre_histo, vl_objet_selecte, C_LI_CHOISIR_FMC)
	    IF IS_NULL@ (vm_FMC) OR IS_NULL@ (vm_sel)
	   		DB_CTRL_GRAYED@(vl_fenetre_histo,vl_objet_selecte,TRUE)
	    vm_FMC = NULL
	}


    /*A
     * Sur choix "Recherche", verifier qu'un type FMC ou un
     * type d'action a ete choisi puis lire en base de donnees
     * et afficher les evenements repondant aux criteres saisis
     * --------------------------------------------------------
     */

    CASE "BP_Recherche"

	MACRO_WINS_BUSY@ ()
	vl_date_deb = COM23_Horodate (vl_fenetre_histo, "BS_Jour_Debut",
					"BS_Mois_Debut", "BS_Annee_Debut",
					"BS_Heure_Debut", "BS_Minute_Debut")
	vl_date_fin = COM23_Horodate (vl_fenetre_histo, "BS_Jour_Fin",
					"BS_Mois_Fin", "BS_Annee_Fin",
					"BS_Heure_Fin", "BS_Minute_Fin")

       /* controle de date pour recul dans le passe selon le poste */
       INSTALL_FILE@("VUES_Commun.elo")
	IF (VUESCOM50_Verifie_Recul_Dates(vl_date_deb,vl_date_fin)) = XDC_NOK
                                              ERROR@ (COM_ERR_DATE_INVAL, "LES REQUETES LANCEES A PARTIR DE CE POSTE NE PERMETTENT PAS D'ACCEDER A DES DONNEES ANTERIEURES A 1 AN (cnil)")

	IF COM17_Difference_Dates (vl_date_fin, COM09_Date_Courante ()) > 0 {
	    DB_CURSOR_IN_ENTRY@ (vl_fenetre_histo, "BS_Jour_Fin", TRUE)
	    ERROR@ (COM_ERR_DATE_INVAL, COM_LIB_DATE_INVAL)
	}
	IF NOT IS_NULL@ (vl_date_deb)
	    IF COM17_Difference_Dates (vl_date_fin, vl_date_deb) <= 0 {
		DB_CURSOR_IN_ENTRY@ (vl_fenetre_histo, "BS_Jour_Debut", TRUE)
		ERROR@ (C_ERR_IHM, C_LIB_PERIODE_INVAL)
	    }

	vl_districts = DB_CTRL_GET_VALUE@ (vl_fenetre_histo, "BL_Districts")
	vl_types_FMC = DB_CTRL_GET_VALUE@ (vl_fenetre_histo, "BL_Types_FMC")
	vl_types_act = DB_CTRL_GET_VALUE@ (vl_fenetre_histo, "BL_Types_Actions")

     /* mise a jour du libelle du bouton*/
	if IS_NULL@ (vm_FMC) {
     	DB_CTRL_TITLE@	(vl_fenetre_histo, "BP_Choix_FMC", C_LI_CHOISIR_FMC)
    		DB_CTRL_GRAYED@(vl_fenetre_histo,"BP_Choix_FMC",TRUE)
	} ELSE 
		DB_CTRL_TITLE@	(vl_fenetre_histo, "BP_Choix_FMC", C_LI_SUPPRIMER_FMC)

     vm_sel = NULL
	DB_CTRL_GRAYED@(vl_fenetre_histo, "BP_modifier", TRUE)
	
	THE_Rechercher_Historique (vl_fenetre_histo, vm_FMC.IdFMC,
				      vl_date_deb, vl_date_fin,
				      vl_districts, vl_types_act, vl_types_FMC)


	/*demande d'impression*/
	CASE "BP_imprimer"
		/*recuperation du dernier historique*/
		tl_data=DB_TABLE_GET_DATA@(vl_fenetre_histo,"TA_Historique")

		IF (tl_data=NULL)
			INFO_MESSAGE@("Rechercher d'abord l'historique de l'exploitation")
		ELSE {
			/*A ecrire le texte dans un fichier*/
			WP_APPLICATION_DLG@(NULL, TRUE)
			WP_LOAD_FILE@ (SYSTEM_VAR@ (vg_repertoire_migrazur) ++
							C_SOUS_REP_MODELES ++ C_MODELE_HIST_EXP ++ ".aw")
			WP_SET_DOC_VAR@("horodate_debut",vl_date_deb)
			WP_SET_DOC_VAR@("horodate_fin",vl_date_fin)
			tl_str=NULL
			If (IS_ARRAY@(vl_districts)){			
				FOR vl_indice=0 TO (ARRAY_SIZE@(vl_districts)-1)
					IF (tl_str=NULL)
						tl_str[0]=vm_l_districts[vl_districts[vl_indice]].nom
					ELSE
						tl_str[ARRAY_SIZE@(tl_str)]=
							vm_l_districts[vl_districts[vl_indice]].nom
				NEXT vl_indice
			}
			ELSE
				tl_str=NULL
			WP_SET_DOC_VAR@("districts",tl_str)


			tl_str=NULL
			If (IS_ARRAY@(vl_types_FMC)){			
				FOR vl_indice=0 TO (ARRAY_SIZE@(vl_types_FMC)-1)
					IF (tl_str=NULL)
						tl_str[0]=vm_l_types_FMC[vl_types_FMC[vl_indice]].nom
					ELSE
						tl_str[ARRAY_SIZE@(tl_str)]=
							vm_l_types_FMC[vl_types_FMC[vl_indice]].nom
				NEXT vl_indice
			}
			ELSE
				tl_str=NULL
			WP_SET_DOC_VAR@("types_fmc",tl_str)

			tl_str=NULL
			If (IS_ARRAY@(vl_types_act)){			
				FOR vl_indice=0 TO (ARRAY_SIZE@(vl_types_act)-1)
					IF (tl_str=NULL)
						tl_str[0]=
						vm_lib_types_action[vl_types_act[vl_indice]]
					ELSE
						tl_str[ARRAY_SIZE@(tl_str)]=
							vm_lib_types_action[vl_types_act[vl_indice]]
				NEXT vl_indice
			}
			ELSE
				tl_str=NULL
			WP_SET_DOC_VAR@("types_actions",tl_str)

			tl_str=NULL
			FOR vl_indice=0 TO (ARRAY_SIZE@(tl_data)-1)
				tl_str[vl_indice]=FORMAT@("%-23s %-14s   %-16s   %-16s   %s", 
							tl_data[vl_indice][0], tl_data[vl_indice][1], 
							tl_data[vl_indice][2],tl_data[vl_indice][3],
							tl_data[vl_indice][4])
			NEXT vl_indice
			WP_SET_DOC_VAR@("historique",tl_str)

			WP_SET_DOC_VAR@("fmc_liee",
					DB_CTRL_GET_TITLE@(vl_fenetre_histo,"LI_FMC"))

			vl_fichier = C_MODELE_HIST_EXP ++ "_" ++
							SYSTEM_VAR@(vg_numero_poste)

			COM36_Imprimer_Texte(vl_fichier)
		}

    ENDCASE
WEND

ENDMACRO



/*X*/
/* ----------------------------------------------------------------------------
* SERVICE RENDU :
*  Initialise la liste des districts et celle des types FMC.
-------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO THE_Init_Districts_Types_FMC (va_fenetre)

/*
* ARGUMENTS EN ENTREE :
*   va_fenetre        : Id. de la fenetre contenant les objets a initialiser.
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : COM_OK
*
* CONDITION D'UTILISATION
*   ITMA_THE_Histo_Exploitation
*
* FONCTION
*   Initialise les valeurs des listes des districts des types FMC a partir
*   des donnees figurant dans le module global.
*
---------------------------------------------------------------------------- */

    VAR FORMAT THE_Historique vl_t_histo	' Table historique (vide)
    VAR	vl_t_titres				' Titres colonnes de la table
    VAR FORMAT TDO_Type_FMC vl_type_FMC
    VAR i
	VAR tl_selection
	VAR vl_tous_districts

/*A
 * Lire dans l'environnement la liste des districts ;
 * initialiser la liste des masques associes ; afficher les libelles
 * -----------------------------------------------------------------
 */

vm_l_districts = SYSTEM_VAR@ (vg_les_districts)
vl_tous_districts = null, "Tous", null
vm_l_districts = ARRAY_INSERT@(vm_l_districts, vl_tous_districts, 0)
vm_num_districts = ARRAY_COLUMN@ (vm_l_districts, TDO_NUMERO_DISTRICT)

FOR i = 0  TO ARRAY_SIZE@ (vm_l_districts) - 1
    CASE OF vm_l_districts[i].numero
    CASE XDC_CI
	vm_masques_districts[i] = XDC_HIS_EXP_CI
    CASE XDC_DN
	vm_masques_districts[i] = XDC_HIS_EXP_DN
    CASE XDC_VC
	vm_masques_districts[i] = XDC_HIS_EXP_DM
    CASE XDC_DA
	vm_masques_districts[i] = XDC_HIS_EXP_DA
    CASE XDC_VD
	vm_masques_districts[i] = XDC_HIS_EXP_DP
    CASE XDC_VE
	vm_masques_districts[i] = XDC_HIS_EXP_DC
    CASE XDC_DP
	vm_masques_districts[i] = XDC_HIS_EXP_DS
    DEFAULT
	vm_masques_districts[i] = null
    ENDCASE
NEXT i

DB_CTRL_STRINGS@ (va_fenetre, "BL_Districts",
				ARRAY_COLUMN@ (vm_l_districts, TDO_NOM_DISTRICT))
tl_selection[0]=0
DB_CTRL_VALUE@ (va_fenetre, "BL_Districts", tl_selection)

/*A
 * Lire dans l'environnement la liste des types FMC et des types d'actions ;
 * supprimer le type FMC "Tete de bouchon" et ajouter un element "Aucun"
 * -------------------------------------------------------------------------
 */

vm_l_types_FMC = SYSTEM_VAR@ (vg_les_types_FMC)
i = ARRAY_INDEX@ (ARRAY_COLUMN@ (vm_l_types_FMC, TDO_NUMERO_FMC), 37)
vm_l_types_FMC = ARRAY_DELETE@ (vm_l_types_FMC, i)
vl_type_FMC.numero = "Aucun"
vl_type_FMC.nom = "Aucun"
vm_l_types_FMC = ARRAY_INSERT@ (vm_l_types_FMC, vl_type_FMC, 0)

vm_num_types_FMC = ARRAY_COLUMN@ (vm_l_types_FMC, TDO_NUMERO_FMC)
DB_CTRL_STRINGS@ (va_fenetre, "BL_Types_FMC",
		     ARRAY_COLUMN@ (vm_l_types_FMC, TDO_NOM_FMC))


vm_num_types_action = "Aucun",
			XDC_ACT_NAV,
			XDC_ACT_PMV,
			XDC_ACT_TUNNEL,
			XDC_ACT_PAL,
			XDC_ACT_FAC,
			XDC_ACT_FAU,
			XDC_ACT_DEPANNEUR,
			XDC_ACT_AFF_GARE,
			XDC_ACT_PAT_SIS,
			XDC_ACT_INTERVENTION,
			XDC_ACT_PMV_REMORQUE,
			XDC_ACT_PMV_FOURGON,
			XDC_ACT_TFM,
			XDC_ACT_ECHANGEUR,
			XDC_ACT_FAX,
			XDC_ACT_TEL,
			XDC_ACT_BIP,
			XDC_ACT_PMVA,
			XDC_ACT_BAF,
			XDC_ACT_BAD

vm_lib_types_action = "Aucun",
			XDC_ACT_LIB_NAV,
			XDC_ACT_LIB_PMV,
			XDC_ACT_LIB_TUNNEL,
			XDC_ACT_LIB_PAL,
			XDC_ACT_LIB_FAC,
			XDC_ACT_LIB_FAU,
			XDC_ACT_LIB_DEPANNEUR,
			XDC_ACT_LIB_AFF_GARE,
			XDC_ACT_LIB_PAT_SIS,
			XDC_ACT_LIB_INTERVENTION,
			XDC_ACT_LIB_PMV_REMORQUE,
			XDC_ACT_LIB_PMV_FOURGON,
			XDC_ACT_LIB_TFM,
			XDC_ACT_LIB_ECHANGEUR,
			XDC_ACT_LIB_FAX,
			XDC_ACT_LIB_TEL,
			XDC_ACT_LIB_BIP,
			XDC_ACT_LIB_PMVA,
			XDC_ACT_LIB_BAF,
			XDC_ACT_LIB_BAD
DB_CTRL_STRINGS@ (va_fenetre, "BL_Types_Actions", vm_lib_types_action)


/*A
 * Definir les titres des colonnes de la table
 * -------------------------------------------
 */

vl_t_titres[0] = "Type",          200	' Titre colonne et taille en pixels
vl_t_titres[1] = "Localisation",  154
vl_t_titres[2] = "Date Début",    106
vl_t_titres[3] = "Date Fin",      106
vl_t_titres[4] = "Evénement lié", 350
vl_t_titres[5] = "", 0


/*A
 * Afficher la table
 * -----------------
 */

DB_DISPLAY_ONLY@ (va_fenetre, TRUE)                     ' Pour avoir acces
DB_DISPLAY@ (va_fenetre)                                '  a l'objet table
DB_DISPLAY_ONLY@ (va_fenetre, FALSE)

DB_TABLE_SET_DATA@(va_fenetre, "TA_Historique", vl_t_histo, vl_t_titres)

RETURN (COM_OK)

ENDMACRO



/*X*/
/* ----------------------------------------------------------------------------
* SERVICE RENDU :
*  Recherche et affiche les donnees historisees repondant aux criteres indiques
-------------------------------------------------------------------------------

*/

MACRO THE_Rechercher_Historique (va_fenetre,
				    FORMAT COM_Identifiant_FMC va_id_FMC,
				    va_horodate_debut, va_horodate_fin,
				    va_districts, va_types_action,
				    va_types_FMC)

/*
* ARGUMENTS EN ENTREE :
*   va_fenetre        : Id. de la fenetre contenant les objets a valuer ;
*   va_id_FMC         : Identifiant fiche main courante ;
*   va_horodate_debut : Horodate de debut de recherche ;
*   va_horodate_fin   : Horodate de fin de recherche ;
*   va_districts      : Liste des districts choisis ;
*   va_types_action   : Liste des types d'action choisis ;
*   va_types_FMC      : Liste des types FMC choisis.
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : COM_OK en cas d'execution correcte, COM_NOK sinon.
*
* CONDITION D'UTILISATION
*   ITMA_THE_Histo_Exploitation
*
* FONCTION
*   Recherche en base de donnees les evenements historises repondant aux
*   criteres indiques en arguments ; affiche les donnees retournees dans la
*   table d'evenements.
*
---------------------------------------------------------------------------- */

    VAR     vl_criteres_districts, vl_criteres_action1, vl_criteres_action2	' Criteres construits
    VAR     vl_criteres_FMC_1, vl_criteres_FMC_2

    VAR FORMAT SQL_Procedure_Params@ vl_parametres
    VAR FORMAT SQL_Procedure_Result@ vl_resultats
    VAR FORMAT COM_Localisation vl_localisation
    VAR FORMAT COM_Intitule_FMC vl_id_FMC_cause
    VAR     i, j


/*A
 * Constituer les criteres de selection a partir des listes
 * et verifier qu'au moins un type d'action ou FMC a ete choisi
 * ------------------------------------------------------------
 */

vl_criteres_action1 = 0
vl_criteres_action2 = 0
FOR i = 0  TO ARRAY_SIZE@ (va_types_action) - 1
    IF va_types_action[i] <> 0 {			'Ignorer le type "Aucun"
	IF vm_num_types_action[va_types_action[i]] > C_MAX_CRITERE_ACT_1
		vl_criteres_action2 = vl_criteres_action2 + 
				2 ^ (vm_num_types_action[va_types_action[i]] - C_MIN_CRITERE_ACT_2 )
	ELSE vl_criteres_action1 = vl_criteres_action1 +
			       2 ^ (vm_num_types_action[va_types_action[i]] - 1)
    }
NEXT i


/*B
 * Criteres de type FMC
 * --------------------
 */

vl_criteres_FMC_1 = 0
vl_criteres_FMC_2 = 0
FOR i = 0  TO ARRAY_SIZE@ (va_types_FMC) - 1
    IF va_types_FMC[i] <> 0 {				'Ignorer le type "Aucun"
	IF vm_num_types_FMC[va_types_FMC[i]] > C_MAX_CRITERE_FMC_1
	    vl_criteres_FMC_2 = vl_criteres_FMC_2 +
				   2 ^ (vm_num_types_FMC[va_types_FMC[i]]
					  - C_MAX_CRITERE_FMC_1 - 1)
	ELSE vl_criteres_FMC_1 = vl_criteres_FMC_1 +
				    2 ^ (vm_num_types_FMC[va_types_FMC[i]] - 1)
    }
NEXT i

IF vl_criteres_action1 = 0  AND vl_criteres_action2 = 0  AND  
vl_criteres_FMC_1 = 0  AND vl_criteres_FMC_2 = 0
    ERROR@ (C_ERR_IHM, C_LIB_CHOISIR_TYPE)


/*B
 * Criteres de districts : si aucun n'est selecte les prendre tous
 * ---------------------------------------------------------------
 */

vl_criteres_districts = 0
FOR i = 0  TO ARRAY_SIZE@ (va_districts) - 1
    vl_criteres_districts = vl_criteres_districts +
				vm_masques_districts[va_districts[i]]
NEXT i

IF vl_criteres_districts = 0 {
    FOR i = 0  TO ARRAY_SIZE@ (vm_masques_districts) - 1
	vl_criteres_districts = vl_criteres_districts + vm_masques_districts[i]
    NEXT i
}

/*B
 * date de debut : si non valuee alors initialiser a 1900
 * ------------------------------------------------------
 */

IF va_horodate_debut = NULL
	va_horodate_debut = XDC_DATE_NULLE

/*A
 * Lire en base de donnees les evenements repondant aux criteres
 * -------------------------------------------------------------
 */

vl_parametres[0].type = COM_Numero_Evenement
vl_parametres[0].data = va_id_FMC.numero
vl_parametres[0].output = FALSE

vl_parametres[1].type = COM_Cle_Evenement
vl_parametres[1].data = va_id_FMC.cle
vl_parametres[1].output = FALSE

vl_parametres[2].type = SYB#DATETIME_
vl_parametres[2].data = va_horodate_debut
vl_parametres[2].output = FALSE

vl_parametres[3].type = SYB#DATETIME_
vl_parametres[3].data = va_horodate_fin
vl_parametres[3].output = FALSE

vl_parametres[4].type = SYB#INT4_
vl_parametres[4].data = vl_criteres_districts
vl_parametres[4].output = FALSE

vl_parametres[5].type = SYB#INT4_
vl_parametres[5].data = vl_criteres_action1
vl_parametres[5].output = FALSE

vl_parametres[6].type = SYB#INT4_
vl_parametres[6].data = vl_criteres_action2
vl_parametres[6].output = FALSE

vl_parametres[7].type = SYB#INT4_
vl_parametres[7].data = vl_criteres_FMC_1
vl_parametres[7].output = FALSE

vl_parametres[8].type = SYB#INT4_
vl_parametres[8].data = vl_criteres_FMC_2
vl_parametres[8].output = FALSE

IF COM50_DateHistorique(va_horodate_debut)
{
	IF COM41_SQL_Procedure_HIS (XZAE71_Historique_Exploitation,
			   vl_parametres, vl_resultats, C_MODULE) <> COM_OK
   		 RETURN (COM_NOK)
}
ELSE
{	IF (SYSTEM_VAR@(vg_type_machine)=XDC_TYPEM_PCS) {
		IF COM39_SQL_Procedure_PCS (XZAE71_Historique_Exploitation,
			   vl_parametres, vl_resultats, C_MODULE) <> COM_OK
   		 RETURN (COM_NOK)
	}
	else {
		IF COM05_SQL_Procedure (XZAE71_Historique_Exploitation,
			vl_parametres, vl_resultats, C_MODULE) <> COM_OK
		RETURN (COM_NOK)
	}
}
vm_data = vl_resultats.select_results[0]


/*A
 * Afficher les donnees retournees
 * -------------------------------
 */

vm_histo = NULL
FOR i = 0  TO ARRAY_SIZE@ (vm_data) - 1
    IF vm_data[i].categorie = XDC_HIS_EXP_ACT {
	j = ARRAY_INDEX@ (vm_num_types_action, vm_data[i].type_evt)
	IF j > 0
	    vm_histo[i].type = vm_lib_types_action[j]
    } ELSE {
	j = ARRAY_INDEX@ (vm_num_types_FMC, vm_data[i].type_evt)
	IF j > 0
	    vm_histo[i].type = vm_l_types_FMC[j].nom
    }

    vm_histo[i].date_debut = COM18_Date_SGBD_Formatee (vm_data[i].date_deb)
    vm_histo[i].date_fin = COM18_Date_SGBD_Formatee (vm_data[i].date_fin)

    vl_localisation = vm_data[i].autoroute, vm_data[i].PR, vm_data[i].sens
    vm_histo[i].localisation = COM10_Localisation (vl_localisation)

	IF vm_data[i].num_cause <> NULL  AND  vm_data[i].cle_cause <> NULL
	{
		IF ITMA_COM_Lire_Evenement (vm_data[i].num_cause, vm_data[i].cle_cause,
					vl_id_FMC_cause, C_MODULE) = COM_OK
			vm_histo[i].evt_lie = COM11_Libelle_FMC (vl_id_FMC_cause)
	}
NEXT i


DB_TABLE_CLEAR_DATA@ (va_fenetre, "TA_Historique", 0, -1)
DB_TABLE_SET_NEW_DATA@ (va_fenetre, "TA_Historique", vm_histo, 0)

RETURN (COM_OK)

ENDMACRO
