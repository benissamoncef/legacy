/*E*/
/* Fichier : $Id: ITMA_TMC_sscnc.am,v 1.16 2020/11/03 17:44:20 pc2dpdy Exp $			  Release :$Revision: 1.16 $ 	   Date : $Date: 2020/11/03 17:44:20 $
-----------------------------------------------------------------------
*  GTIE  *  PROJET MIGRAZUR
-----------------------------------------------------------------------
*  SOUS-SYSTEM GESIHM
-----------------------------------------------------------------------
*  MODULE MTMC  *  Fichier ITMA_TMC_sscnc.am
-----------------------------------------------------------------------
*  DESCRIPTION DU MODULE :
*
*   Gere les donnees specifiques au type sous-concessionnaire
*   et les champs correspondants dans la fenetre de saisie FMC
*
-----------------------------------------------------------------------
*  HISTORIQUE :
*
*  Guilhou	24 Oct 1994	1.1	: Création
*  Guilhou	24 sep 1996	1.12	: Modif cr de sauvegarde (ANA 21) 
*  Torregrossa	17 Oct 1996	1.13	: Lecture des carburants en base (IHM7)
*  Lecrivain	22 Mar 2007	1.14	: Afficher/effacer champs pour retypage (dem/637)
* LCL   22/04/20        : MOVIS Ajout site local pilotage DEM-SAE93
-----------------------------------------------------------------------
*/

/*A Déclaration des fichiers à inclure */
INCLUDE	"dbase_.am"
INCLUDE	"../../XDMICG/inc/xdc_ax.h"
INCLUDE	"../../XDMICG/inc/xzic_ax.h"
INCLUDE	"../../XDMICG/inc/xzaec_ax.h"
INCLUDE	"../inc/ITMA_COM.h"
INCLUDE	"../inc/ITMA_TMC.h"
INCLUDE	"../inc/ITMA_TDO.h"
INCLUDE	"../inc/ITMA_TAR.h"
INCLUDE	"../inc/xzae58sp.h"
INCLUDE	"../inc/xzae50sp.h"
INCLUDE	"../inc/xzao322sp.h"


/*A Définition des constantes */

DEFINE	C_MODULE		"MTMC"		' Nom du module


/*X*/
/* ---------------------------------------------------------------------------------
* SERVICE RENDU :
*
*  Affiche / masque dans la fenetre FMC les champs specifiques
*   au type sous-concessionnaire
*
------------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_sscnc (va_fenetre, va_type_fmc, va_visible)

/*
* ARGUMENTS EN ENTREE :
*  va_fenetre         : id de la boite de dialogue ou afficher les champs
*  va_type_fmc        : type de la fmc
*  va_visible         : indicateur de visibilite demandee
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*   MTMT
*
* FONCTION
--------------------------------------------------------------------------------- */
VAR tl_controles
VAR vl_indice
VAR vl_fenetre
VAR vl_droits


/*A Traitements en cas d'erreur :
 *   informer l'operateur, tracer l'erreur et abandonner
 * -----------------------------------------------------
 */
ON ERROR 
{
	ERROR_BOX@
	COM01_Trace (COM_WARNING, COM03_Message_Erreur (C_MODULE))
	RETURN
}

vl_fenetre = va_fenetre

ITMA_TMC_sscnc_init (vl_fenetre)


/*A rendre visibles ou masquer les champs associes au type fmc */
tl_controles = {
	"BS_nom",
	"BT_ferme",
	"BT_penurie",
	"BO_carburant"
}
FOR vl_indice = 0 TO ARRAY_SIZE@ (tl_controles) - 1
	DB_CTRL_DISPLAY@ (vl_fenetre, tl_controles[vl_indice], va_visible)
NEXT vl_indice

	RETURN (vl_fenetre)
ENDMACRO





/*X*/
/* ---------------------------------------------------------------------------------
* SERVICE RENDU :
*
*  Initialiser certaines données et champs specifiques des FMC
*   de classe sous-concessionnaire
*
------------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_sscnc_init (va_fenetre)

VAR	vl_marque
VAR	tl_carbs

/*B Initialisations a effectuer a chaque ouverture de la fenetre FMC au moins */
vl_marque = DB_CTRL_GET_CLIENT_DATA@ (va_fenetre, "BO_carburant")
IF IS_NULL@ (vl_marque) {
	DB_CTRL_CLIENT_DATA@ (va_fenetre, "BO_carburant", "Initialise")

	/*B Lire en base de donnees les types de carburants */
	tl_carbs = ITMA_TMC_lire_carburants ()
	IF IS_ARRAY@ (tl_carbs) {
		DB_CTRL_STRINGS@ (va_fenetre, "BO_carburant",
	                             ARRAY_COLUMN@ (tl_carbs, COM_NOM_CARBURANT))
	}


	/*A Griser la boite de saisie du carburant par defaut */
	DB_CTRL_GRAYED@ (va_fenetre, "BO_carburant", TRUE)
	DB_CTRL_RETURN_ON_CHANGE@ (va_fenetre, "BT_penurie", TRUE)
}

ENDMACRO





/*X*/
/* -----------------------------------------------------------------------
* SERVICE RENDU :
* sauve en base les informations specifiques du type concessionnaire
*
-----------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_sscnc_sauve (FORMAT COM_Identifiant_FMC ta_num_evt, FORMAT TMC_sousconce va_tampon,va1,va2,va_fenetre)

/*
* ARGUMENTS EN ENTREE :
* ta_num_evt            : numero et cle d'evenement
* va_tampon             : valeurs des controles
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*   MTMT
*
* FONCTION
--------------------------------------------------------------------- */
VAR FORMAT SQL_Procedure_Params@        vl_parametres
VAR FORMAT SQL_Procedure_Result@        vl_resultats
VAR vl_indice
VAR vl_penurie

/*A Traitements en cas d'erreur durant l'initialisation :
*   informer l'operateur, tracer l'erreur et abandonner
* ------------------------------------------------------*/
ON ERROR
{
    ERROR_BOX@
    COM01_Trace (COM_WARNING, COM03_Message_Erreur (C_MODULE))
    RETURN
}

       vl_indice=0

       /*A preparation des parametres de la procedure stockee*/
       vl_parametres[vl_indice].data=ta_num_evt.numero
       vl_parametres[vl_indice].type=SYB#INT4_
       vl_parametres[vl_indice].output=FALSE
       vl_indice=vl_indice+1

       vl_parametres[vl_indice].data=ta_num_evt.cle
       vl_parametres[vl_indice].type=SYB#INT4_
       vl_parametres[vl_indice].output=FALSE
       vl_indice=vl_indice+1

 	vl_parametres[vl_indice].data=DB_CTRL_GET_VALUE@(va_fenetre,"BS_nom")
      vl_parametres[vl_indice].type=SYB#CHAR_
       vl_parametres[vl_indice].output=FALSE
       vl_indice=vl_indice+1

	 vl_parametres[vl_indice].data=-1*DB_CTRL_GET_VALUE@(va_fenetre,"BT_ferme")
       vl_parametres[vl_indice].type=SYB#INT4_
       vl_parametres[vl_indice].output=FALSE
       vl_indice=vl_indice+1

	vl_penurie=-1*DB_CTRL_GET_VALUE@(va_fenetre,"BT_penurie")
	vl_parametres[vl_indice].data=vl_penurie
       vl_parametres[vl_indice].type=SYB#INT4_
       vl_parametres[vl_indice].output=FALSE
       vl_indice=vl_indice+1

	IF (vl_penurie=1)
 		vl_parametres[vl_indice].data=DB_CTRL_GET_VALUE@(va_fenetre,
												"BO_carburant")+1
	ELSE
 		vl_parametres[vl_indice].data=null
      vl_parametres[vl_indice].type=SYB#INT4_
       vl_parametres[vl_indice].output=FALSE
       vl_indice=vl_indice+1


  	IF (SYSTEM_VAR@(vg_surcharge)=TRUE)
	     vl_parametres[vl_indice].data=SYSTEM_VAR@(vg_numero_poste_surcharge)
	ELSE
	     vl_parametres[vl_indice].data=SYSTEM_VAR@(vg_numero_poste)
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE

/*B Site local */
        vl_indice = vl_indice +1
        vl_parametres[vl_indice].type = SYB#CHAR_
        vl_parametres[vl_indice].data = SYSTEM_VAR@(vg_nom_site)
        vl_parametres[vl_indice].output = FALSE

	IF COM05_SQL_Procedure (XZAE58_Ecrire_Fiche_Sousconce,
			   vl_parametres, vl_resultats, C_MODULE) <> COM_OK
	{
	   INFO_MESSAGE@("Impossible de sauver le tampon sous concesionnaire en base")
		RETURN (COM_NOK)
	}
	ELSE IF (vl_resultats.status <> COM_OK) AND 
			(vl_resultats.status <> XZAEC_FMC_PAS_ENR)
	   INFO_MESSAGE@("Impossible de sauver le tampon sous concesionnaire en base")

   RETURN (vl_resultats.status)
ENDMACRO



/*X*/
/* -----------------------------------------------------------------------
* SERVICE RENDU :
* charge de la base les informations specifiques du type sous concession
*
-----------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_sscnc_charge (va_fenetre,FORMAT COM_Identifiant_FMC ta_num_evt,
						va_horodate)

/*
* ARGUMENTS EN ENTREE :
* ta_num_evt            : numero et cle d'evenement
* va_fenetre            : id de la boite de dialogue fiche main courante
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*   MTMT
*
* FONCTION
--------------------------------------------------------------------- */
VAR FORMAT SQL_Procedure_Params@        vl_parametres
VAR FORMAT SQL_Procedure_Result@        vl_resultats
VAR vl_indice
VAR FORMAT TMC_sousconce         vl_tampon
VAR vl_fenetre
VAR tl_retour

/*A Traitements en cas d'erreur durant l'initialisation :
*   informer l'operateur, tracer l'erreur et abandonner
* ------------------------------------------------------*/
ON ERROR
{
    ERROR_BOX@
    COM01_Trace (COM_WARNING, COM03_Message_Erreur (C_MODULE))
    RETURN
}

        vl_indice=0
	vl_fenetre=va_fenetre

	vl_parametres[vl_indice].data=ta_num_evt.numero
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=false
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=ta_num_evt.cle
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=false
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#DATETIME_
	vl_parametres[vl_indice].data=va_horodate
	vl_parametres[vl_indice].output=false
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#CHAR_
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

   	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

     IF COM05_SQL_Procedure (XZAE50_Lire_Fiche_Sous_Concess,
				  vl_parametres, vl_resultats, C_MODULE) <> COM_OK
     {
	  INFO_MESSAGE@("Erreur dans la lecture du tampon sous concession en base")
	  tl_retour[0]=va_fenetre
	       tl_retour[1]=null
	  RETURN (tl_retour)
	}

	vl_tampon=vl_resultats.return_parameters

	/*A mise a jour des controles dans la boite de dialogue*/
	DB_CTRL_VALUE@(vl_fenetre,"BS_nom",vl_tampon.nom)
	DB_CTRL_VALUE@(vl_fenetre,"BT_ferme",-1*vl_tampon.ferme)
	DB_CTRL_VALUE@(vl_fenetre,"BT_penurie",-1*vl_tampon.penurie)
	DB_CTRL_VALUE@(vl_fenetre,"BO_carburant",vl_tampon.carburant-1)
				
	/*B si le bouton est enfonce*/
	IF (vl_tampon.penurie=1)
		/*B degriser la boite de saisie du carburant*/
		DB_CTRL_GRAYED@(vl_fenetre,"BO_carburant",FALSE)
	ELSE
	{
		/*B la griser*/
		DB_CTRL_GRAYED@(vl_fenetre,"BO_carburant",TRUE)

		/*B la forcer a null*/
		DB_CTRL_VALUE@(vl_fenetre,"BO_carburant",NULL)
		vl_tampon.carburant=" "
	}

	tl_retour[0]=vl_fenetre
	tl_retour[1]=vl_tampon

   RETURN (tl_retour)
ENDMACRO
	




/*X*/
/* -----------------------------------------------------------------------
* SERVICE RENDU :
* lecture des types de carburant
*
-----------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

FUNCTION ITMA_TMC_lire_carburants ()

/*
* ARGUMENTS EN ENTREE :
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*   MTMT
*
* FONCTION
--------------------------------------------------------------------- */
VAR FORMAT SQL_Procedure_Params@        vl_parametres
VAR FORMAT SQL_Procedure_Result@        vl_resultats
VAR tl_carburants

/*A Traitements en cas d'erreur durant l'initialisation :
*   informer l'operateur, tracer l'erreur et abandonner
* ------------------------------------------------------*/
ON ERROR
{
    ERROR_BOX@
    COM01_Trace (COM_WARNING, COM03_Message_Erreur (C_MODULE))
    RETURN
}

        IF COM05_SQL_Procedure (XZAO322_Lire_Carburants,
				  NULL, vl_resultats, C_MODULE) <> COM_OK
        {
	  INFO_MESSAGE@("Erreur dans la lecture des carburants en base ")
	  RETURN (COM_NOK)
	}

	tl_carburants=vl_resultats.select_results[0]

   RETURN (tl_carburants)
ENDMACRO




/*X*/
/* ---------------------------------------------------------------------------------
* SERVICE RENDU :
*
*  Affiche les donnees specifiques d'une fiche Sous-concessionnaire
*
------------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_sscnc_affiche (va_fenetre, FORMAT TMC_sousconce va_sousconce)

/*
* ARGUMENTS EN ENTREE :
*  va_fenetre         : ID de la fenetre FMC
*  va_sousconce       : Données de la fiche Sous-concessionnaire
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*   ITMA_TMC sur ouverture fiche Sous-concessionnaire
*
* FONCTION
*  Value les champs de saisie spécifiques aux FMC de classe Sous-concessionnaire
*
--------------------------------------------------------------------------------- */

ENDMACRO




/*X*/
/* ---------------------------------------------------------------------------------
* SERVICE RENDU :
*
*  Lit les donnees specifiques d'une fiche Sous-concessionnaire saisies dans la fenetre
*
------------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_sscnc_saisie (va_fenetre, FORMAT TMC_sousconce va_sousconce)

/*
* ARGUMENTS EN ENTREE :
*  va_fenetre         : ID de la fenetre FMC
*
*
* ARGUMENTS EN SORTIE :
*  va_sousconce       : Donnees de la fiche Sous-concessionnaire
*
*
* CODE RETOUR         : XDC_NOK si une valeur saisie est incorrecte, XDC_OK sinon.
*
* CONDITION D'UTILISATION
*   ITMA_TMC sur validation fiche Sous-concessionnaire
*
* FONCTION
*  Remplit la fiche avec les donnees des champs de saisie specifiques.
*
--------------------------------------------------------------------------------- */

	RETURN (XDC_OK)
ENDMACRO




/*X*/
/* ---------------------------------------------------------------------------------
* SERVICE RENDU :
*
*  Effectue les controles de validite des donnees specifiques d'une fiche Sous-concessionnaire
*
------------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_sscnc_controle (FORMAT TMC_fmc va_fiche, FORMAT TMC_sousconce va_sousconce)

/*
* ARGUMENTS EN ENTREE :
*  va_fiche           : Donnees generiques de la Fmc ;
*  va_sousconce       : Donnees specifiques a la Fmc Sous-concessionnaire
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : XDC_NOK si les donnees sont incorrectes, XDC_OK sinon.
*
* CONDITION D'UTILISATION
*   ITMA_TMC sur validation fiche Sous-concessionnaire
*
* FONCTION
*
--------------------------------------------------------------------------------- */

	RETURN (XDC_OK)
ENDMACRO
