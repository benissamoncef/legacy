/*E*/
/* Fichier : $Id: pc_export_fichiers.am,v 1.3 2013/01/10 16:56:28 gesconf Exp $      Release : $Revision: 1.3 $        Date : $Date: 2013/01/10 16:56:28 $
-------------------------------------------------------------------------------
* STERIA *  PROJET MIGRAZUR
-------------------------------------------------------------------------------
* SOUS-SYSTEME  GESIHM
-------------------------------------------------------------------------------
* MODULE UTIL * FICHIER pc_export_fichiers.am
-------------------------------------------------------------------------------
* DESCRIPTION DU MODULE :
* Lancement d'une copir de fichiers vers un poste destinataire
*
*
-------------------------------------------------------------------------------
* HISTORIQUE :
*
* CLUCHAGUE 12/08/98	: creation  1.11
-------------------------------------------------------------------------------
*/

INCLUDE	"dbase_.am"
INCLUDE	"app_ids_.am"				'pour récupérer le nom des appli Applix
INCLUDE	"windows_.am"				'pour récupérer le nom des appli Applix


DEFINE	C_MODULE	"MTOU"			' Nom du module
DEFINE	CL_TRI_ALPHA	4			' tri par ordre alphabetique

DEFINE	PATH_OUTILS	"/produits/migrazur/appliSD/fichiers/mbo"

DEFINE	VUE_COMMUN	"VUES_Commun.elo"
DEFINE	VUE_APPLIX	"CVUEM_ApplixData.elo"

/*X*/
/* ----------------------------------------------------------------------------
* SERVICE RENDU :
* Creation d'une boite de dialogue pour permettre l'exportation de fichiers
-------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO pc_export_fichiers ()

/*
* ARGUMENTS EN ENTREE : Aucun
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*   Appel depuis le menu principal
*
* FONCTION
*
---------------------------------------------------------------------------- */

	VAR 	vl_exit_value
	VAR	vl_la_fenetre_est_active
	VAR 	vl_fenetre			 

     VAR vl_liste_machines
	VAR vl_indice
	VAR vl_commande
	VAr vl_machine
	VAR vl_liste_fichiers
	VAR tl_fichiers
	VAR vl_nommach


/*A
 * Traitements en cas d'erreur durant l'initialisation :
 * informer l'operateur, tracer l'erreur et abandonner
 * -----------------------------------------------------
 */

ON ERROR {
	ERROR_BOX@
	RETURN
}


/*A
 * Charger la fenetre "menu principal"
 * ----------------------------------
 */

vl_fenetre = DB_LOAD@ ("pc_export_fichiers")
DB_XPOS@ (vl_fenetre, 0)
DB_YPOS@ (vl_fenetre, -35)

/*A Recuperer la liste des fichiers disponibles */
vl_liste_fichiers = SORT@(FILE_SYSTEM_FILES@(PATH_OUTILS,"*"),FALSE)

/*A Initialiser la liste des fichiers */
DB_CTRL_STRINGS@ (vl_fenetre, "BL_fichiers", vl_liste_fichiers)
vl_la_fenetre_est_active = TRUE

DB_CTRL_GET_VALUE@ (vl_fenetre, "BL_fichiers", -1)

/*A Initialiser la liste des machines */
vl_liste_machines= "POCI1", "POCI2", "POAT", "POCC", "POGT", "PODEX", "PODFA", "POCDCA1", "POCDCA2", "POCDCA3", "POCDVE", "POCDPR", "POCDVD", "POCA1", "POCA2", "POCA3", "POCA4", "POVE1", "POVE2", "POPR1", "POPR2", "POVD1", "POVD2", "PODMA1", "PODMA2", "PODMA3", "PODMCA", "PODMVE", "PODMVD"

DB_CTRL_STRINGS@ (vl_fenetre, "BO_destinataire", vl_liste_machines)


/*A boucle infinie de traitement des evenements*/
WHILE vl_la_fenetre_est_active
	/*A
	* afficher la fenetre*/
	DB_DISPLAY@(vl_fenetre)

	/*A
	* attente d'un evenement*/
	vl_exit_value=DB_EXIT_CTRL@(vl_fenetre)

	/*A
	* suivant l'evenement */
	CASE OF vl_exit_value

	/*B si demande d'execution */
	CASE "BP_executer"
	MACRO_WINS_BUSY@()
	vl_nommach = DB_CTRL_GET_VALUE@(vl_fenetre, "BO_destinataire")
	vl_machine=vl_liste_machines[vl_nommach]
	tl_fichiers = DB_CTRL_GET_VALUE@(vl_fenetre, "BL_fichiers")

	IF ((IS_ARRAY@(tl_fichiers)=FALSE) OR(ARRAY_SIZE@(tl_fichiers)=0))
		INFO_MESSAGE@("Choisir d'abord le ou les fichiers a copier")
	ELSE
	{	
		/*parcourt la liste  des fichiers*/
		for vl_indice=0 to (ARRAY_SIZE@(tl_fichiers)-1)
			/*prepare le rcp*/
			vl_commande="rcp "++PATH_OUTILs++"/"++
							vl_liste_fichiers[tl_fichiers[vl_indice]]++" "++
							vl_machine++":"++
							PATH_OUTILs
			SHELL_COMMAND@(vl_commande)
			next vl_indice
		RETURN
	}
	CASE "BP_quitter"
		RETURN
	ENDCASE	

WEND
ENDMACRO




