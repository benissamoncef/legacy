/*E*/
/* Fichier : $Id: ITMA_TMC_del.am,v 1.17 2020/11/03 17:43:20 pc2dpdy Exp $        Release : $Revision: 1.17 $        Date : $Date: 2020/11/03 17:43:20 $
-----------------------------------------------------------------------
*  GTIE  *  PROJET MIGRAZUR
-----------------------------------------------------------------------
*  SOUS-SYSTEM GESIHM
-----------------------------------------------------------------------
*  MODULE MTMC  *  Fichier ITMA_TMC_del.am
-----------------------------------------------------------------------
*  DESCRIPTION DU MODULE :
*
*   Gere les donnees specifiques aux types de classe delestage
*   et les champs correspondants dans la fenetre de saisie FMC
*
-----------------------------------------------------------------------
*  HISTORIQUE :
*
*  Guilhou	24 Oct 1994	1.1	: Création
*  Torregrossa	09 Oct 1995	1.2	: Modif test code retour sql dans sauver
*  Torregrossa  23 Sep 1996 : Modif cr de sauvegarde V1.3 (CONF 4)
*  Torregrossa  21 Oct 1996 : Suppression de la declaration de format TMC_delestage (IHM7) V1.12
*  Niepceron	11 Jan 1999 : Modif pour intergestionnaire (1723) V1.13
*  Lizot        14 Avr 2004 : Gestion du droit de propriete ESCOTA/DDE83 (SAGA) V1.14
*  Lecrivain	26 Mar 2007 : Afficher/effacer champs pour retypage (dem/637) 1.15
* LCL   	22/04/20        : MOVIS Ajout site local pilotage DEM-SAE93
-----------------------------------------------------------------------
*/

/*A Déclaration des fichiers à inclure */
INCLUDE	"dbase_.am"
INCLUDE	"../../XDMICG/inc/xdc_ax.h"
INCLUDE	"../../XDMICG/inc/xzic_ax.h"
INCLUDE	"../../XDMICG/inc/xzaec_ax.h"
INCLUDE	"../inc/ITMA_COM.h"
INCLUDE	"../inc/ITMA_TMC.h"
INCLUDE	"../inc/ITMA_TDO.h"
INCLUDE	"../inc/ITMA_TAR.h"
INCLUDE	"../inc/xzae63sp.h"
INCLUDE	"../inc/xzae42sp.h"


/*A Définition des constantes */

DEFINE	C_MODULE		"MTMC"		' Nom du module

DEFINE XZAEC_PLN_SCR_INC			3


/*A Définition des variables globales */

/*X*/
/* ---------------------------------------------------------------------------------
* SERVICE RENDU :
*
*  Affiche / masque dans la fenetre FMC les champs specifiques aux types
*   de classe Délestage
*
------------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_del (va_fenetre, va_type_fmc, va_visible)

/*
* ARGUMENTS EN ENTREE :
*  va_fenetre         : id de la boite de dialogue ou afficher les champs
*  va_type_fmc        : type de la fmc
*  va_visible         : indicateur de visibilite demandee
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*   MTMT
*
* FONCTION
--------------------------------------------------------------------------------- */
VAR tl_controles
VAR vl_indice
VAR vl_fenetre
VAR vl_droits


/*A Traitements en cas d'erreur :
 *   informer l'operateur, tracer l'erreur et abandonner
 * -----------------------------------------------------
 */
ON ERROR 
{
	ERROR_BOX@
	COM01_Trace (COM_WARNING, COM03_Message_Erreur (C_MODULE))
	RETURN
}

vl_fenetre = va_fenetre


/*A rendre visibles ou masquer les champs associes au type fmc */

/* Modif SAGA : la visibilite depend du droit de propriete */
vl_droits = SYSTEM_VAR@ (vg_datex_propriete)

/* Champs non visibles sans droit de propriete */
tl_controles = {
	"LI_nomplan_del",
	"LI_val_nomplan_del",
	"BS_num_plan",
	"LI_hierarchie",
	"BS_hierarchie"
}
FOR vl_indice = 0 TO ARRAY_SIZE@ (tl_controles) - 1
	DB_CTRL_DISPLAY@ (vl_fenetre, tl_controles[vl_indice],
	                     va_visible AND (vl_droits = XDC_VRAI))
NEXT vl_indice

	RETURN (vl_fenetre)
ENDMACRO








/*X*/
/* -----------------------------------------------------------------------
* SERVICE RENDU :
* sauve en base les informations specifiques du type delestage
*
-----------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_del_sauve (FORMAT COM_Identifiant_FMC ta_num_evt, FORMAT TMC_delestage va_tampon,va_arg1,va_arg2,va_fenetre)

/*
* ARGUMENTS EN ENTREE :
* ta_num_evt		: numero et cle d'evenement
* va_tampon		: valeurs des controles
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*   MTMT
*
* FONCTION
--------------------------------------------------------------------- */
VAR FORMAT SQL_Procedure_Params@	vl_parametres	
VAR FORMAT SQL_Procedure_Result@	vl_resultats
VAR vl_indice
VAR tl_retour
VAR vl_num

/*A Traitements en cas d'erreur durant l'initialisation :
*   informer l'operateur, tracer l'erreur et abandonner
* ------------------------------------------------------*/
ON ERROR 
{
    ERROR_BOX@
    COM01_Trace (COM_WARNING, COM03_Message_Erreur (C_MODULE))
    RETURN
}
	vl_indice=0
	/*A preparation des parametres de la procedure stockee*/
	vl_parametres[vl_indice].data=ta_num_evt.numero
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=ta_num_evt.cle
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_num=DB_CTRL_GET_VALUE@(va_fenetre,"BS_num_plan")
	IF (vl_num=null)
	{
		INFO_MESSAGE@("Un numéro de plan doit d'abord être saisi!")
		RETURN (COM_NOK)
	}

	vl_parametres[vl_indice].data=vl_num
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=DB_CTRL_GET_VALUE@(va_fenetre,"BS_hierarchie")
	IF (vl_parametres[vl_indice].data=null)
	{
		INFO_MESSAGE@("Le champ hiérarchie est obligatoire")
		RETURN (COM_NOK)
	}
	vl_parametres[vl_indice].type=SYB#CHAR_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	IF (SYSTEM_VAR@(vg_surcharge)=TRUE)
		vl_parametres[vl_indice].data=SYSTEM_VAR@(vg_numero_poste_surcharge)
	ELSE
		vl_parametres[vl_indice].data=SYSTEM_VAR@(vg_numero_poste)
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE

/*B Site local */
        vl_indice = vl_indice +1
        vl_parametres[vl_indice].type = SYB#CHAR_
        vl_parametres[vl_indice].data = SYSTEM_VAR@(vg_nom_site)
        vl_parametres[vl_indice].output = FALSE

	IF COM05_SQL_Procedure (XZAE63_Ecrire_Fiche_Delestage,
			   vl_parametres, vl_resultats, C_MODULE) <> COM_OK
	{
		INFO_MESSAGE@("Impossible de sauver le tampon delestage en base")
		RETURN (COM_NOK)
	}
	ELSE IF (vl_resultats.status=XZAEC_PLN_SCR_INC)
	{
		INFO_MESSAGE@("Aucun plan de secours ne correspond à ce numéro")
		RETURN (COM_NOK)
	}
	ELSE IF (vl_resultats.status = XZAEC_FMC_PAS_ENR)
		RETURN (vl_resultats.status)
	ELSE IF (vl_resultats.status<>XDC_OK)
	{
		INFO_MESSAGE@("Impossible de sauver le tampon delestage en base")
		RETURN (vl_resultats.status)
	}

	RETURN (vl_resultats.status)
ENDMACRO



/*X*/
/* -----------------------------------------------------------------------
* SERVICE RENDU :
* charge de la base les informations specifiques du type delestage
*
-----------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_del_charge (va_fenetre,FORMAT COM_Identifiant_FMC ta_num_evt,
						va_horodate)

/*
* ARGUMENTS EN ENTREE :
* ta_num_evt            : numero et cle d'evenement
* va_fenetre            : id de la boite de dialogue fiche main courante
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*   MTMT
*
* FONCTION
--------------------------------------------------------------------- */
VAR FORMAT SQL_Procedure_Params@        vl_parametres
VAR FORMAT SQL_Procedure_Result@        vl_resultats
VAR vl_indice
VAR FORMAT TMC_delestage         vl_tampon
VAR vl_fenetre
VAR tl_retour

/*A Traitements en cas d'erreur durant l'initialisation :
*   informer l'operateur, tracer l'erreur et abandonner
* ------------------------------------------------------*/
ON ERROR
{
    ERROR_BOX@
    COM01_Trace (COM_WARNING, COM03_Message_Erreur (C_MODULE))
    RETURN
}

        vl_indice=0
	vl_fenetre=va_fenetre

	vl_parametres[vl_indice].data=ta_num_evt.numero
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=false
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=ta_num_evt.cle
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=false
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#DATETIME_
	vl_parametres[vl_indice].data=va_horodate
	vl_parametres[vl_indice].output=false
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#CHAR_
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#CHAR_
	vl_parametres[vl_indice].output=true

        IF COM05_SQL_Procedure (XZAE42_Lire_Fiche_Delestage,
				  vl_parametres, vl_resultats, C_MODULE) <> COM_OK
        {
	  INFO_MESSAGE@("Erreur dans la lecture du tampon delestage en base")
	  tl_retour[0]=va_fenetre
	       tl_retour[1]=null
	  RETURN (tl_retour)
	}
	vl_tampon=vl_resultats.return_parameters

	/*! on ne garde que les 25 premiers caracteres de la hierarchie*/
	vl_tampon.hierarchie=TRIM@(SUBSTRING@(vl_tampon.hierarchie,1,25))

	/*A mise a jour des controles dans la boite de dialogue*/
	DB_CTRL_VALUE@(vl_fenetre,"BS_num_plan",vl_tampon.numplan)
	DB_CTRL_VALUE@(vl_fenetre,"BS_hierarchie",vl_tampon.hierarchie)
	DB_CTRL_TITLE@(vl_fenetre,"LI_val_nomplan_del",vl_tampon.nom_plan)
					
	tl_retour[0]=vl_fenetre	
	tl_retour[1]=vl_tampon
	RETURN (tl_retour)
ENDMACRO




/*X*/
/* ---------------------------------------------------------------------------------
* SERVICE RENDU :
*
*  Affiche les donnees specifiques d'une fiche Delestage
*
------------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_del_affiche (va_fenetre, FORMAT TMC_delestage va_delestage)

/*
* ARGUMENTS EN ENTREE :
*  va_fenetre         : ID de la fenetre FMC
*  va_delestage       : Données de la fiche Delestage
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*   ITMA_TMC sur ouverture fiche Delestage
*
* FONCTION
*  Value les champs de saisie spécifiques aux FMC de classe Delestage
*
--------------------------------------------------------------------------------- */

ENDMACRO




/*X*/
/* ---------------------------------------------------------------------------------
* SERVICE RENDU :
*
*  Lit les donnees specifiques d'une fiche Delestage saisies dans la fenetre
*
------------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_del_saisie (va_fenetre, FORMAT TMC_delestage va_delestage)

/*
* ARGUMENTS EN ENTREE :
*  va_fenetre         : ID de la fenetre FMC
*
*
* ARGUMENTS EN SORTIE :
*  va_delestage       : Donnees de la fiche Delestage
*
*
* CODE RETOUR         : XDC_NOK si une valeur saisie est incorrecte, XDC_OK sinon.
*
* CONDITION D'UTILISATION
*   ITMA_TMC sur validation fiche Delestage
*
* FONCTION
*  Remplit la fiche avec les donnees des champs de saisie specifiques.
*
--------------------------------------------------------------------------------- */

	RETURN (XDC_OK)
ENDMACRO




/*X*/
/* ---------------------------------------------------------------------------------
* SERVICE RENDU :
*
*  Effectue les controles de validite des donnees specifiques d'une fiche Delestage
*
------------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_del_controle (FORMAT TMC_fmc va_fiche, FORMAT TMC_delestage va_delestage)

/*
* ARGUMENTS EN ENTREE :
*  va_fiche           : Donnees generiques de la Fmc ;
*  va_delestage       : Donnees specifiques a la Fmc Delestage
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : XDC_NOK si les donnees sont incorrectes, XDC_OK sinon.
*
* CONDITION D'UTILISATION
*   ITMA_TMC sur validation fiche Delestage
*
* FONCTION
*
--------------------------------------------------------------------------------- */

	RETURN (XDC_OK)
ENDMACRO
