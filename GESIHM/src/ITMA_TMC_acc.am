/*E*/
/* Fichier : $Id: ITMA_TMC_acc.am,v 1.22 2020/11/03 17:40:49 pc2dpdy Exp $        $Revision: 1.22 $        $Date: 2020/11/03 17:40:49 $
------------------------------------------------------------------------------------
*  GTIE  *  PROJET MIGRAZUR
------------------------------------------------------------------------------------
*  SOUS-SYSTEM GESIHM
------------------------------------------------------------------------------------
*  MODULE MTMC  *  Fichier ITMA_TMC_acc.am
------------------------------------------------------------------------------------
*  DESCRIPTION DU MODULE :
*
*   Gere les donnees specifiques au type accident
*   et les champs correspondants dans la fenetre de saisie FMC
*
------------------------------------------------------------------------------------
*  HISTORIQUE :
*
* Guilhou	24 Oct 1994 1.1 : Création
* Guilhou	23 Sep 1996 1.12 : Modif cr de sauvegarde (ANA 21)
* Guilhou	25 Sep 1996 1.13 : Suppression dégats domaine (FMC 10)
* Niepceron	08 Jan 1998 1.14 : Modif datex dem/1723
* Lizot		14 Avr 2004 1.15 : Gestion du droit de propriete ESCOTA/DDE83 (SAGA)
* Lecrivain	22 Mar 2007 1.16 : Afficher/effacer champs pour retypage (dem/637)
* Lecrivain	19 Nov 2008 1.17 : Format tampon accident pris dans ITMA_TMC.h
* Guilhou 	03 Dec 2008 1.18 : Ajout BP ecoulement + horodate validatoin dans XZAE53 DEM/853 + DEM/852
* JPL		19 Nov 2009 : Gestion schemas d'ecoulement commune aux FMC Vehicule (DEM 919) 1.19
* JPL		04 Nov 2011 : Gestion des champs de conditions d'accident pour EVEREST (DEM 1006)  1.20
* JPL		02/04/19 : Gestion de l'indicateur d'écoulement (DEM 1326)  1.21
* LCL   	22/04/20        : MOVIS Ajout site local pilotage DEM-SAE93
------------------------------------------------------------------------------------
*/

/*A Déclaration des fichiers à inclure */
INCLUDE	"dbase_.am"

INCLUDE	"xdc_ax.h"
INCLUDE	"xzic_ax.h"
INCLUDE	"xzae53sp.h"
INCLUDE	"xzae41sp.h"

INCLUDE	"ITMA_COM.h"
INCLUDE	"ITMA_TDO.h"
INCLUDE	"ITMA_TMC.h"


/*A Définition des constantes */

DEFINE	C_MODULE		"MTMC"		' Nom du module



/*A Définition des variables globales */
VAR	FORMAT TDO_Libelle_Predefini	tm_cond_meteo,		tm_cond_meteo_affiche
VAR	FORMAT TDO_Libelle_Predefini	tm_cond_visib,		tm_cond_visib_affiche
VAR	FORMAT TDO_Libelle_Predefini	tm_cond_etat_chau,	tm_cond_etat_chau_affiche
VAR	FORMAT TDO_Libelle_Predefini	tm_cond_chantier,	tm_cond_chantier_affiche


/*X*/
/* ---------------------------------------------------------------------------------
* SERVICE RENDU :
*
*  Affiche / masque dans la fenetre FMC les champs specifiques au type accident
*
------------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_acc (va_fenetre, va_type_fmc, va_visible)

/*
* ARGUMENTS EN ENTREE :
*  va_fenetre         : id de la boite de dialogue ou afficher les champs
*  va_type_fmc        : type de la fmc
*  va_visible         : indicateur de visibilite demandee
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*   MTMC
*
* FONCTION
*
--------------------------------------------------------------------------------- */

VAR tl_controles
VAR vl_indice
VAR vl_fenetre
VAR vl_droits


/*A Traitements en cas d'erreur :
 *   informer l'operateur, tracer l'erreur et abandonner
 * ------------------------------------------------------
 */
ON ERROR 
{
	ERROR_BOX@
	COM01_Trace (COM_WARNING, COM03_Message_Erreur (C_MODULE))
	RETURN
}

	vl_fenetre = va_fenetre

	IF (va_visible) {
		ITMA_TMC_acc_init (vl_fenetre, va_type_fmc)
	}

	/*A rendre visibles ou masquer les champs associes au type fmc */

	/* Modif SAGA : la visibilite depend du droit de propriete */
	vl_droits = SYSTEM_VAR@ (vg_datex_propriete)

	/* Champs visibles, grises sans droit de propriete */
	tl_controles = {
		/* donnees de l'application */
		"BS_nb_vl",
		"BS_nb_pl",
		"BS_nb_remorques",
		"BS_nb_cars",
		"BS_nb_bg",
		"BS_nb_morts",
		"BT_perso",
		"BT_mat_dangereuse"
	}
	FOR vl_indice = 0 TO ARRAY_SIZE@ (tl_controles) - 1
		DB_CTRL_DISPLAY@ (vl_fenetre, tl_controles[vl_indice], va_visible)
		DB_CTRL_GRAYED@ (vl_fenetre, tl_controles[vl_indice],
		                     va_visible AND (vl_droits = XDC_FAUX))
	NEXT vl_indice


	/* Champs non visibles sans droit de propriete */
	tl_controles = {
		/* donnees de l'application */
		"BS_nb_motos",
		"BS_nb_bl",
		"BT_personnel_escota",
		"BT_vehi_escota",
		"BT_degats",

		"LI_Conditions",
		"BO_Cond_Meteo",
		"BO_Cond_Visibilite",
		"BO_Cond_Etat_Chaus",
		"BO_Cond_Chantier",
		/*"BO_Cond_Obstacle",*/
		/*"BO_Cond_Animal",*/
		"LI_Cond_Meteo",
		"LI_Cond_Visibilite",
		"LI_Cond_Etat_Chaus",
		"LI_Cond_Chantier",
		/*"LI_Cond_Obstacle",*/
		/*"LI_Cond_Animal",*/

		/* autres champs, specifiques IHM */
		"BP_desc_vehicules"
	}
	FOR vl_indice = 0 TO ARRAY_SIZE@ (tl_controles) - 1
		DB_CTRL_DISPLAY@ (vl_fenetre, tl_controles[vl_indice],
		                     va_visible AND (vl_droits = XDC_VRAI))
	NEXT vl_indice


	/* Champs visibles inconditionnellement */
	tl_controles = {
		"LI_vehicules",
		"LI_victimes",
		"BP_ecoulement",
		"BA_Ecoulement"
	}
	FOR vl_indice = 0 TO ARRAY_SIZE@ (tl_controles) - 1
		DB_CTRL_DISPLAY@ (vl_fenetre, tl_controles[vl_indice], va_visible)
	NEXT vl_indice


	/* Aligner les cases a cocher */
	DB_CTRL_XPOS@ (vl_fenetre, "BT_degats", DB_CTRL_GET_XPOS@ (vl_fenetre, "BT_mat_dangereuse"))

	RETURN (vl_fenetre)
ENDMACRO





/*X*/
/* ---------------------------------------------------------------------------------
* SERVICE RENDU :
*
*  Initialiser certaines données et champs specifiques des FMC Accident
*
------------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_acc_init (va_fenetre)

VAR	FORMAT TDO_Libelle_Predefini	tl_cond_meteo_valides
VAR	FORMAT TDO_Libelle_Predefini	tl_cond_visib_valides
VAR	FORMAT TDO_Libelle_Predefini	tl_cond_etat_chau_valides
VAR	FORMAT TDO_Libelle_Predefini	tl_cond_chantier_valides
VAR	vl_marque
VAR	tl_conditions

tm_cond_meteo = SYSTEM_VAR@ (vg_cond_meteo)
tm_cond_visib = SYSTEM_VAR@ (vg_cond_visibilite)
tm_cond_etat_chau = SYSTEM_VAR@ (vg_cond_etat_chau)
tm_cond_chantier = SYSTEM_VAR@ (vg_cond_chantier)


/*B Initialisations a effectuer une seule fois dans l'application */
IF IS_NULL@ (tm_cond_meteo)
{
	/*B Lire les valeurs de tous les types de conditions d'accident en base de donnees */
	COM37_Lit_Libelles_Predefinis (XDC_TYPE_COND_METEO,
	                                  tm_cond_meteo, tl_cond_meteo_valides)
	SET_SYSTEM_VAR@ (vg_cond_meteo, tm_cond_meteo)

	COM37_Lit_Libelles_Predefinis (XDC_TYPE_COND_VISIB,
	                                  tm_cond_visib, tl_cond_visib_valides)
	SET_SYSTEM_VAR@ (vg_cond_visibilite, tm_cond_visib)

	COM37_Lit_Libelles_Predefinis (XDC_TYPE_COND_ETAT_CHAU,
	                                  tm_cond_etat_chau, tl_cond_etat_chau_valides)
	SET_SYSTEM_VAR@ (vg_cond_etat_chau, tm_cond_etat_chau)

	COM37_Lit_Libelles_Predefinis (XDC_TYPE_COND_CHANTIER,
	                                  tm_cond_chantier, tl_cond_visib_valides)
	SET_SYSTEM_VAR@ (vg_cond_chantier, tm_cond_chantier)
}


/*B Initialisations a effectuer a chaque ouverture de la fenetre FMC au moins */
vl_marque = DB_CTRL_GET_CLIENT_DATA@ (va_fenetre, "BO_Cond_Meteo")
IF IS_NULL@ (vl_marque) {
	DB_CTRL_CLIENT_DATA@ (va_fenetre, "BO_Cond_Meteo", "Initialise")

	/* A PRIORI n'afficher que les conditions valides, convenant pour la saisie */
	tm_cond_meteo_affiche = COM44_ValeursEnColonne(tm_cond_meteo, TDO_VALID_LIBELLE, { 1 }, TRUE)
	tl_conditions = ARRAY_COLUMN@ (tm_cond_meteo_affiche, TDO_TEXTE_LIBELLE)
	DB_CTRL_STRINGS@ (va_fenetre, "BO_Cond_Meteo", tl_conditions)
	DB_CTRL_VALUE@ (va_fenetre, "BO_Cond_Meteo", 0)

	tm_cond_visib_affiche = COM44_ValeursEnColonne(tm_cond_visib, TDO_VALID_LIBELLE, { 1 }, TRUE)
	tl_conditions = ARRAY_COLUMN@ (tm_cond_visib_affiche, TDO_TEXTE_LIBELLE)
	DB_CTRL_STRINGS@ (va_fenetre, "BO_Cond_Visibilite", tl_conditions)
	DB_CTRL_VALUE@ (va_fenetre, "BO_Cond_Visibilite", 0)

	tm_cond_etat_chau_affiche = COM44_ValeursEnColonne(tm_cond_etat_chau, TDO_VALID_LIBELLE, { 1 }, TRUE)
	tl_conditions = ARRAY_COLUMN@ (tm_cond_etat_chau_affiche, TDO_TEXTE_LIBELLE)
	DB_CTRL_STRINGS@ (va_fenetre, "BO_Cond_Etat_Chaus", tl_conditions)
	DB_CTRL_VALUE@ (va_fenetre, "BO_Cond_Etat_Chaus", 0)

	tm_cond_chantier_affiche = COM44_ValeursEnColonne(tm_cond_chantier, TDO_VALID_LIBELLE, { 1 }, TRUE)
	tl_conditions = ARRAY_COLUMN@ (tm_cond_chantier_affiche, TDO_TEXTE_LIBELLE)
	DB_CTRL_STRINGS@ (va_fenetre, "BO_Cond_Chantier", tl_conditions)
	DB_CTRL_VALUE@ (va_fenetre, "BO_Cond_Chantier", 0)
}

ENDMACRO




/*X*/
/* -----------------------------------------------------------------------
* SERVICE RENDU :
* sauve en base les informations specifiques du type accident
*
-----------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_acc_sauve (FORMAT COM_Identifiant_FMC ta_num_evt, FORMAT TMC_accident va_tampon,va1,va2,va_fenetre)

/*
* ARGUMENTS EN ENTREE :
* ta_num_evt		: numero et cle d'evenement
* va_tampon		: valeurs des controles
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*   MTMT
*
* FONCTION
--------------------------------------------------------------------------------- */

VAR FORMAT SQL_Procedure_Params@	vl_parametres	
VAR FORMAT SQL_Procedure_Result@	vl_resultats
VAR vl_indice, i

/*A Traitements en cas d'erreur durant l'initialisation :
 *   informer l'operateur, tracer l'erreur et abandonner
 * ------------------------------------------------------
 */
ON ERROR 
{
	ERROR_BOX@
	COM01_Trace (COM_WARNING, COM03_Message_Erreur (C_MODULE))
	RETURN
}

	vl_indice=0
	/*A preparation des parametres de la procedure stockee*/
	vl_parametres[vl_indice].data=ta_num_evt.numero
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=ta_num_evt.cle
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=va_tampon.vl
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=va_tampon.pl
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=va_tampon.remorques
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=va_tampon.cars
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=va_tampon.motos
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=va_tampon.bl
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=va_tampon.bg
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=va_tampon.morts
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=va_tampon.vehescota
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=va_tampon.matdang
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=va_tampon.homescota
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=va_tampon.perso
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=1			/* ce parametre ne sert plus : */
	vl_parametres[vl_indice].type=SYB#INT4_		/* conserve pour compatibilite */
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	IF (SYSTEM_VAR@(vg_surcharge)=TRUE) {
		vl_parametres[vl_indice].data=SYSTEM_VAR@(vg_numero_poste_surcharge)
	} ELSE {
		vl_parametres[vl_indice].data=SYSTEM_VAR@(vg_numero_poste)
	}
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

        vl_parametres[vl_indice].data=va2
        vl_parametres[vl_indice].type=SYB#DATETIME_
        vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=va_tampon.cond_meteo
	vl_parametres[vl_indice].type=SYB#INT2_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=va_tampon.cond_visibilite
	vl_parametres[vl_indice].type=SYB#INT2_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=va_tampon.cond_etat_chaus
	vl_parametres[vl_indice].type=SYB#INT2_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=va_tampon.cond_chantier
	vl_parametres[vl_indice].type=SYB#INT2_
	vl_parametres[vl_indice].output=FALSE
	vl_indice=vl_indice+1

/*B Site local */
        vl_parametres[vl_indice].type = SYB#CHAR_
        vl_parametres[vl_indice].data = SYSTEM_VAR@(vg_nom_site)
        vl_parametres[vl_indice].output = FALSE
        vl_indice = vl_indice +1

	IF COM05_SQL_Procedure (XZAE53_Ecrire_Fiche_Accident,
			   vl_parametres, vl_resultats, C_MODULE) <> COM_OK
	{
		INFO_MESSAGE@("Impossible de sauver le tampon accident en base")
		RETURN (COM_NOK)
	}

	RETURN (vl_resultats.status)
ENDMACRO




/*X*/
/* -----------------------------------------------------------------------
* SERVICE RENDU :
* charge de la base les informations specifiques du type accident
*
-----------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_acc_charge (va_fenetre,FORMAT COM_Identifiant_FMC ta_num_evt,va_horodate)

/*
* ARGUMENTS EN ENTREE :
* ta_num_evt		: numero et cle d'evenement
* va_fenetre		: id de la boite de dialogue fiche main courante
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*   MTMT
*
* FONCTION
--------------------------------------------------------------------- */

VAR FORMAT SQL_Procedure_Params@	vl_parametres	
VAR FORMAT SQL_Procedure_Result@	vl_resultats
VAR FORMAT TMC_accident		vl_tampon
VAR vl_indice
VAR tl_retour

/*A Traitements en cas d'erreur durant l'operation :
*   informer l'operateur, tracer l'erreur et abandonner
* ------------------------------------------------------*/
ON ERROR 
{
	ERROR_BOX@
	COM01_Trace (COM_WARNING, COM03_Message_Erreur (C_MODULE))
	RETURN
}

	vl_indice=0

	vl_parametres[vl_indice].type=SYB#DATETIME_
	vl_parametres[vl_indice].data=va_horodate
	vl_parametres[vl_indice].output=false
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=ta_num_evt.numero
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=false
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].data=ta_num_evt.cle
	vl_parametres[vl_indice].type=SYB#INT4_
	vl_parametres[vl_indice].output=false
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT4_			' nombre_de_vl
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT4_			' nombre_de_pl
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT4_			' nombre_de_remorques
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT4_			' nombre_de_car
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT4_			' nombre_de_moto
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT4_			' blesses_legers
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT4_			' blesses_graves
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT4_			' morts
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT4_			' vehicule_ESCOTA
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT4_			' matieres_dangereuses
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT4_			' personnel_ESCOTA
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT4_			' personnalites
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT4_			' degats domaine (pour compatibilite)
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT2_			' conditions meteo
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT2_			' conditions visibilite
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT2_			' conditions etat chaussee
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	vl_parametres[vl_indice].type=SYB#INT2_			' presence chantier
	vl_parametres[vl_indice].output=true
	vl_indice=vl_indice+1

	IF COM05_SQL_Procedure (XZAE41_Lire_Fiche_Accident,
			   vl_parametres, vl_resultats, C_MODULE) <> COM_OK
	{
		INFO_MESSAGE@("Erreur dans la lecture du tampon accident en base")
		tl_retour[0]=va_fenetre
		tl_retour[1]=null
		tl_retour[2]=null
		RETURN (tl_retour)
	}

	/*A memorisation du resultat*/
	vl_tampon=vl_resultats.return_parameters

	/*A Afficher les valeurs des donnees textuelles */
	ITMA_TMC_acc_affiche (va_fenetre, vl_tampon)

	/*A retourne le tampon et les vehicules impliques dans l'accident*/
	tl_retour[0]=va_fenetre
	tl_retour[1]=vl_tampon
	tl_retour[2]=vl_resultats.select_results[0]		

	RETURN (tl_retour)
ENDMACRO




/*X*/
/* ---------------------------------------------------------------------------------
* SERVICE RENDU :
*
*  Fournit la liste des libelles predefinis valides contenant de plus
*  un code particulier, qu'il soit valide ou non, en retournant son rang.
*
------------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

FUNCTION ITMA_TMC_acc_Liste_contenant (FORMAT TDO_Libelle_Predefini ta_liste_complete,
                                          va_code,
                                          FORMAT TDO_Libelle_Predefini ta_libelles)

	VAR	i, j, k

	ta_libelles = { }
	k = -1
	j = 0
	FOR i = 0  TO ARRAY_SIZE@ (ta_liste_complete) - 1
		IF (ta_liste_complete[i].code = va_code) OR
			(ta_liste_complete[i].valide = XDC_VRAI)
		{
			ta_libelles[j] = ta_liste_complete[i]
			j = j + 1
			IF (ta_libelles[i].code = va_code)
				k = j
		}
	NEXT i

	RETURN (k)
ENDFUNCTION


/*X*/
/* ---------------------------------------------------------------------------------
* SERVICE RENDU :
*
*  Affiche les donnees specifiques d'une fiche Accident
*
------------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_acc_affiche (va_fenetre, FORMAT TMC_accident va_accident)

/*
* ARGUMENTS EN ENTREE :
*  va_fenetre         : ID de la fenetre FMC
*  va_accident        : Données de la fiche Accident
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*   ITMA_TMC sur ouverture fiche Accident
*
* FONCTION
*  Value les champs de saisie spécifiques aux FMC de classe Accident
*
--------------------------------------------------------------------------------- */

	VAR	i

	/*A Afficher les valeurs du tampon accident */
	DB_CTRL_VALUE@(va_fenetre,"BS_nb_vl",va_accident.vl)
	DB_CTRL_VALUE@(va_fenetre,"BS_nb_pl",va_accident.pl)
	DB_CTRL_VALUE@(va_fenetre,"BS_nb_remorques",va_accident.remorques)
	DB_CTRL_VALUE@(va_fenetre,"BS_nb_cars",va_accident.cars)
	DB_CTRL_VALUE@(va_fenetre,"BS_nb_motos",va_accident.motos)
	DB_CTRL_VALUE@(va_fenetre,"BS_nb_bl",va_accident.bl)
	DB_CTRL_VALUE@(va_fenetre,"BS_nb_bg",va_accident.bg)
	DB_CTRL_VALUE@(va_fenetre,"BS_nb_morts",va_accident.morts)
	DB_CTRL_VALUE@(va_fenetre,"BT_vehi_escota",-1*va_accident.vehescota)
	DB_CTRL_VALUE@(va_fenetre,"BT_mat_dangereuse",-1*va_accident.matdang)
	DB_CTRL_VALUE@(va_fenetre,"BT_personnel_escota",-1*va_accident.homescota)
	DB_CTRL_VALUE@(va_fenetre,"BT_perso",-1*va_accident.perso)

	/* Afficher les conditions d'accident, en ajoutant si necessaire leur valeur */
	/* a la liste des libelles valides, c'est a dire si elle ne l'est plus */
	i = COM45_IndexEnColonne (tm_cond_meteo_affiche, TDO_CODE_LIBELLE, va_accident.cond_meteo)
	IF (i < 0) {
		i = ITMA_TMC_acc_Liste_contenant (tm_cond_meteo, va_accident.cond_meteo,
		                                     tm_cond_meteo_affiche)
	}
	DB_CTRL_VALUE@ (va_fenetre, "BO_Cond_Meteo", i)

	i = COM45_IndexEnColonne (tm_cond_visib_affiche, TDO_CODE_LIBELLE, va_accident.cond_visibilite)
	IF (i < 0) {
		i = ITMA_TMC_acc_Liste_contenant (tm_cond_visib, va_accident.cond_visibilite,
		                                     tm_cond_visib_affiche)
	}
	DB_CTRL_VALUE@ (va_fenetre, "BO_Cond_Visibilite", i)

	i = COM45_IndexEnColonne (tm_cond_etat_chau_affiche, TDO_CODE_LIBELLE, va_accident.cond_etat_chaus)
	IF (i < 0) {
		i = ITMA_TMC_acc_Liste_contenant (tm_cond_etat_chau, va_accident.cond_etat_chaus,
		                                     tm_cond_etat_chau_affiche)
	}
	DB_CTRL_VALUE@ (va_fenetre, "BO_Cond_Etat_Chaus", i)

	i = COM45_IndexEnColonne (tm_cond_chantier_affiche, TDO_CODE_LIBELLE, va_accident.cond_chantier)
	IF (i < 0) {
		i = ITMA_TMC_acc_Liste_contenant (tm_cond_chantier, va_accident.cond_chantier,
		                                     tm_cond_chantier_affiche)
	}
	DB_CTRL_VALUE@ (va_fenetre, "BO_Cond_Chantier", i)

	RETURN (XDC_OK)

ENDMACRO




/*X*/
/* ---------------------------------------------------------------------------------
* SERVICE RENDU :
*
*  Lit les donnees specifiques d'une fiche Accident saisies dans la fenetre
*
------------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_acc_saisie (va_fenetre, FORMAT TMC_accident va_accident)

/*
* ARGUMENTS EN ENTREE :
*  va_fenetre         : ID de la fenetre FMC
*
*
* ARGUMENTS EN SORTIE :
*  va_accident        : Donnees de la fiche Accident
*
*
* CODE RETOUR         : XDC_NOK si une valeur saisie est incorrecte, XDC_OK sinon.
*
* CONDITION D'UTILISATION
*   ITMA_TMC sur validation fiche Accident
*
* FONCTION
*  Remplit la fiche avec les donnees des champs de saisie specifiques.
*
--------------------------------------------------------------------------------- */

	VAR	i

	va_accident.vl=DB_CTRL_GET_VALUE@(va_fenetre,"BS_nb_vl")
	va_accident.pl=DB_CTRL_GET_VALUE@(va_fenetre,"BS_nb_pl")
	va_accident.remorques=DB_CTRL_GET_VALUE@(va_fenetre,"BS_nb_remorques")
	va_accident.cars=DB_CTRL_GET_VALUE@(va_fenetre,"BS_nb_cars")
	va_accident.motos=DB_CTRL_GET_VALUE@(va_fenetre,"BS_nb_motos")
	va_accident.bl=DB_CTRL_GET_VALUE@(va_fenetre,"BS_nb_bl")
	va_accident.bg=DB_CTRL_GET_VALUE@(va_fenetre,"BS_nb_bg")
	va_accident.morts=DB_CTRL_GET_VALUE@(va_fenetre,"BS_nb_morts")

	va_accident.vehescota=-1*DB_CTRL_GET_VALUE@(va_fenetre,"BT_vehi_escota")
	va_accident.matdang=-1*DB_CTRL_GET_VALUE@(va_fenetre,"BT_mat_dangereuse")
	va_accident.homescota=-1*DB_CTRL_GET_VALUE@(va_fenetre,"BT_personnel_escota")
	va_accident.perso=-1*DB_CTRL_GET_VALUE@(va_fenetre,"BT_perso")

	i = DB_CTRL_GET_VALUE@(va_fenetre, "BO_Cond_Meteo")
	va_accident.cond_meteo=tm_cond_meteo_affiche[i].code

	i = DB_CTRL_GET_VALUE@(va_fenetre, "BO_Cond_Visibilite")
	va_accident.cond_visibilite=tm_cond_visib_affiche[i].code

	i = DB_CTRL_GET_VALUE@(va_fenetre, "BO_Cond_Etat_Chaus")
	va_accident.cond_etat_chaus=tm_cond_etat_chau_affiche[i].code

	i = DB_CTRL_GET_VALUE@(va_fenetre, "BO_Cond_Chantier")
	va_accident.cond_chantier=tm_cond_chantier_affiche[i].code
ENDMACRO




/*X*/
/* ---------------------------------------------------------------------------------
* SERVICE RENDU :
*
*  Effectue les controles de validite des donnees specifiques d'une fiche Accident
*
------------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO ITMA_TMC_acc_controle (FORMAT TMC_fmc va_fiche, FORMAT TMC_accident va_accident)

/*
* ARGUMENTS EN ENTREE :
*  va_fiche           : Donnees generiques de la Fmc ;
*  va_accident        : Donnees specifiques a la Fmc Accident
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : XDC_NOK si les donnees sont incorrectes, XDC_OK sinon.
*
* CONDITION D'UTILISATION
*   ITMA_TMC sur validation fiche Accident
*
* FONCTION
*
--------------------------------------------------------------------------------- */

	RETURN (XDC_OK)
ENDMACRO
