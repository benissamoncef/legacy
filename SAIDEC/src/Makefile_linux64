#
#  FICHIER: $Id: Makefile_linux64,v 1.4 2018/06/29 09:32:53 devgfi Exp $		$Revision: 1.4 $	$Date: 2018/06/29 09:32:53 $
#
#  Ce fichier est dependant des variables d'environnement :
#  $HOME, $PROJECTDIR, $RTHOME, $SYBASE
#
###################################################################
#
# Inhibition de l'echo des commandes
#
.SILENT:
#
# Ajout des suffixes des fichiers concernes
#
#.SUFFIXES: .sc
#
##################################################################
#
# Historique
#
# JPL	09/02/18 : Creation d'apres Makefile_linux V1.4 (DEM 1274)  1.1
# JPL	20/02/18 : Reglage des options de compilation  1.3 - 1.4
# 	GGY		01/12/23 : Ajout drol_pic et drol_pic_util (DEM483)
##################################################################
#
# Nom du sous systeme
#

SSYST = SAIDEC
#PROJHOME  = $(HOME)/migrazur

#
# definitions de variables decrivant les differents chemins d'acces
#

DIRINC = $(CI_PROJECT_DIR)/$(SSYST)/inc
DIRSRC = $(CI_PROJECT_DIR)/$(SSYST)/src
DIRLIB = $(CI_PROJECT_DIR)/$(SSYST)/libx64
DIREXE = $(CI_PROJECT_DIR)/$(SSYST)/binx64

# Paths  communs
# A decommenter une fois livre
#XDMICGINC = $(PROJECTDIR)/XDMICG/inc
#XDMICGLIB = $(PROJECTDIR)/XDMICG/libx64
XDMICGINC = $(CI_PROJECT_DIR)/XDMICG/inc
XDMICGLIB = $(CI_PROJECT_DIR)/XDMICG/libx64

DIRRTWORKS = $(RTHOME)/include

DIRSYBASE = $(SYBASE)/$(SYBASE_OCS)/include


# *******************************************************************

# Definition des flags de compilation et de correcteur syntaxique
#

RTLINKROL = $(RTHOME)/bin/rtlink  -64bit -verbose

# compilateur
#CC = purify cc
#CCROL = cc
CCROL = $(RTHOME)/bin/rtlink  -64bit

CFLAGS = -g	\
	-D_XOPEN_SOURCE=500	\
	-DSYB_LP64	\
	-I$(DIRRTWORKS)	\
	-I$(DIRSYBASE)	\
	-I$(XDMICGINC)	\
	-I$(DIRINC)


# lint
OPTLINT=no

# Definition des flags du lint
LFLAGS = -u	\
	-I$(DIRRTWORKS)	\
	-I$(DIRSYBASE)	\
	-I$(XDMICGINC)	\
	-I$(DIRINC)


# Librairies RtWorks
RT_LIB = -L$(RTHOME)/lib/$(RTARCH)/lib64  -lrtutil -lrtipc


# Librairies SYBASE
SYB_COMN_LIB = -lsybtcl64 -lsybcs64 -lsybcomn64 -lsybintl64 -lsybunic64
SYB_SYS_LIB = -Wl,-Bdynamic -ldl -lnsl -lm

SYBASE_LIB = -L$(SYBASE)/$(SYBASE_OCS)/lib  -lsybct64  $(SYB_COMN_LIB)


# librairies communes applicatives utilisees

LIBROL =	\
	$(XDMICGLIB)/xd.a	\
	$(XDMICGLIB)/xzaoa.a	\
	$(XDMICGLIB)/xzaol.a	\
	$(XDMICGLIB)/xzi.a	\
	$(XDMICGLIB)/xzs.a	\
	$(XDMICGLIB)/xze.a	\
	$(XDMICGLIB)/xza.a	\
	$(XDMICGLIB)/xzaoc.a	\
	$(XDMICGLIB)/xd.a	\
	$(XDMICGLIB)/xzap.a	\
	$(XDMICGLIB)/xzad.a



########### Zone a modifier par le developpeur ################
#
# DEFINITION DES SOURCES D'UNE  TACHE
#
# sources d'un executable
#
# x code du sous-systeme
# yyy nom du module
#

#
# includes
#

INCXDMICG = 	\
	$(XDMICGINC)/xdc.h	\
	$(XDMICGINC)/xdy.h	\
	$(XDMICGINC)/xdg.h	\
	$(XDMICGINC)/xdm.h	\
	$(XDMICGINC)/xzac.h	\
	$(XDMICGINC)/xzae.h	\
	$(XDMICGINC)/xzae20.h	\
	$(XDMICGINC)/xzae21.h	\
	$(XDMICGINC)/xzae22.h	\
	$(XDMICGINC)/xzae23.h	\
	$(XDMICGINC)/xzae24.h	\
	$(XDMICGINC)/xzae26.h	\
	$(XDMICGINC)/xzae27.h	\
	$(XDMICGINC)/xzae29.h	\
	$(XDMICGINC)/xzae30.h	\
	$(XDMICGINC)/xzae31.h	\
	$(XDMICGINC)/xzae32.h	\
	$(XDMICGINC)/xzae68.h	\
	$(XDMICGINC)/xzae69.h	\
	$(XDMICGINC)/xzag.h	\
	$(XDMICGINC)/xzai07.h	\
	$(XDMICGINC)/xzan37.h	\
	$(XDMICGINC)/xzao15.h	\
	$(XDMICGINC)/xzao16.h	\
	$(XDMICGINC)/xzao19.h	\
	$(XDMICGINC)/xzao20.h	\
	$(XDMICGINC)/xzao21.h	\
	$(XDMICGINC)/xzao123.h	\
	$(XDMICGINC)/xzap01.h	\
	$(XDMICGINC)/xzap02.h	\
	$(XDMICGINC)/xzap03.h	\
	$(XDMICGINC)/xzap04.h	\
	$(XDMICGINC)/xzap05.h	\
	$(XDMICGINC)/xzap06.h	\
	$(XDMICGINC)/xzap07.h	\
	$(XDMICGINC)/xzap08.h	\
	$(XDMICGINC)/xzap09.h	\
	$(XDMICGINC)/xzap10.h	\
	$(XDMICGINC)/xzap22.h	\
	$(XDMICGINC)/xzap23.h	\
	$(XDMICGINC)/xzap25.h	\
	$(XDMICGINC)/xzat.h	\
	$(XDMICGINC)/xzia.h	\
	$(XDMICGINC)/xzit.h	\
	$(XDMICGINC)/xzsc.h	\
	$(XDMICGINC)/xzsm.h	\
	$(XDMICGINC)/xzss.h	\
	$(XDMICGINC)/xzst.h


INCROL =	\
	$(DIRINC)/drol_dir.h	\
	$(DIRINC)/drol_tfm.h	\
	$(DIRINC)/drol_fax.h	\
	$(DIRINC)/drol_nav.h	\
	$(DIRINC)/drol_tun.h	\
	$(DIRINC)/drol_ech.h	\
	$(DIRINC)/drol_pmv.h	\
	$(DIRINC)/drol_pmv_util.h	\
	$(DIRINC)/drol_arbre.h	\
	$(DIRINC)/drol_pal.h	\
	$(DIRINC)/drol_baf.h	\
	$(DIRINC)/drol_bad.h	\
	$(DIRINC)/drol_caltdp.h	\
	$(DIRINC)/drol_pmva.h	\
	$(DIRINC)/drol_pmva_util.h	\
	$(DIRINC)/drol_tdp.h	\
	$(DIRINC)/drol_prv.h	\
	$(DIRINC)/drol_prv_util.h	\
	$(DIRINC)/drol_pic.h	\
	$(DIRINC)/drol_pic_util.h	\
	$(DIRINC)/drol_appel.h

#
# Sources
#

SRCROL = $(DIRSRC)/drol_dir.c	\
	$(DIRSRC)/drol_tfm.c	\
	$(DIRSRC)/drol_fax.c	\
	$(DIRSRC)/drol_nav.c	\
	$(DIRSRC)/drol_tun.c	\
	$(DIRSRC)/drol_ech.c	\
	$(DIRSRC)/drol_pmv.c	\
	$(DIRSRC)/drol_pmv_util.c	\
	$(DIRSRC)/drol_arbre.c	\
	$(DIRSRC)/drol_pal.c	\
	$(DIRSRC)/drol_baf.c	\
	$(DIRSRC)/drol_bad.c	\
	$(DIRSRC)/drol_pmva.c	\
	$(DIRSRC)/drol_pmva_util.c	\
	$(DIRSRC)/drol_tdp.c	\
	$(DIRSRC)/drol_prv.c	\
	$(DIRSRC)/drol_prv_util.c	\
	$(DIRSRC)/drol_pic.c	\
	$(DIRSRC)/drol_pic_util.c	\
	$(DIRSRC)/drol_caltdp.c	\
	$(DIRSRC)/drol_appel.c


#
# librairie d'un executable
#

OBJROL = $(DIRLIB)/tdrol.a

#
# DEFINITION DU NOM DES EXECUTABLES
#
# nom des executables
#

EXEROL = $(DIREXE)/tdrol.x

#
# DEFINITION DES REGLES DE GENERATION
#
# Premiere regle il faut tout faire : les communs et les executables

tout : $(EXEROL)
	echo
	@echo LE SOUS-SYSTEME $(SSYST) EST A JOUR.
	echo

tdrol.x : $(EXEROL)
	echo

#
# GENERATION  D'UN EXECUTABLE
#
# Regle de generation d'un executable a partir de ses fichiers sources,
#  de ses objets et des librairies communes.
#
# Phase edition de lien
#

$(EXEROL) : $(SRCROL) $(OBJROL) $(LIBROL)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	$(RTLINKROL)  $(CFLAGS) $(OBJROL) $(LIBROL)  $(RT_LIB)  $(SYBASE_LIB)  -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

#
# Regle liant les sources aux fichiers include communs et au makefile
#

$(SRCROL) : $(INCICG) $(INCROL)
	touch $@

#
# Regle de generation d'une librairie  a partir
# de ses fichiers objet.
#

$(OBJROL) :	\
	$(OBJROL)(drol_dir.o)	\
	$(OBJROL)(drol_tfm.o)	\
	$(OBJROL)(drol_fax.o)	\
	$(OBJROL)(drol_nav.o)	\
	$(OBJROL)(drol_tun.o)	\
	$(OBJROL)(drol_ech.o)	\
	$(OBJROL)(drol_pmv.o)	\
	$(OBJROL)(drol_pmv_util.o)	\
	$(OBJROL)(drol_pal.o)	\
	$(OBJROL)(drol_arbre.o)	\
	$(OBJROL)(drol_baf.o)	\
	$(OBJROL)(drol_bad.o)	\
	$(OBJROL)(drol_pmva_util.o)	\
	$(OBJROL)(drol_caltdp.o)	\
	$(OBJROL)(drol_tdp.o)	\
	$(OBJROL)(drol_prv.o)	\
	$(OBJROL)(drol_prv_util.o)	\
	$(OBJROL)(drol_pic.o)	\
	$(OBJROL)(drol_pic_util.o)	\
	$(OBJROL)(drol_pmva.o)	\
	$(OBJROL)(drol_appel.o)


########### Fin de zone a modifier par le developpeur ################
#
# phase de menage du makefile
#
clean:
	rm -f $(DIRLIB)/*.a
	rm -f $(EXEROL)

#
#
# Redefinition de la regles de construction d'un .o a partir d'un .c
#
#
.c.o :
	echo " "
	if test $(OPTLINT) = yes;\
          then echo "PHASE DE VERIFICATION SYNTAXIQUE : "   $<;\
               $(LINT) $(LFLAGS)  $<;\
          else echo $< "PAS DE VERIFICATION SYNTAXIQUE ";\
        fi;
	echo
	echo "PHASE DE COMPILATION             : "   $<
	echo " "
	echo $(CCROL)  $(CFLAGS) -c $<
	$(CCROL)  $(CFLAGS) -c $<

#
# Redefinition de la regles de construction d'un .a a partir d'un .o
#
.o.a:
	echo "CREATION DE LIBRAIRIE "$@.a
	ar rv $@.a $<
	rm -f $<

#
# Redefinition de la regles de construction d'un .a a partir d'un .c
#
.c.a :
	echo " "
	if test $(OPTLINT) = yes;\
          then echo "PHASE DE VERIFICATION SYNTAXIQUE : "   $*.c;\
               $(LINT) $(LFLAGS)  $*.c;\
          else echo  "PAS DE VERIFICATION SYNTAXIQUE " $*.c;\
        fi;
	echo
	echo "PHASE DE COMPILATION             : "   $*.c
	echo " "
	$(CCROL)  $(CFLAGS) -c $*.c
	echo "MISE A JOUR DE LIBRAIRIE :"$@
	ar r $@ $*.o
	rm -f $*.o
