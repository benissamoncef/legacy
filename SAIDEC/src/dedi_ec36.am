/*E*/
/* Fichier : $Id: dedi_ec36.am,v 1.1 1995/05/24 10:15:17 gesconf Exp $	      Release : $Revision: 1.1 $        Date : $Date: 1995/05/24 10:15:17 $
-------------------------------------------------------------------------------
* STERIA *  PROJET MIGRAZUR
-------------------------------------------------------------------------------
* SOUS-SYSTEME  GESIHM
-------------------------------------------------------------------------------
* MODULE dedi * FICHIER dedi_ec36.am
-------------------------------------------------------------------------------
* DESCRIPTION DU MODULE :
* 
* strategie de designation des sorties
*   
*
-------------------------------------------------------------------------------
* HISTORIQUE :
*
* Guilhou	02 dec 1994	: Creation						V1.1
---------------------------------------------------------------------------- */
include "dedi_init.h"

VAR tm_strategies

/*X*/
/* ----------------------------------------------------------------------------
* SERVICE RENDU :
* permets la saisie d'une strategie de designation des sorties
-------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

MACRO dedi_ec36 ()

/*
* ARGUMENTS EN ENTREE :
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*
* FONCTION
*
---------------------------------------------------------------------------- */
VAR vl_fenetre
VAR vl_evt
VAR vl_choix
VAR tl_pokes
VAR vl_strategie

/* initialisation des parametres de la fenetre */
vl_fenetre = DB_LOAD@("dedi_ec36")

/*A messages que je peux recevoir*/
tl_pokes[0]=dedi_canal_fin
DB_ACCEPT_POKES@(vl_fenetre,tl_pokes)

/*A positionne la fenetre a l'ecran*/
DB_XPOS@(vl_fenetre,300)
DB_YPOS@(vl_fenetre,300)

DB_DISPLAY_ONLY@(vl_fenetre, TRUE)
DB_DISPLAY@(vl_fenetre)

/*A initialisation*/
ec36_init(vl_fenetre)

DB_DISPLAY_ONLY@(vl_fenetre, FALSE)


/*A boucle principale */
WHILE 1
	DB_DISPLAY@(vl_fenetre)	
	vl_evt = DB_EXIT_CTRL@(vl_fenetre)

	/*A suivant l'evenement*/
	CASE  OF vl_evt
		/*A appui sur le bouton valider*/
		CASE "BP_valider"
			/*A recupere la strategie choisie*/
			vl_choix=DB_CTRL_GET_VALUE@(vl_fenetre,"BR_strategie")
			vl_strategie[0]=tm_strategies[vl_choix]
			
			/*A sauvegarde dans le fichier*/
			WRITE_ASCII_FILE@(AX_PATH++IE_FILE_STRATEGIE,vl_strategie)

			RETURN

		/*A appui sur le bouton annuler*/
		CASE "BP_annuler"
			RETURN
	
		/*A reception d'un poke*/
		CASE "poke_"
			/*A suivant le message recu*/
			CASE OF (DB_GET_POKE@(vl_fenetre))
				/*A message de fin*/
				CASE dedi_canal_fin
					RETURN

			ENDCASE
	ENDCASE
WEND

ENDMACRO




/*X*/
/* ----------------------------------------------------------------------------
* SERVICE RENDU :
* macro d'initialisation du module
-------------------------------------------------------------------------------
* SEQUENCE D'APPEL :
*/

FUNCTION ec36_init (va_fenetre)

/*
* ARGUMENTS EN ENTREE :
*
*
* ARGUMENTS EN SORTIE : Aucun
*
*
* CODE RETOUR         : Indefini
*
* CONDITION D'UTILISATION
*
* FONCTION
*
---------------------------------------------------------------------------- */
VAR vl_indice
VAR vl_strategie

	/*A chargement des strategies de sortie depuis le fichier de config*/
	vl_strategie=READ_ASCII_FILE@(AX_PATH++IE_FILE_STRATEGIE)
	vl_strategie=vl_strategie[0]

	/*A recherche de la position de cette strategie dans la liste des strategies*/
	tm_strategies=SYSTEM_VAR@(vg_noms_strategie_sortie)
	vl_indice=ARRAY_INDEX@(tm_strategies,vl_strategie)

	IF (vl_indice=-1)
		vl_indice=0

	/*A affiche la strategie courante*/
	DB_CTRL_VALUE@(va_fenetre,"BR_strategie",vl_indice)

ENDFUNCTION


