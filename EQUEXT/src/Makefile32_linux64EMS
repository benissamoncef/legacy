#
#  FICHIER: $RCSfile: Makefile32_linux64EMS,v $		RELEASE: $Revision: 1.1 $	DATE: $Date: 2021/07/28 09:50:49 $
#
#  Ce fichier est dependant des variables d'environnement :
#  $HOME, $PROJECTDIR, $RTHOME, $SYBASE
#
###################################################################
#
# Inhibition de l'echo des commandes
#
.SILENT:
#
# Ajout des suffixes des fichiers sources concernes
#
#.SUFFIXES: .sc
#
##################################################################
#
# Historique
#
# JPL	30/11/17 : Creation d'apres Makefile_linux V1.8 (DEM 1256)  1.1
# RGR	24/05/19 : Ajout cfe, gab, imi, rvi, wsp
# RGR	24/05/19 : Ajout fichiers ex_mdia.*
# LCL	22/11/19 : MOVIS DEMXXXX teini sous linux 1.3
# JMG	06/01/20 : ajout IMU 1.4
##################################################################

#
# nom du sous systeme
#

SSYST = EQUEXT
PROJHOME  = $(HOME)/migrazur
CIBLE=x86_64


#
# definitions de variables decrivant les differents chemins d'acces
#

DIRINC = $(CI_PROJECT_DIR)/$(SSYST)/inc
DIRSRC = $(CI_PROJECT_DIR)/$(SSYST)/src
DIRLIB = $(CI_PROJECT_DIR)/$(SSYST)/lib32x64EMS
DIREXE = $(CI_PROJECT_DIR)/$(SSYST)/bin32x64EMS
DIREMS = /opt/tibco/ems/8.5


# Paths  communs

#XDMICGINC = $PROJECTDIR/XDMICG/inc
#XDMICGLIB = $PROJECTDIR/XDMICG/lib
XDMICGINC = $(CI_PROJECT_DIR)/XDMICG/inc
XDMICGLIB = $(CI_PROJECT_DIR)/XDMICG/lib32x64EMS

EQUEXTINC = $(CI_PROJECT_DIR)/EQUEXT/inc
EQUEXTLIB = $(CI_PROJECT_DIR)/EQUEXT/lib32x64EMS


RTLINK = $(RTHOME)/bin/rtlink
CC = $(RTLINK)
CC = cc

RABBIT_PATH_LIB = /usr/local/lib64
RABBIT_LIB = -lrabbitmq
RABBIT_INC = /usr/local/include/rabbitmq-c


CFLAGS = -g -m32 \
	-I$(RTHOME)/include\
	-I$(XDMICGINC)\
	-D_TIBCO_EMS\
	-I$(DIREMS)/include\
	-I$(SYBASE)/$(SYBASE_OCS)/include\
	-I$(CI_PROJECT_DIR)/migrazur/XDMICG/inc\
	-I$(DIRINC)\
	-I$(RABBIT_INC)


# lint
OPTLINT=no
#LINT = $(LINTDIR)/lint

# Definition des flags du lint
LFLAGS = -u


# librairies communes applicatives utilisees

LIB =	$(DIRLIB)/ex_mcom.a \
	$(XDMICGLIB)/xzs*.a \
	$(XDMICGLIB)/xze.a \
	$(XDMICGLIB)/xzaoa.a \
	$(XDMICGLIB)/xzaoc.a \
	$(XDMICGLIB)/xzaol.a \
	$(XDMICGLIB)/xzm.a \
	$(XDMICGLIB)/xzi.a \
	$(XDMICGLIB)/xza.a \
	$(XDMICGLIB)/xzd.a \
	$(XDMICGLIB)/xzad.a \
	$(XDMICGLIB)/xd.a


RT_PATH_LIB = $(RTHOME)/lib/i86_linux
RT_LIB      = -lrtutil -lrtipc -lm

TIBEMS_LIB64=-ltibems -ltibemslookup
TIBEMSUFO_LIB64=-ltibemsufo
TIBEMSADMIN_LIB64=-ltibemsadmin
TIBEMS_SSL_LIB64=-lssl -lcrypto
TIBEMS_LDAP_LIB64=-lldap -llber
TIBEMS_XML_LIB64=-lxml2
TIBEMS_ZLIB64=-lz

TLIBS=-lpthread

LIBS=$(TIBEMS_LIB64) \
     $(TIBEMSADMIN_LIB64) $(TIBEMS_LDAP_LIB64) $(TIBEMS_XML_LIB64) $(TIBEMS_SSL_LIB64) $(TIBEMS_ZLIB64) $(TLIBS) \
     $(TIBEMSUFO_LIB64)
RT_LIB=-L$(DIREMS)/lib/64 -L$(DIREMS)/lib $(LIBS)


SYBASE_PATH_LIB = $(SYBASE)/$(SYBASE_OCS)/lib/

SYBASE_COMN_LIB = -lsybtcl -lsybcs -lsybcomn -lsybintl -lsybunic
SYBASE_LIB = -lsybct  $(SYBASE_COMN_LIB)


########### Zone a modifier par le developpeur ################
#
# DEFINITION DES SOURCES D'UNE  TACHE
#
# sources d'un executable
#
# x code du sous-systeme
# yyy nom du module
#

#
# includes
#
INCCOM =	$(DIRINC)/ex_msok.h\
		$(DIRINC)/ex_mdon.h\
		$(DIRINC)/ex_malt.h\
		$(DIRINC)/ex_mala.h\
		$(DIRINC)/ex_msta.h\
		$(DIRINC)/ex_mcom.h\
		$(DIRINC)/ex_mlcr.h\
		$(DIRINC)/ex_mdia.h\
		$(DIRINC)/ex_mtcr.h\
		$(DIRINC)/ex_mrtf.h

INCSRV =	$(DIRINC)/esrv_dir.h\
		$(DIRINC)/esrv_cfg.h\
		$(DIRINC)/esrv_ctl.h\
		$(DIRINC)/esrv_art.h

INCSUR =	$(DIRINC)/esur_dir.h\
		$(DIRINC)/esur_cfg.h\
		$(DIRINC)/esur_ctl.h\
		$(DIRINC)/esur_art.h

INCINI =	$(DIRINC)/eini_dir.h\
		$(DIRINC)/eini_cfg.h\
		$(DIRINC)/eini_syn.h\
		$(DIRINC)/eini_lcr.h\
		$(DIRINC)/eini_sur.h\
		$(DIRINC)/eini_don.h

INCMOD =	$(DIRINC)/emod_dir.h

INCTIM =	$(DIRINC)/etim_dir.h\
		$(DIRINC)/etim_trt.h\
		$(DIRINC)/etim_ins.h\
		$(DIRINC)/etim_sup.h\
		$(DIRINC)/etim_don.h

INCPMV =	$(DIRINC)/epmv_dir.h\
		$(DIRINC)/epmv_don.h\
		$(DIRINC)/epmv_cfg.h\
		$(DIRINC)/epmv_cmd.h\
		$(DIRINC)/epmv_cyc.h\
		$(DIRINC)/epmv_tra.h

INCPMVA =	$(DIRINC)/epma_dir.h\
		$(DIRINC)/epma_don.h\
		$(DIRINC)/epma_cfg.h\
		$(DIRINC)/epma_cmd.h\
		$(DIRINC)/epma_cyc.h\
		$(DIRINC)/epma_tra.h

INCSAG =	$(DIRINC)/esag_dir.h\
		$(DIRINC)/esag_don.h\
		$(DIRINC)/esag_cfg.h\
		$(DIRINC)/esag_cmd.h\
		$(DIRINC)/esag_cyc.h\
		$(DIRINC)/esag_tra.h

INCPRV =	$(DIRINC)/eprv_dir.h\
		$(DIRINC)/eprv_don.h\
		$(DIRINC)/eprv_cfg.h\
		$(DIRINC)/eprv_cmd.h\
		$(DIRINC)/eprv_cyc.h\
		$(DIRINC)/eprv_tra.h

INCPIC =	$(DIRINC)/epic_dir.h\
		$(DIRINC)/epic_don.h\
		$(DIRINC)/epic_cfg.h\
		$(DIRINC)/epic_cmd.h\
		$(DIRINC)/epic_cyc.h\
		$(DIRINC)/epic_tra.h

INCDAI =	$(DIRINC)/edai_dir.h\
		$(DIRINC)/edai_don.h\
		$(DIRINC)/edai_cfg.h\
		$(DIRINC)/edai_adt.h\
		$(DIRINC)/edai_cmd.h\
		$(DIRINC)/edai_bis.h\
		$(DIRINC)/edai_cyc.h\
		$(DIRINC)/edai_tra.h

INCVID =	$(DIRINC)/evid_dir.h\
		$(DIRINC)/evid_don.h\
		$(DIRINC)/evid_cfg.h\
		$(DIRINC)/evid_cmd.h\
		$(DIRINC)/evid_com.h\
		$(DIRINC)/evid_cyc.h\
		$(DIRINC)/evid_tra.h

INCNAV =	$(DIRINC)/enav_dir.h\
		$(DIRINC)/enav_don.h\
		$(DIRINC)/enav_cfg.h\
		$(DIRINC)/enav_cmd.h\
		$(DIRINC)/enav_cyc.h\
		$(DIRINC)/enav_tra.h

INCBAF =	$(DIRINC)/ebaf_dir.h\
		$(DIRINC)/ebaf_don.h\
		$(DIRINC)/ebaf_cfg.h\
		$(DIRINC)/ebaf_cmd.h\
		$(DIRINC)/ebaf_cyc.h\
		$(DIRINC)/ebaf_tra.h

INCBAD =	$(DIRINC)/ebad_dir.h\
		$(DIRINC)/ebad_don.h\
		$(DIRINC)/ebad_cfg.h\
		$(DIRINC)/ebad_cmd.h\
		$(DIRINC)/ebad_cyc.h\
		$(DIRINC)/ebad_tra.h

INCPAL =	$(DIRINC)/epal_dir.h\
		$(DIRINC)/epal_don.h\
		$(DIRINC)/epal_cfg.h\
		$(DIRINC)/epal_cmd.h\
		$(DIRINC)/epal_cyc.h\
		$(DIRINC)/epal_tra.h

INCRAU =	$(DIRINC)/erau_dir.h\
		$(DIRINC)/erau_don.h\
		$(DIRINC)/erau_cfg.h\
		$(DIRINC)/erau_cmd.h\
		$(DIRINC)/erau_cyc.h\
		$(DIRINC)/erau_phs.h\
		$(DIRINC)/erau_tra.h

INCOPC =	$(DIRINC)/eopc_dir.h\
		$(DIRINC)/eopc_cfg.h\
		$(DIRINC)/eopc_pro.h\
		
INCQTX =	$(DIRINC)/eqtx_dir.h\
		$(DIRINC)/eqtx_don.h\
		$(DIRINC)/eqtx_cmd.h\
		$(DIRINC)/eqtx_cyc.h\
		$(DIRINC)/eqtx_tra.h\
		$(DIRINC)/eqtx_cfg.h

INCTDP =	$(DIRINC)/etdp_dir.h\
		$(DIRINC)/etdp_don.h\
		$(DIRINC)/etdp_cmd.h\
		$(DIRINC)/etdp_cyc.h\
		$(DIRINC)/etdp_tra.h\
		$(DIRINC)/etdp_pmv.h\
		$(DIRINC)/etdp_pma.h\
		$(DIRINC)/etdp_cfg.h

INCGTC =	$(DIRINC)/egtc_dir.h\
		$(DIRINC)/egtc_cfg.h\
		$(DIRINC)/egtc_cmd.h\
		$(DIRINC)/egtc_cyc.h\
		$(DIRINC)/egtc_tra.h

INCRDT =	$(DIRINC)/erdt_dir.h\
		$(DIRINC)/erdt_don.h\
		$(DIRINC)/erdt_cfg.h\
		$(DIRINC)/erdt_cmd.h\
		$(DIRINC)/erdt_cyc.h\
		$(DIRINC)/erdt_tra.h\
		$(DIRINC)/erdt_cal.h

INCTDC =	$(DIRINC)/etdc_dir.h\
		$(DIRINC)/etdc_tra.h\
		$(DIRINC)/etdc_cal.h

INCNIX =	$(DIRINC)/enix_dir.h\
		$(DIRINC)/enix_don.h\
		$(DIRINC)/enix_ctl.h\
		$(DIRINC)/enix_cmd.h\
		$(DIRINC)/enix_tra.h\
		$(DIRINC)/enix_red.h\
		$(DIRINC)/enix_cfg.h

INCLMI = 	$(DIRINC)/elmi_dir.h\
	  	$(DIRINC)/elmi_cfg.h\
	  	$(DIRINC)/elmi_mdon.h\
	  	$(DIRINC)/elmi_pro.h

INCLEI = 	$(DIRINC)/elei_mdon.h\
	  	$(DIRINC)/elei_cfg.h\
	  	$(DIRINC)/elei_pro.h\
	  	$(DIRINC)/elei_dir.h

INCREG = 	$(DIRINC)/ereg_dir.h\
		$(DIRINC)/ereg_util.h\
		$(DIRINC)/ereg_trace.h\
		$(DIRINC)/ereg_detection.h\
		$(DIRINC)/ereg_ajuste.h\
		$(DIRINC)/ereg_valide.h\
		$(DIRINC)/ereg_application.h\
		$(DIRINC)/ereg_cfg.h
		
INCCFE = 	$(DIRINC)/ecfe_cfg.h\
		$(DIRINC)/ecfe_cmd.h\
		$(DIRINC)/ecfe_cyc.h\
		$(DIRINC)/ecfe_dir.h\
		$(DIRINC)/ecfe_don.h\
		$(DIRINC)/ecfe_tra.h
		
INCIMU = 	$(DIRINC)/eimu_cfg.h\
		$(DIRINC)/eimu_cmd.h\
		$(DIRINC)/eimu_cyc.h\
		$(DIRINC)/eimu_dir.h\
		$(DIRINC)/eimu_don.h\
		$(DIRINC)/eimu_tra.h

INCGAB = 	$(DIRINC)/egab_ajuste.h\
		$(DIRINC)/egab_application.h\
		$(DIRINC)/egab_cfg.h\
		$(DIRINC)/egab_cyc.h\
		$(DIRINC)/egab_detection.h\
		$(DIRINC)/egab_dir.h\
		$(DIRINC)/egab_tra.h\
		$(DIRINC)/egab_trace.h\
		$(DIRINC)/egab_util.h\
		$(DIRINC)/egab_valide.h
		
INCIMI = 	$(DIRINC)/eimi_cfg.h\
		$(DIRINC)/eimi_dir.h\
		$(DIRINC)/eimi_mdon.h\
		$(DIRINC)/eimi_pro.h
		
INCRVI = 	$(DIRINC)/ervi_cmd.h\
		$(DIRINC)/ervi_dir.h
		
INCWSP = 	$(DIRINC)/ewsp_dir.h\
		$(DIRINC)/ewsp_cyc.h\
		$(DIRINC)/ewsp_cmd.h\
		$(DIRINC)/ewsp_util.h

INCWSR = $(DIRINC)/ewsr_dir.h\
		$(DIRINC)/ewsr_cmd.h

INCWST = 	$(DIRINC)/ewst_dir.h\
		$(DIRINC)/ewst_cmd.h

#
# Sources
#
SRCCOM =	$(DIRSRC)/ex_msok.c\
		$(DIRSRC)/ex_mdon.c\
		$(DIRSRC)/ex_malt.c\
		$(DIRSRC)/ex_mala.c\
		$(DIRSRC)/ex_msta.c\
		$(DIRSRC)/ex_mcom.c\
		$(DIRSRC)/ex_mlcr.c\
		$(DIRSRC)/ex_mdia.c\
		$(DIRSRC)/ex_mtcr.c\
		$(DIRSRC)/ex_mrtf.c

SRCSRV	=	$(DIRSRC)/esrv_dir.c\
		$(DIRSRC)/esrv_cfg.c\
		$(DIRSRC)/esrv_ctl.c\
		$(DIRSRC)/esrv_art.c

SRCSUR	=	$(DIRSRC)/esur_dir.c\
		$(DIRSRC)/esur_cfg.c\
		$(DIRSRC)/esur_ctl.c\
		$(DIRSRC)/esur_art.c

SRCINI	=	$(DIRSRC)/eini_dir.c\
		$(DIRSRC)/eini_cfg.c\
		$(DIRSRC)/eini_syn.c\
		$(DIRSRC)/eini_lcr.c\
		$(DIRSRC)/eini_sur.c\
		$(DIRSRC)/eini_dai.c\
		$(DIRSRC)/eini_gtc.c\
		$(DIRSRC)/eini_nav.c\
		$(DIRSRC)/eini_pal.c\
		$(DIRSRC)/eini_pmv.c\
		$(DIRSRC)/eini_baf.c\
		$(DIRSRC)/eini_pma.c\
		$(DIRSRC)/eini_prv.c\
		$(DIRSRC)/eini_pic.c\
		$(DIRSRC)/eini_bad.c\
		$(DIRSRC)/eini_rau.c\
		$(DIRSRC)/eini_qtx.c\
		$(DIRSRC)/eini_tdp.c\
		$(DIRSRC)/eini_rdt.c\
		$(DIRSRC)/eini_vid.c\
		$(DIRSRC)/eini_cap.c\
		$(DIRSRC)/eini_imu.c\
		$(DIRSRC)/eini_cfe.c
#! Obsoletes
#		$(DIRSRC)/eini_nic.c\
#		$(DIRSRC)/eini_tel.c\
#		$(DIRSRC)/eini_prf.c

SRCMOD	=	$(DIRSRC)/emod_dir.c

SRCTIM =	$(DIRSRC)/etim_dir.c\
		$(DIRSRC)/etim_trt.c\
		$(DIRSRC)/etim_ins.c\
		$(DIRSRC)/etim_sup.c\
		$(DIRSRC)/etim_don.c

SRCPMV =	$(DIRSRC)/epmv_dir.c\
		$(DIRSRC)/epmv_don.c\
		$(DIRSRC)/epmv_cfg.c\
		$(DIRSRC)/epmv_cmd.c\
		$(DIRSRC)/epmv_cyc.c\
		$(DIRSRC)/epmv_tra.c

SRCPMVA =	$(DIRSRC)/epma_dir.c\
		$(DIRSRC)/epma_don.c\
		$(DIRSRC)/epma_cfg.c\
		$(DIRSRC)/epma_cmd.c\
		$(DIRSRC)/epma_cyc.c\
		$(DIRSRC)/epma_tra.c

SRCSAG =	$(DIRSRC)/esag_dir.c\
		$(DIRSRC)/esag_don.c\
		$(DIRSRC)/esag_cfg.c\
		$(DIRSRC)/esag_cmd.c\
		$(DIRSRC)/esag_cyc.c\
		$(DIRSRC)/esag_tra.c

SRCPRV =	$(DIRSRC)/eprv_dir.c\
		$(DIRSRC)/eprv_don.c\
		$(DIRSRC)/eprv_cfg.c\
		$(DIRSRC)/eprv_cmd.c\
		$(DIRSRC)/eprv_cyc.c\
		$(DIRSRC)/eprv_tra.c

SRCPIC =	$(DIRSRC)/epic_dir.c\
		$(DIRSRC)/epic_don.c\
		$(DIRSRC)/epic_cfg.c\
		$(DIRSRC)/epic_cmd.c\
		$(DIRSRC)/epic_cyc.c\
		$(DIRSRC)/epic_tra.c

SRCDAI =	$(DIRSRC)/edai_dir.c\
		$(DIRSRC)/edai_don.c\
		$(DIRSRC)/edai_cfg.c\
		$(DIRSRC)/edai_adt.c\
		$(DIRSRC)/edai_cmd.c\
		$(DIRSRC)/edai_bis.c\
		$(DIRSRC)/edai_cyc.c\
		$(DIRSRC)/edai_tra.c

SRCVID =	$(DIRSRC)/evid_dir.c\
		$(DIRSRC)/evid_don.c\
		$(DIRSRC)/evid_cfg.c\
		$(DIRSRC)/evid_cmd.c\
		$(DIRSRC)/evid_com.c\
		$(DIRSRC)/evid_cyc.c\
		$(DIRSRC)/evid_tra.c

SRCNAV =	$(DIRSRC)/enav_dir.c\
		$(DIRSRC)/enav_don.c\
		$(DIRSRC)/enav_cfg.c\
		$(DIRSRC)/enav_cmd.c\
		$(DIRSRC)/enav_cyc.c\
		$(DIRSRC)/enav_tra.c

SRCBAF =	$(DIRSRC)/ebaf_dir.c\
		$(DIRSRC)/ebaf_don.c\
		$(DIRSRC)/ebaf_cfg.c\
		$(DIRSRC)/ebaf_cmd.c\
		$(DIRSRC)/ebaf_cyc.c\
		$(DIRSRC)/ebaf_tra.c

SRCBAD =	$(DIRSRC)/ebad_dir.c\
		$(DIRSRC)/ebad_don.c\
		$(DIRSRC)/ebad_cfg.c\
		$(DIRSRC)/ebad_cmd.c\
		$(DIRSRC)/ebad_cyc.c\
		$(DIRSRC)/ebad_tra.c

SRCPAL =	$(DIRSRC)/epal_dir.c\
		$(DIRSRC)/epal_don.c\
		$(DIRSRC)/epal_cfg.c\
		$(DIRSRC)/epal_cmd.c\
		$(DIRSRC)/epal_cyc.c\
		$(DIRSRC)/epal_tra.c

SRCRAU =	$(DIRSRC)/erau_dir.c\
		$(DIRSRC)/erau_don.c\
		$(DIRSRC)/erau_cfg.c\
		$(DIRSRC)/erau_cmd.c\
		$(DIRSRC)/erau_cyc.c\
		$(DIRSRC)/erau_phs.c\
		$(DIRSRC)/erau_tra.c

SRCOPC =	$(DIRSRC)/eopc_dir.c\
		$(DIRSRC)/eopc_cfg.c\
		$(DIRSRC)/eopc_pro.c

SRCQTX =	$(DIRSRC)/eqtx_dir.c\
		$(DIRSRC)/eqtx_don.c\
		$(DIRSRC)/eqtx_cmd.c\
		$(DIRSRC)/eqtx_cyc.c\
		$(DIRSRC)/eqtx_tra.c\
		$(DIRSRC)/eqtx_cfg.c

SRCTDP =	$(DIRSRC)/etdp_dir.c\
		$(DIRSRC)/etdp_don.c\
		$(DIRSRC)/etdp_cmd.c\
		$(DIRSRC)/etdp_cyc.c\
		$(DIRSRC)/etdp_tra.c\
		$(DIRSRC)/etdp_pmv.c\
		$(DIRSRC)/etdp_pma.c\
		$(DIRSRC)/etdp_cfg.c

SRCGTC =	$(DIRSRC)/egtc_dir.c\
		$(DIRSRC)/egtc_cfg.c\
		$(DIRSRC)/egtc_cmd.c\
		$(DIRSRC)/egtc_cyc.c\
		$(DIRSRC)/egtc_tra.c

SRCRDT =	$(DIRSRC)/erdt_dir.c\
		$(DIRSRC)/erdt_don.c\
		$(DIRSRC)/erdt_cfg.c\
		$(DIRSRC)/erdt_cmd.c\
		$(DIRSRC)/erdt_cyc.c\
		$(DIRSRC)/erdt_tra.c\
		$(DIRSRC)/erdt_cal.c

SRCTDC =	$(DIRSRC)/etdc_dir.c\
		$(DIRSRC)/etdc_tra.c\
		$(DIRSRC)/etdc_cal.c

SRCNIX =	$(DIRSRC)/enix_dir.c\
		$(DIRSRC)/enix_don.c\
		$(DIRSRC)/enix_ctl.c\
		$(DIRSRC)/enix_cfg.c\
		$(DIRSRC)/enix_tra.c\
		$(DIRSRC)/enix_red.c\
		$(DIRSRC)/enix_cmd.c

SRCLMI = 	$(DIRSRC)/elmi_dir.c\
	  	$(DIRSRC)/elmi_cfg.c\
	  	$(DIRSRC)/elmi_pro.c

SRCLEI = 	$(DIRSRC)/elei_dir.c\
	  	$(DIRSRC)/elei_cfg.c\
	  	$(DIRSRC)/elei_pro.c

SRCREG = 	$(DIRSRC)/ereg_dir.c\
		$(DIRSRC)/ereg_trace.c\
		$(DIRSRC)/ereg_detection.c\
		$(DIRSRC)/ereg_ajuste.c\
		$(DIRSRC)/ereg_valide.c\
		$(DIRSRC)/ereg_application.c\
		$(DIRSRC)/ereg_cfg.c

SRCCFE = 	$(DIRSRC)/ecfe_cfg.c\
		$(DIRSRC)/ecfe_cmd.c\
		$(DIRSRC)/ecfe_cyc.c\
		$(DIRSRC)/ecfe_dir.c\
		$(DIRSRC)/ecfe_don.c\
		$(DIRSRC)/ecfe_tra.c
		
SRCIMU = 	$(DIRSRC)/eimu_cfg.c\
		$(DIRSRC)/eimu_cmd.c\
		$(DIRSRC)/eimu_cyc.c\
		$(DIRSRC)/eimu_dir.c\
		$(DIRSRC)/eimu_don.c\
		$(DIRSRC)/eimu_tra.c

SRCGAB = 	$(DIRSRC)/egab_ajuste.c\
		$(DIRSRC)/egab_application.c\
		$(DIRSRC)/egab_cfg.c\
		$(DIRSRC)/egab_cyc.c\
		$(DIRSRC)/egab_detection.c\
		$(DIRSRC)/egab_dir.c\
		$(DIRSRC)/egab_tra.c\
		$(DIRSRC)/egab_trace.c\
		$(DIRSRC)/egab_util.c\
		$(DIRSRC)/egab_valide.c
		
SRCIMI = 	$(DIRSRC)/eimi_cfg.c\
		$(DIRSRC)/eimi_dir.c\
		$(DIRSRC)/eimi_pro.c
		
SRCRVI = 	$(DIRSRC)/ervi_cmd.c\
		$(DIRSRC)/ervi_dir.c
		
SRCWSP = 	$(DIRSRC)/ewsp_dir.c\
		$(DIRSRC)/ewsp_cyc.c\
		$(DIRSRC)/ewsp_cmd.c\
		$(DIRSRC)/ewsp_util.c

SRCWSR = 	$(DIRSRC)/ewsr_dir.c\
		$(DIRSRC)/ewsr_cmd.c\

SRCWST = 	$(DIRSRC)/ewst_dir.c\
		$(DIRSRC)/ewst_cmd.c

#
# librairie d'un executable
#

OBJCOM	=	$(DIRLIB)/ex_mcom.a
OBJSRV	=	$(DIRLIB)/esrv.a
OBJSUR	=	$(DIRLIB)/esur.a
OBJINI	=	$(DIRLIB)/eini.a
OBJMOD	=	$(DIRLIB)/emod.a
OBJTIM	=	$(DIRLIB)/etim.a
OBJPMV	=	$(DIRLIB)/epmv.a
OBJPMVA	=	$(DIRLIB)/epma.a
OBJSAG	=	$(DIRLIB)/esag.a
OBJPRV	=	$(DIRLIB)/eprv.a
OBJPIC	=	$(DIRLIB)/epic.a
OBJDAI	=	$(DIRLIB)/edai.a
OBJVID	=	$(DIRLIB)/evid.a
OBJNAV	=	$(DIRLIB)/enav.a
OBJBAF	=	$(DIRLIB)/ebaf.a
OBJBAD	=	$(DIRLIB)/ebad.a
OBJPAL	=	$(DIRLIB)/epal.a
OBJRAU	=	$(DIRLIB)/erau.a
OBJOPC	=	$(DIRLIB)/eopc.a
OBJQTX	=	$(DIRLIB)/eqtx.a
OBJTDP	=	$(DIRLIB)/etdp.a
OBJGTC	=	$(DIRLIB)/egtc.a
OBJRDT	=	$(DIRLIB)/erdt.a
OBJTDC	=	$(DIRLIB)/etdc.a
OBJLMI  = 	$(DIRLIB)/elmi.a
OBJLEI  = 	$(DIRLIB)/elei.a
OBJNIX	=	$(DIRLIB)/enix.a
OBJREG  = 	$(DIRLIB)/ereg.a
OBJCFE  = 	$(DIRLIB)/ecfe.a
OBJIMU  = 	$(DIRLIB)/eimu.a
OBJGAB  = 	$(DIRLIB)/egab.a
OBJIMI  = 	$(DIRLIB)/eimi.a
OBJRVI  = 	$(DIRLIB)/ervi.a
OBJWSP  = 	$(DIRLIB)/ewsp.a
OBJWSR  = 	$(DIRLIB)/ewsr.a
OBJWST  = 	$(DIRLIB)/ewst.a


#
# DEFINITION DU NOM DES EXECUTABLES
#

EXESRV	=	$(DIREXE)/tesrv.x
EXESUR	=	$(DIREXE)/tesur.x
EXEINI	=	$(DIREXE)/teini.x
EXEMOD	=	$(DIREXE)/temod.x
EXETIM	=	$(DIREXE)/tetim.x
EXEPMV	=	$(DIREXE)/tepmv.x
EXEPMVA	=	$(DIREXE)/tepma.x
EXESAG	=	$(DIREXE)/tesag.x
EXEPRV	=	$(DIREXE)/teprv.x
EXEPIC	=	$(DIREXE)/tepic.x
EXEDAI	=	$(DIREXE)/tedai.x
EXEVID	=	$(DIREXE)/tevid.x
EXENAV	=	$(DIREXE)/tenav.x
EXEBAF	=	$(DIREXE)/tebaf.x
EXEBAD	=	$(DIREXE)/tebad.x
EXEPAL	=	$(DIREXE)/tepal.x
EXERAU	=	$(DIREXE)/terau.x
EXEOPC	=	$(DIREXE)/teopc.x
EXEQTX	=	$(DIREXE)/teqtx.x
EXETDP	=	$(DIREXE)/tetdp.x
EXEGTC	=	$(DIREXE)/tegtc.x
EXERDT	=	$(DIREXE)/terdt.x
EXETDC	=	$(DIREXE)/tetdc.x
EXELMI	=	$(DIREXE)/telmi.x
EXELEI	=	$(DIREXE)/telei.x
EXENIX	=	$(DIREXE)/tenix.x
EXENIX1	=	$(DIREXE)/tenx1.x
EXENIX2	=	$(DIREXE)/tenx2.x
EXENIX3	=	$(DIREXE)/tenx3.x
EXENIX4	=	$(DIREXE)/tenx4.x
EXENIX5	=	$(DIREXE)/tenx5.x
EXEREG	=	$(DIREXE)/tereg.x
EXECFE	=	$(DIREXE)/tecfe.x
EXEIMU	=	$(DIREXE)/teimu.x
EXEGAB	=	$(DIREXE)/tegab.x
EXECAP	=	$(DIREXE)/tecap.x
EXEIMI	=	$(DIREXE)/teimi.x
EXERVI	=	$(DIREXE)/tervi.x
EXEWSP	=	$(DIREXE)/tewsp.x
EXEWSR	=	$(DIREXE)/tewsr.x
EXEWST	=	$(DIREXE)/tewst.x

#
# DEFINITION DES REGLES DE GENERATION
#
# Premiere regle il faut tout faire : les communs et les executables
EXE =  $(EXESRV) $(EXESUR) $(EXETIM) $(EXEPMV) $(EXEPMVA) $(EXESAG) $(EXEPRV) $(EXEPIC) $(EXEDAI) $(EXEVID) $(EXENAV) $(EXEBAF) $(EXEBAD) $(EXEPAL) $(EXERAU) $(EXEQTX) $(EXETDP) $(EXEGTC) $(EXERDT) $(EXETDC) $(EXELMI) $(EXELEI)  $(EXENIX) $(EXENIX1) $(EXENIX2) $(EXENIX3) $(EXENIX4) $(EXENIX5) $(EXEREG) $(EXECFE) $(EXEGAB) $(EXEIMI) $(EXERVI) $(EXEWSP) $(EXEINI) $(EXEIMU) $(EXEMOD) $(EXEWST) $(EXEWSR)


tout : verifier_plateforme $(EXE)
	echo
	@echo LE SOUS-SYSTEME $(SSYST) EST A JOUR.
	echo

tesrv : $(EXESRV)
	echo
	@echo TESRV EST A JOUR.
	echo

tesur : $(EXESUR)
	echo
	@echo TESUR EST A JOUR.
	echo

teini : $(EXEINI)
	echo
	@echo TEINI EST A JOUR.
	echo

temod : $(EXEMOD)
	echo
	@echo TEMOD EST A JOUR.
	echo

tetim : $(EXETIM)
	echo
	@echo TETIM EST A JOUR.
	echo

tepmv : $(EXEPMV)
	echo
	@echo TEPMV EST A JOUR.
	echo

tepma : $(EXEPMVA)
	echo
	@echo TEPMVA EST A JOUR.
	echo

tesag : $(EXESAG)
	echo
	@echo TESAG EST A JOUR.
	echo

teprv : $(EXEPRV)
	echo
	@echo TEPRV EST A JOUR.
	echo

tepic : $(EXEPIC)
	echo
	@echo TEPIC EST A JOUR.
	echo

tedai : $(EXEDAI)
	echo
	@echo TEDAI EST A JOUR.
	echo

tevid : $(EXEVID)
	echo
	@echo TEVID EST A JOUR.
	echo

tenav : $(EXENAV)
	echo
	@echo TENAV EST A JOUR.
	echo

tebaf : $(EXEBAF)
	echo
	@echo TEBAF EST A JOUR.
	echo

tebad : $(EXEBAD)
	echo
	@echo TEBAD EST A JOUR.
	echo

tepal : $(EXEPAL)
	echo
	@echo TEPAL EST A JOUR.
	echo

terau : $(EXERAU)
	echo
	@echo TERAU EST A JOUR.
	echo

teopc : $(EXEOPC)
	echo
	@echo TEOPC EST A JOUR.
	echo

teqtx : $(EXEQTX)
	echo
	@echo TEQTX EST A JOUR.
	echo

tetdp : $(EXETDP)
	echo
	@echo TETDP EST A JOUR.
	echo

tegtc : $(EXEGTC)
	echo
	@echo TEGTC EST A JOUR.
	echo

terdt : $(EXERDT)
	echo
	@echo TERDT EST A JOUR.
	echo

tetdc : $(EXETDC)
	echo
	@echo TETDC EST A JOUR.
	echo

telmi : $(EXELMI)
	echo
	@echo TELMI EST A JOUR.
	echo

telei : $(EXELEI)
	echo
	@echo TELEI EST A JOUR.
	echo

tenix : $(EXENIX)
	echo
	@echo TENIX EST A JOUR.
	echo

tenx1 : $(EXENIX1)
	echo
	@echo TENIX1 EST A JOUR.
	echo

tenx2 : $(EXENIX2)
	echo
	@echo TENIX2 EST A JOUR.
	echo

tenx3 : $(EXENIX3)
	echo
	@echo TENIX3 EST A JOUR.
	echo

tenx4 : $(EXENIX4)
	echo
	@echo TENIX4 EST A JOUR.
	echo

tenx5 : $(EXENIX5)
	echo
	@echo TENIX5 EST A JOUR.
	echo

tereg : $(EXEREG)
	echo
	@echo TEREG EST A JOUR.
	echo

tecfe : $(EXECFE)
	echo
	@echo TECFE EST A JOUR.
	echo
	
teimu : $(EXEIMU)
	echo
	@echo TEIMU EST A JOUR.
	echo

tegab : $(EXEGAB)
	echo
	@echo TEGAB EST A JOUR.
	echo
	
teimi : $(EXEIMI)
	echo
	@echo TEIMI EST A JOUR.
	echo
	
tervi : $(EXERVI)
	echo
	@echo TERVI EST A JOUR.
	echo
	
tewsp : $(EXEWSP)
	echo
	@echo TEWSP EST A JOUR.
	echo

tewsr : $(EXEWSR)
	echo
	@echo TEWSR EST A JOUR.
	
tewst : $(EXEWST)
	echo
	@echo TEWST EST A JOUR.
	echo

#
# GENERATION  D'UN EXECUTABLE
#
# Regle de generation d'un executable a partir
# de ses fichiers sources, de ses objets et des librairies communes
#
# Phase edition de lien
#

$(EXESRV) : $(SRCSRV) $(OBJSRV)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC) $(CFLAGS)   $(OBJSRV) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC) $(CFLAGS)   $(OBJSRV) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXESUR) : $(SRCSUR) $(OBJSUR)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJSUR) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJSUR) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXEINI) : $(SRCINI) $(OBJINI)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)  $(OBJINI) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)  $(OBJINI) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXEMOD) : $(SRCMOD) $(OBJMOD)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJMOD) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJMOD) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXETIM) : $(SRCTIM) $(OBJTIM)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJTIM) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJTIM) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXEPMV) : $(SRCPMV) $(OBJPMV)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJPMV) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJPMV) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXEPMVA) : $(SRCPMVA) $(OBJPMVA)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJPMVA) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJPMVA) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXEPRV) : $(SRCPRV) $(OBJPRV)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJPRV) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJPRV) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXEPIC) : $(SRCPIC) $(OBJPIC)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJPIC) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJPIC) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXESAG) : $(SRCSAG) $(OBJSAG)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJSAG) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB)  -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJSAG) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB)  -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXEDAI) : $(SRCDAI) $(OBJDAI)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJDAI) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJDAI) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXEVID) : $(SRCVID) $(OBJVID)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJVID) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJVID) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXENAV) : $(SRCNAV) $(OBJNAV)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJNAV) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJNAV) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXEBAF) : $(SRCBAF) $(OBJBAF)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJBAF) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJBAF) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXEBAD) : $(SRCBAD) $(OBJBAD)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJBAD) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJBAD) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXEPAL) : $(SRCPAL) $(OBJPAL)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJPAL) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJPAL) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXERAU) : $(SRCRAU) $(OBJRAU)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJRAU) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB)  -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJRAU) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB)  -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXEOPC) : $(SRCOPC) $(OBJOPC)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJOPC) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB)  -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJOPC) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB)  -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXEQTX) : $(SRCQTX) $(OBJQTX)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJQTX) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJQTX) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXETDP) : $(SRCTDP) $(OBJTDP) $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJTDP) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJTDP) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXEGTC) : $(SRCGTC) $(OBJGTC)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJGTC) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJGTC) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXERDT) : $(SRCRDT) $(OBJRDT)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJRDT) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJRDT) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXETDC) : $(SRCTDC) $(OBJTDC)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJTDC) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJTDC) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXELMI) : $(SRCLMI) $(OBJLMI) $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJLMI) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJLMI) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXELEI) : $(SRCLEI) $(OBJLEI)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJLEI) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJLEI) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXENIX) : $(SRCNIX) $(OBJNIX)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(CC)  $(CFLAGS)   $(OBJNIX) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)   $(OBJNIX) $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXENIX1) : $(EXENIX)
	echo
	echo "PHASE DE COPIE DE L'EXECUTABLE tenix vers tenx1"
	cp $(EXENIX) $(EXENIX1)
	echo
	@echo Executable $@ a jour.

$(EXENIX2) : $(EXENIX)
	echo
	echo "PHASE DE COPIE DE L'EXECUTABLE tenix vers tenx2"
	cp $(EXENIX) $(EXENIX2)
	echo
	@echo Executable $@ a jour.

$(EXENIX3) : $(EXENIX)
	echo
	echo "PHASE DE COPIE DE L'EXECUTABLE tenix vers tenx3"
	cp $(EXENIX) $(EXENIX3)
	echo
	@echo Executable $@ a jour.

$(EXENIX4) : $(EXENIX)
	echo
	echo "PHASE DE COPIE DE L'EXECUTABLE tenix vers tenx4"
	cp $(EXENIX) $(EXENIX4)
	echo
	@echo Executable $@ a jour.

$(EXENIX5) : $(EXENIX)
	echo
	echo "PHASE DE COPIE DE L'EXECUTABLE tenix vers tenx5"
	cp $(EXENIX) $(EXENIX5)
	echo
	@echo Executable $@ a jour.

$(EXEREG) : $(SRCREG) $(OBJREG)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	#$(CC)  $(CFLAGS)  $(OBJREG)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -o $@
	echo $(CC)  $(CFLAGS)  $(OBJREG)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)  $(OBJREG)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXECFE) : $(SRCCFE) $(OBJCFE)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	#$(CC)  $(CFLAGS)  $(OBJCFE)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -o $@
	echo $(CC)  $(CFLAGS)  $(OBJCFE)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)  $(OBJCFE)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.
	
$(EXEIMU) : $(SRCIMU) $(OBJIMU)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	#$(CC)  $(CFLAGS)  $(OBJIMU)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -o $@
	echo $(CC)  $(CFLAGS)  $(OBJIMU)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)  $(OBJIMU)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXEGAB) : $(SRCGAB) $(OBJGAB)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	#$(CC)  $(CFLAGS)  $(OBJGAB)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -o $@
	echo $(CC)  $(CFLAGS)  $(OBJGAB)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)  $(OBJGAB)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXECAP) : $(EXEGAB)
	echo
	echo "PHASE DE COPIE DE L'EXECUTABLE tegab vers tecap"
	cp $(EXEGAB) $(EXECAP)
	echo
	@echo Executable $@ a jour.

$(EXEIMI) : $(SRCIMI) $(OBJIMI)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	#$(CC)  $(CFLAGS)  $(OBJIMI)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -o $@
	echo $(CC)  $(CFLAGS)  $(OBJIMI)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)  $(OBJIMI)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.
	
$(EXERVI) : $(SRCRVI) $(OBJRVI)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	#$(CC)  $(CFLAGS)  $(OBJRVI)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -o $@
	echo $(CC)  $(CFLAGS)  $(OBJRVI)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)  $(OBJRVI)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.
	
$(EXEWSP) : $(SRCWSP) $(OBJWSP)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	#$(CC)  $(CFLAGS)  $(OBJWSP)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -o $@
	echo $(CC)  $(CFLAGS)  $(OBJWSP)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)  $(OBJWSP)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXEWSR) : $(SRCWSR) $(OBJWSR)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	#$(CC)  $(CFLAGS)  $(OBJWSR)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)  $(OBJWSR)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

$(EXEWST) : $(SRCWST) $(OBJWST)  $(LIB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	#$(CC)  $(CFLAGS)  $(OBJWST)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	$(CC)  $(CFLAGS)  $(OBJWST)  $(LIB) -L$(RT_PATH_LIB) $(RT_LIB) -L$(RABBIT_PATH_LIB) $(RABBIT_LIB) -o $@
	echo
	echo "TAILLE DE L'EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.


#
# Regle liant les sources aux fichiers include communs
#

$(SRCCOM) : $(INCICG)   $(INCCOM)
	touch $@

$(SRCSRV) : $(INCICG)   $(INCSRV)
	touch $@

$(SRCSUR) : $(INCICG)   $(INCSUR)
	touch $@

#$(SRCINI) : $(INCICG)   $(INCINI)
#	touch $@

$(SRCMOD) : $(INCICG)   $(INCMOD)
	touch $@

$(SRCTIM) : $(INCICG)   $(INCTIM)
	touch $@

$(SRCPMV) : $(INCICG)   $(INCPMV)
	touch $@

$(SRCPMVA) : $(INCICG)   $(INCPMVA)
	touch $@

$(SRCSAG) : $(INCSAG)   $(INCPAL)
	touch $@

$(SRCPIC) : $(INCICG)   $(INCPIC)
	touch $@

$(SRCDAI) : $(INCICG)   $(INCDAI)
	touch $@

$(SRCVID) : $(INCICG)   $(INCVID)
	touch $@

$(SRCNAV) : $(INCICG)   $(INCNAV)
	touch $@

$(SRCBAF) : $(INCICG)   $(INCBAF)
	touch $@

$(SRCBAD) : $(INCICG)   $(INCBAD)
	touch $@

$(SRCPAL) : $(INCICG)   $(INCPAL)
	touch $@

$(SRCRAU) : $(INCICG)   $(INCRAU)
	touch $@

$(SRCQTX) : $(INCICG)   $(INCQTX)
	touch $@

$(SRCTDP) : $(INCICG)   $(INCTDP)
	touch $@

$(SRCGTC) : $(INCICG)   $(INCGTC)
	touch $@

$(SRCRDT) : $(INCICG)   $(INCRDT)
	touch $@

$(SRCTDC) : $(INCICG)   $(INCTDC)
	touch $@

$(SRCLMI) : $(INCICG)   $(INCLMI)
	touch $@

$(SRCLEI) : $(INCICG)   $(INCLEI)
	touch $@

$(SRCNIX) : $(INCICG)   $(INCNIX)
	touch $@

$(SRCREG) : $(INCICG)   $(INCREG)
	touch $@
	
$(SRCCFE) : $(INCICG)   $(INCCFE)
	touch $@
	
$(SRCGAB) : $(INCICG)   $(INCGAB)
	touch $@
	
$(SRCIMI) : $(INCICG)   $(INCIMI)
	touch $@
	
$(SRCRVI) : $(INCICG)   $(INCRVI)
	touch $@

$(SRCWSP) : $(INCICG)   $(INCWSP)
	touch $@

#
# Regle de generation d'une librairie  a partir
# de ses fichiers objet.
#
$(OBJCOM):	$(OBJCOM)(ex_msok.o)\
		$(OBJCOM)(ex_mdon.o)\
		$(OBJCOM)(ex_malt.o)\
		$(OBJCOM)(ex_mala.o)\
		$(OBJCOM)(ex_msta.o)\
		$(OBJCOM)(ex_mcom.o)\
		$(OBJCOM)(ex_mlcr.o)\
		$(OBJCOM)(ex_mdia.o)\
		$(OBJCOM)(ex_mtcr.o)\
		$(OBJCOM)(ex_mrtf.o)

$(OBJSRV):	$(OBJSRV)(esrv_dir.o)\
		$(OBJSRV)(esrv_cfg.o)\
		$(OBJSRV)(esrv_ctl.o)\
		$(OBJSRV)(esrv_art.o)

$(OBJSUR):	$(OBJSUR)(esur_dir.o)\
		$(OBJSUR)(esur_cfg.o)\
		$(OBJSUR)(esur_ctl.o)\
		$(OBJSUR)(esur_art.o)

$(OBJINI):	$(OBJINI)(eini_dir.o)\
		$(OBJINI)(eini_cfg.o)\
		$(OBJINI)(eini_syn.o)\
		$(OBJINI)(eini_lcr.o)\
		$(OBJINI)(eini_sur.o)\
		$(OBJINI)(eini_dai.o)\
		$(OBJINI)(eini_gtc.o)\
		$(OBJINI)(eini_nav.o)\
		$(OBJINI)(eini_pal.o)\
		$(OBJINI)(eini_nic.o)\
		$(OBJINI)(eini_pmv.o)\
		$(OBJINI)(eini_pma.o)\
		$(OBJINI)(eini_prv.o)\
		$(OBJINI)(eini_pic.o)\
		$(OBJINI)(eini_baf.o)\
		$(OBJINI)(eini_bad.o)\
		$(OBJINI)(eini_rau.o)\
		$(OBJINI)(eini_qtx.o)\
		$(OBJINI)(eini_tdp.o)\
		$(OBJINI)(eini_rdt.o)\
		$(OBJINI)(eini_tel.o)\
		$(OBJINI)(eini_vid.o)\
		$(OBJINI)(eini_imu.o)\
		$(OBJINI)(eini_cap.o)\
		$(OBJINI)(eini_cfe.o)\
		$(OBJINI)(eini_prf.o)

$(OBJMOD):	$(OBJMOD)(emod_dir.o)

$(OBJTIM):	$(OBJTIM)(etim_dir.o)\
		$(OBJTIM)(etim_trt.o)\
		$(OBJTIM)(etim_ins.o)\
		$(OBJTIM)(etim_sup.o)\
		$(OBJTIM)(etim_don.o)

$(OBJPMV):	$(OBJPMV)(epmv_dir.o)\
		$(OBJPMV)(epmv_don.o)\
		$(OBJPMV)(epmv_cfg.o)\
		$(OBJPMV)(epmv_cmd.o)\
		$(OBJPMV)(epmv_cyc.o)\
		$(OBJPMV)(epmv_tra.o)

$(OBJPMVA):	$(OBJPMVA)(epma_dir.o)\
		$(OBJPMVA)(epma_don.o)\
		$(OBJPMVA)(epma_cfg.o)\
		$(OBJPMVA)(epma_cmd.o)\
		$(OBJPMVA)(epma_cyc.o)\
		$(OBJPMVA)(epma_tra.o)

$(OBJSAG):	$(OBJSAG)(esag_dir.o)\
		$(OBJSAG)(esag_don.o)\
		$(OBJSAG)(esag_cfg.o)\
		$(OBJSAG)(esag_cmd.o)\
		$(OBJSAG)(esag_cyc.o)\
		$(OBJSAG)(esag_tra.o)

$(OBJPRV):	$(OBJPRV)(eprv_dir.o)\
		$(OBJPRV)(eprv_don.o)\
		$(OBJPRV)(eprv_cfg.o)\
		$(OBJPRV)(eprv_cmd.o)\
		$(OBJPRV)(eprv_cyc.o)\
		$(OBJPRV)(eprv_tra.o)

$(OBJPIC):	$(OBJPIC)(epic_dir.o)\
		$(OBJPIC)(epic_don.o)\
		$(OBJPIC)(epic_cfg.o)\
		$(OBJPIC)(epic_cmd.o)\
		$(OBJPIC)(epic_cyc.o)\
		$(OBJPIC)(epic_tra.o)

$(OBJDAI):	$(OBJDAI)(edai_dir.o)\
		$(OBJDAI)(edai_don.o)\
		$(OBJDAI)(edai_cfg.o)\
		$(OBJDAI)(edai_adt.o)\
		$(OBJDAI)(edai_cmd.o)\
		$(OBJDAI)(edai_bis.o)\
		$(OBJDAI)(edai_cyc.o)\
		$(OBJDAI)(edai_tra.o)

$(OBJVID):	$(OBJVID)(evid_dir.o)\
		$(OBJVID)(evid_don.o)\
		$(OBJVID)(evid_cfg.o)\
		$(OBJVID)(evid_cmd.o)\
		$(OBJVID)(evid_com.o)\
		$(OBJVID)(evid_cyc.o)\
		$(OBJVID)(evid_tra.o)

$(OBJNAV):	$(OBJNAV)(enav_dir.o)\
		$(OBJNAV)(enav_don.o)\
		$(OBJNAV)(enav_cfg.o)\
		$(OBJNAV)(enav_cmd.o)\
		$(OBJNAV)(enav_cyc.o)\
		$(OBJNAV)(enav_tra.o)

$(OBJBAF):	$(OBJBAF)(ebaf_dir.o)\
		$(OBJBAF)(ebaf_don.o)\
		$(OBJBAF)(ebaf_cfg.o)\
		$(OBJBAF)(ebaf_cmd.o)\
		$(OBJBAF)(ebaf_cyc.o)\
		$(OBJBAF)(ebaf_tra.o)

$(OBJBAD):	$(OBJBAD)(ebad_dir.o)\
		$(OBJBAD)(ebad_don.o)\
		$(OBJBAD)(ebad_cfg.o)\
		$(OBJBAD)(ebad_cmd.o)\
		$(OBJBAD)(ebad_cyc.o)\
		$(OBJBAD)(ebad_tra.o)

$(OBJPAL):	$(OBJPAL)(epal_dir.o)\
		$(OBJPAL)(epal_don.o)\
		$(OBJPAL)(epal_cfg.o)\
		$(OBJPAL)(epal_cmd.o)\
		$(OBJPAL)(epal_cyc.o)\
		$(OBJPAL)(epal_tra.o)

$(OBJRAU):	$(OBJRAU)(erau_dir.o)\
		$(OBJRAU)(erau_don.o)\
		$(OBJRAU)(erau_cfg.o)\
		$(OBJRAU)(erau_cmd.o)\
		$(OBJRAU)(erau_cyc.o)\
		$(OBJRAU)(erau_phs.o)\
		$(OBJRAU)(erau_tra.o)

$(OBJOPC):	$(OBJOPC)(eopc_dir.o)\
		$(OBJOPC)(eopc_cfg.o)\
		$(OBJOPC)(eopc_pro.o)

$(OBJQTX):	$(OBJQTX)(eqtx_dir.o)\
		$(OBJQTX)(eqtx_don.o)\
		$(OBJQTX)(eqtx_cmd.o)\
		$(OBJQTX)(eqtx_cyc.o)\
		$(OBJQTX)(eqtx_tra.o)\
		$(OBJQTX)(eqtx_cfg.o)

$(OBJTDP):	$(OBJTDP)(etdp_dir.o)\
		$(OBJTDP)(etdp_don.o)\
		$(OBJTDP)(etdp_cmd.o)\
		$(OBJTDP)(etdp_cyc.o)\
		$(OBJTDP)(etdp_tra.o)\
		$(OBJTDP)(etdp_pmv.o)\
		$(OBJTDP)(etdp_pma.o)\
		$(OBJTDP)(etdp_cfg.o)

$(OBJGTC):	$(OBJGTC)(egtc_dir.o)\
		$(OBJGTC)(egtc_cfg.o)\
		$(OBJGTC)(egtc_cmd.o)\
		$(OBJGTC)(egtc_cyc.o)\
		$(OBJGTC)(egtc_tra.o)

$(OBJRDT):	$(OBJRDT)(erdt_dir.o)\
		$(OBJRDT)(erdt_don.o)\
		$(OBJRDT)(erdt_cfg.o)\
		$(OBJRDT)(erdt_cmd.o)\
		$(OBJRDT)(erdt_cyc.o)\
		$(OBJRDT)(erdt_tra.o)\
		$(OBJRDT)(erdt_cal.o)

$(OBJTDC):	$(OBJTDC)(etdc_dir.o)\
		$(OBJTDC)(etdc_tra.o)\
		$(OBJTDC)(etdc_cal.o)

$(OBJLMI):	$(OBJLMI)(elmi_cfg.o)\
 		$(OBJLMI)(elmi_pro.o)\
 		$(OBJLMI)(elmi_dir.o)

$(OBJLEI):	$(OBJLEI)(elei_cfg.o)\
 		$(OBJLEI)(elei_pro.o)\
 		$(OBJLEI)(elei_dir.o)

$(OBJNIX):	$(OBJNIX)(enix_dir.o)\
		$(OBJNIX)(enix_don.o)\
		$(OBJNIX)(enix_ctl.o)\
		$(OBJNIX)(enix_cfg.o)\
		$(OBJNIX)(enix_tra.o)\
		$(OBJNIX)(enix_cmd.o)\
		$(OBJNIX)(enix_red.o)

$(OBJREG):	$(OBJREG)(ereg_dir.o)\
		$(OBJREG)(ereg_util.o)\
		$(OBJREG)(ereg_trace.o)\
		$(OBJREG)(ereg_cfg.o)\
		$(OBJREG)(ereg_detection.o)\
		$(OBJREG)(ereg_ajuste.o)\
		$(OBJREG)(ereg_valide.o)\
		$(OBJREG)(ereg_application.o)

$(OBJCFE): $(OBJCFE)/(ecfe_cfg.o)\
		$(OBJCFE)/(ecfe_cmd.o)\
		$(OBJCFE)/(ecfe_cyc.o)\
		$(OBJCFE)/(ecfe_dir.o)\
		$(OBJCFE)/(ecfe_don.o)\
		$(OBJCFE)/(ecfe_tra.o)
		
$(OBJIMU): $(OBJIMU)/(eimu_cfg.o)\
		$(OBJIMU)/(eimu_cmd.o)\
		$(OBJIMU)/(eimu_cyc.o)\
		$(OBJIMU)/(eimu_dir.o)\
		$(OBJIMU)/(eimu_don.o)\
		$(OBJIMU)/(eimu_tra.o)
		
$(OBJGAB): $(OBJGAB)/(egab_ajuste.o)\
		$(OBJGAB)/(egab_application.o)\
		$(OBJGAB)/(egab_cfg.o)\
		$(OBJGAB)/(egab_cyc.o)\
		$(OBJGAB)/(egab_detection.o)\
		$(OBJGAB)/(egab_dir.o)\
		$(OBJGAB)/(egab_tra.o)\
		$(OBJGAB)/(egab_trace.o)\
		$(OBJGAB)/(egab_util.o)\
		$(OBJGAB)/(egab_valide.o)
		
$(OBJIMI):	$(OBJIMI)/(eimi_cfg.o)\
		$(OBJIMI)/(eimi_dir.o)\
		$(OBJIMI)/(eimi_pro.o)
		
$(OBJRVI):	$(OBJRVI)/(ervi_cmd.o)\
		$(OBJRVI)/(ervi_dir.o)
		
$(OBJWSP):	$(OBJWSP)/(ewsp_dir.o)\
		$(OBJWSP)/(ewsp_cyc.o)\
		$(OBJWSP)/(ewsp_cmd.o)\
		$(OBJWSP)/(ewsp_util.o)

$(OBJWSR):	$(OBJWSR)/(ewsr_dir.o)\
		$(OBJWSR)/(ewsr_cmd.o)

$(OBJWST):	$(OBJWST)/(ewst_dir.o)\
		$(OBJWST)/(ewst_cmd.o)

#
# GENERATION  D'UN EXECUTABLE  RTWORKS
#
# Regle de generation d'un executable a partir
# de ses fichiers sources, de ses objets et des librairies communes
#
# Phase edition de lien
#
#$(EXE) : $(SRC) $(OBJ) $(LIB)
#	echo
#	echo "PHASE EDITION DE LIEN :"$@
#	$(CC)  $(CFLAGS) $(OBJ) $(LIB)  -o $@
#	echo
#	echo "TAILLE DE L'EXECUTABLE :"$@
#	@size $@
#	@echo Executable $(DIREXE)/$@ a jour.
#
#
#
# GENERATION  D'UN LIBRAIRIE COMMUNE
#
# Regle liant  commun aux sources et a la librairie
#
#commun : $(SRC) $(LIB)
#	echo
#	echo LA LIBRAIRIE $(LIB) EST A JOUR.
#	echo
#

########### Fin de zone a modifier par le developpeur ################

#
# phase de menage du makefile
#

verifier_plateforme :
	if test "$(MODELE)" != "$(CIBLE)" ; \
	then	echo "Ce fichier Makefile N'EST PAS DESTINE A CETTE PLATEFORME. NE PAS GENERER DE BINAIRE !!!" ; \
		false ; \
	fi


clean: verifier_plateforme
	rm -f $(DIRLIB)/*.a
	rm -f $(EXE)


#
#
# Redefinition de la regles de construction d'un .o a partir d'un .c
#
#
.c.o :
	echo " "
	if test $(OPTLINT) = yes;\
          then echo "PHASE DE VERIFICATION SYNTAXIQUE : "   $<;\
               $(LINT) $(LFLAGS)  $<;\
          else echo $< "PAS DE VERIFICATION SYNTAXIQUE ";\
        fi;
	echo
	echo "PHASE DE COMPILATION             : "   $<
	echo " "
	$(CC)   $(CFLAGS) -c $<


#
# Redefinition de la regles de construction d'un .a a partir d'un .o
#
.o.a:
	echo "CREATION DE LIBRAIRIE "$@
	ar rv $@ $<
	rm -f $<


#
# Redefinition de la regles de construction d'un .a a partir d'un .c
#
.c.a :
	echo " "
	if test $(OPTLINT) = yes;\
          then echo "PHASE DE VERIFICATION SYNTAXIQUE : "   $*.c;\
               $(LINT) $(LFLAGS)  $*.c;\
          else echo  "PAS DE VERIFICATION SYNTAXIQUE " $*.c;\
        fi;
	echo
	echo "PHASE DE COMPILATION             : "   $*.c
	echo " "
	$(CC)   $(CFLAGS) -c $*.c
	echo "MISE A JOUR DE LIBRAIRIE :"$@
	ar r $@ $*.o
	rm -f $*.o
