#
#  Ce fichier est dependant des variables d'environnement :
#  $HOME, $PROJECTDIR, $RTHOME, $SYBASE
#
###################################################################
#
# Inhibition de l'echo des commandes
#
.SILENT:
#
# Ajout des suffixes des fichiers concernes
#
#.SUFFIXES: .sc
#
##################################################################
#
# Historique
#
# JPL	30/11/17 : Creation d'apres Makefile_linux V1.5 (DEM 1256)  1.1
##################################################################
#
# Definitions de variables du makefile
#
#
# nom du sous systeme
#

SSYST = BASEDD
PROJHOME = $(HOME)/migrazur
CIBLE=x86_64

#
# definitions de variables decrivant les differents chemins d'acces
#

DIRINC = $(CI_PROJECT_DIR)/$(SSYST)/inc
DIRSRC = $(CI_PROJECT_DIR)/$(SSYST)/src
DIRLIB = $(CI_PROJECT_DIR)/$(SSYST)/libx64EMS
DIREXE = $(CI_PROJECT_DIR)/$(SSYST)/binx64EMS
DIREMS = /opt/tibco/ems/8.5


# Paths  communs
#XDMICGINC = $(PROJECTDIR)/valid/ICG/inc
#XDMICGLIB = $(PROJECTDIR)/valid/ICG/libx
XDMICGINC = $(CI_PROJECT_DIR)/XDMICG/inc
XDMICGLIB = $(CI_PROJECT_DIR)/XDMICG/libx64EMS

# SYBASE = /produits/sybase15 defini par l'environement
DIRRTWORKS = $(RTHOME)/include
DIRSYBASE = $(SYBASE)/$(SYBASE_OCS)/include
SYBASE_PATH_LIB = $(SYBASE)/$(SYBASE_OCS)/lib

#
# Definition des flags de compilation et de correcteur syntaxique
#
# rtlink
RTLINK = $(RTHOME)/bin/rtlink -64bit
RTLINK = cc

# compilateur
#CC = purify cc
CC = $(RTHOME)/bin/rtlink -64bit
CC =  cc


CFLAGS = -g\
    -D_XOPEN_SOURCE=500\
    -DSYB_LP64\
	-I$(DIRRTWORKS)\
	-D_TIBCO_EMS\
	-I$(DIRSYBASE)\
	-I$(DIREMS)/include\
	-I$(XDMICGINC)\
	-I$(DIRINC)\
	-I/usr/include/libxml2


# lint
OPTLINT=no

# Definition des flags du lint
LFLAGS=	-u\
	-I$(DIRRTWORKS)\
	-I$(DIRSYBASE)\
	-I$(DIREMS)/include\
	-L$(DIREMS)/lib\
	-L$(DIREMS)/lib/64\
    -I$(XDMICGINC)\
	-I$(DIRINC)

# Librairie Systeme necessaire dans la Tache TIMER
#       pour le mecanisme de SIGNAL
LDSIGNAL =


#ï¿½Librairies SYBASE
#SYB_COMN_LIB = -lsybtcl -lsybcs -lsybcomn -lsybintl -lsybunic
SYB_COMN_LIB = -lsybtcl64 -lsybcs64 -lsybcomn64 -lsybintl64 -lsybunic64

SYB_SYS_LIB = -Wl,-Bdynamic -ldl -lnsl -lm

#SYBASE_LIB = -lsybct $(SYB_COMN_LIB)   -L$(SYBASE)/DM/REP-16_0/ASA17/OCS/OCS-16_0/lib -lsybsrv
SYBASE_LIB = -L$(SYBASE)/$(SYBASE_OCS)/lib -lsybct64 $(SYB_COMN_LIB) -L$(SYBASE)/DM/REP-16_0/ASA17/OCS/OCS-16_0/lib -lsybsrv64


XML_PATH_LIB = /usr/lib64
XML_LIB = -lxml2


TIBEMS_LIB64=-ltibems64 -ltibemslookup64
TIBEMSUFO_LIB64=-ltibemsufo64
TIBEMSADMIN_LIB64=-ltibemsadmin64
TIBEMS_SSL_LIB64=-lssl -lcrypto
TIBEMS_LDAP_LIB64=-lldap -llber
TIBEMS_XML_LIB64=-lxml2
TIBEMS_ZLIB64=-lz

TLIBS=-lpthread

LIBS=$(TIBEMS_LIB64) \
     $(TIBEMSADMIN_LIB64) $(TIBEMS_LDAP_LIB64) $(TIBEMS_XML_LIB64) $(TIBEMS_SSL_LIB64) $(TIBEMS_ZLIB64) $(TLIBS) \
     $(TIBEMSUFO_LIB64)
RT_LIB=-L/opt/tibco/ems/8.5/lib -L/opt/tibco/ems/8.5/lib/64 $(LIBS)


# librairies communes applicatives utilisees

LIB_S =  $(XDMICGLIB)/xzs.a \
        $(XDMICGLIB)/xzs.a \
        $(XDMICGLIB)/xza.a \
        $(XDMICGLIB)/xzaol.a \
        $(XDMICGLIB)/xzaoa.a \
        $(XDMICGLIB)/xze.a \
        $(XDMICGLIB)/xzi.a \
        $(XDMICGLIB)/xd.a

LIB_C =  $(XDMICGLIB)/xzs.a \
        $(XDMICGLIB)/xzs.a \
        $(XDMICGLIB)/xza.a \
        $(XDMICGLIB)/xzad.a \
        $(XDMICGLIB)/xzaol.a \
        $(XDMICGLIB)/xzaoa.a \
        $(XDMICGLIB)/xze.a \
        $(XDMICGLIB)/xzi.a \
        $(XDMICGLIB)/xzd.a \
        $(XDMICGLIB)/xd.a

LIB_Q =  $(XDMICGLIB)/xzs.a \
        $(XDMICGLIB)/xzs.a \
        $(XDMICGLIB)/xza.a \
        $(XDMICGLIB)/xzaol.a \
        $(XDMICGLIB)/xzaoa.a \
        $(XDMICGLIB)/xze.a \
        $(XDMICGLIB)/xzi.a \
        $(XDMICGLIB)/xd.a \
        $(XDMICGLIB)/xzaoa.a

LIB_ST = $(XDMICGLIB)/xzs.a \
	$(XDMICGLIB)/xza.a \
	$(XDMICGLIB)/xzaol.a \
	$(XDMICGLIB)/xze.a \
	$(XDMICGLIB)/xzi.a \
	$(XDMICGLIB)/xd.a \
	$(XDMICGLIB)/xzaoa.a

LIB_CT = $(XDMICGLIB)/xzs.a \
        $(XDMICGLIB)/xza.a \
        $(XDMICGLIB)/xzaol.a \
        $(XDMICGLIB)/xze.a \
        $(XDMICGLIB)/xzi.a \
        $(XDMICGLIB)/xd.a \
        $(XDMICGLIB)/xzaoa.a

LIB_CET = $(XDMICGLIB)/xzs.a \
	$(XDMICGLIB)/xza.a \
	$(XDMICGLIB)/xzaol.a \
	$(XDMICGLIB)/xze.a \
	$(XDMICGLIB)/xzi.a \
	$(XDMICGLIB)/xd.a \
	$(XDMICGLIB)/xzaoa.a

LIB_SE = $(XDMICGLIB)/xzs.a \
        $(XDMICGLIB)/xza.a \
        $(XDMICGLIB)/xzaol.a \
        $(XDMICGLIB)/xze.a \
        $(XDMICGLIB)/xzi.a \
        $(XDMICGLIB)/xd.a \
        $(XDMICGLIB)/xzaoa.a

LIB_WEB = $(XDMICGLIB)/xzs.a \
        $(XDMICGLIB)/xza.a \
        $(XDMICGLIB)/xzaol.a \
        $(XDMICGLIB)/xze.a \
        $(XDMICGLIB)/xzi.a \
        $(XDMICGLIB)/xd.a \
        $(XDMICGLIB)/xzaoa.a


LIB_GEN = $(XDMICGLIB)/xzs.a \
	$(XDMICGLIB)/xza.a \
	$(XDMICGLIB)/xzaoa.a \
	$(XDMICGLIB)/xzaoc.a \
	$(XDMICGLIB)/xzaol.a \
	$(XDMICGLIB)/xze.a \
	$(XDMICGLIB)/xzi.a \
	$(XDMICGLIB)/xd.a \
	$(XDMICGLIB)/xzaoa.a

LIB_CCI = $(XDMICGLIB)/xzs.a \
	$(XDMICGLIB)/xza.a \
	$(XDMICGLIB)/xzaol.a \
	$(XDMICGLIB)/xze.a \
	$(XDMICGLIB)/xzaoc.a \
	$(XDMICGLIB)/xzi.a \
	$(XDMICGLIB)/xd.a \
	$(XDMICGLIB)/xzaoa.a

LIB_NEU = $(XDMICGLIB)/xzs.a \
          $(XDMICGLIB)/xzad.a \
	  $(XDMICGLIB)/xza.a \
	  $(XDMICGLIB)/xzaol.a \
	  $(XDMICGLIB)/xzaoa.a \
	  $(XDMICGLIB)/xd.a

LIB_NET = $(XDMICGLIB)/xzs.a \
	$(XDMICGLIB)/xzad.a \
	$(XDMICGLIB)/xza.a \
	$(XDMICGLIB)/xze.a \
	$(XDMICGLIB)/xzaoc.a \
	$(XDMICGLIB)/xzaol.a \
	$(XDMICGLIB)/xzaoa.a \
	$(XDMICGLIB)/xd.a

LIB_NOMADE = $(XDMICGLIB)/xzs.a \
        $(XDMICGLIB)/xza.a \
        $(XDMICGLIB)/xzaol.a \
        $(XDMICGLIB)/xze.a \
        $(XDMICGLIB)/xzi.a \
        $(XDMICGLIB)/xd.a \
        $(XDMICGLIB)/xzaoa.a

LIB_AMISOL = $(XDMICGLIB)/xzs.a \
	$(XDMICGLIB)/xza.a \
	$(XDMICGLIB)/xze.a \
	$(XDMICGLIB)/xzi.a \
	$(XDMICGLIB)/xd.a \
	$(XDMICGLIB)/xzaol.a \
	$(XDMICGLIB)/xzaoa.a


########### Zone a modifier par le developpeur ################
#
# DEFINITION DES SOURCES D'UNE  TACHE
#
# sources d'un executable
#
# x code du sous-systeme
# yyy nom du module
#

#
# includes
#

INCICG = $(XDMICGINC)/xdc.h 	\
	 $(XDMICGINC)/xdy.h	\
	 $(XDMICGINC)/xdg.h	\
	 $(XDMICGINC)/xdm.h	\
	 $(XDMICGINC)/xzac.h	\
	 $(XDMICGINC)/xzae.h	\
	 $(XDMICGINC)/xzae20.h	\
	 $(XDMICGINC)/xzae21.h	\
	 $(XDMICGINC)/xzae22.h	\
	 $(XDMICGINC)/xzae23.h	\
	 $(XDMICGINC)/xzae24.h	\
	 $(XDMICGINC)/xzae26.h	\
	 $(XDMICGINC)/xzae27.h	\
	 $(XDMICGINC)/xzae29.h	\
	 $(XDMICGINC)/xzae30.h	\
	 $(XDMICGINC)/xzae31.h	\
	 $(XDMICGINC)/xzae32.h	\
	 $(XDMICGINC)/xzae68.h	\
	 $(XDMICGINC)/xzae69.h	\
	 $(XDMICGINC)/xzag.h	\
	 $(XDMICGINC)/xzai07.h	\
	 $(XDMICGINC)/xzan37.h	\
	 $(XDMICGINC)/xzao15.h	\
	 $(XDMICGINC)/xzao16.h	\
	 $(XDMICGINC)/xzao19.h	\
	 $(XDMICGINC)/xzao20.h	\
	 $(XDMICGINC)/xzao21.h	\
	 $(XDMICGINC)/xzao123.h	\
	 $(XDMICGINC)/xzap01.h	\
	 $(XDMICGINC)/xzap02.h	\
	 $(XDMICGINC)/xzap03.h	\
	 $(XDMICGINC)/xzap04.h	\
	 $(XDMICGINC)/xzap05.h	\
	 $(XDMICGINC)/xzap06.h	\
	 $(XDMICGINC)/xzap07.h	\
	 $(XDMICGINC)/xzap08.h	\
	 $(XDMICGINC)/xzap09.h	\
	 $(XDMICGINC)/xzap10.h	\
	 $(XDMICGINC)/xzap22.h	\
	 $(XDMICGINC)/xzap23.h	\
	 $(XDMICGINC)/xzap25.h     \
	 $(XDMICGINC)/xzat.h	\
	 $(XDMICGINC)/xzia.h	\
	 $(XDMICGINC)/xzit.h	\
	 $(XDMICGINC)/xzsc.h	\
	 $(XDMICGINC)/xzsm.h	\
	 $(XDMICGINC)/xzss.h	\
	 $(XDMICGINC)/xzst.h

# LES INCLUDES de tasrv.x
INC_S =  $(DIRINC)/asrv_dir.h \
	$(DIRINC)/asrv_rpcom.h\
	$(DIRINC)/asrv_crp.h\
	$(DIRINC)/asrv_arp.h\
	$(DIRINC)/asrv_mrp.h\
	$(DIRINC)/asrv_prp.h\
	$(DIRINC)/asrv_rrp.h\
	$(DIRINC)/asrv_trp.h\
	$(XDMICGINC)/xdy.h\
	$(XDMICGINC)/xzep.h\
	$(XDMICGINC)/xzec.h\
	$(XDMICGINC)/xzep.h\
	$(XDMICGINC)/xzit.h\
	$(XDMICGINC)/xzir.h

# LES SOURCES de tasrv.x
SRC_S =  $(DIRSRC)/asrv_dir.c\
	$(DIRSRC)/asrv_rpcom.c\
	$(DIRSRC)/asrv_crp.c\
	$(DIRSRC)/asrv_arp.c\
	$(DIRSRC)/asrv_prp.c\
	$(DIRSRC)/asrv_mrp.c\
	$(DIRSRC)/asrv_rrp.c\
	$(DIRSRC)/asrv_trp.c

#
# librairie d'un executable
#

# LA LIBRAIRIE de tasrv.x
OBJ_S =  $(DIRLIB)/asrv_dir.a


#
# DEFINITION DU NOM DES EXECUTABLES
#
# nom des executables
#

EXE_S = $(DIREXE)/tasrv.x

# Variables utiles a la Compilation pour tacli.x

# LES INCLUDES de tacli.x
INC_C =  $(DIRINC)/acli_dir.h \
        $(DIRINC)/acli_acl.h\
        $(DIRINC)/acli_hcl.h\
        $(DIRINC)/acli_tcl.h\
        $(DIRINC)/acli_mcl.h\
        $(DIRINC)/acli_scl.h\
        $(DIRINC)/acli_xzae102.h\
        $(DIRINC)/acli_xzah10.h\
        $(DIRINC)/acli_xzan34_cb.h\
        $(DIRINC)/acli_xzag05_cb.h\
        $(DIRINC)/acli_xzag06_cb.h\
        $(DIRINC)/acli_xzac66_cb.h\
        $(DIRINC)/acli_xzac03_cb.h\
        $(DIRINC)/acli_xzac62_cb.h\
        $(DIRINC)/acli_xzac67_cb.h\
        $(DIRINC)/acli_xzac_cb.h\
	$(DIRINC)/acli_xzao_cb.h\
        $(XDMICGINC)/asql_com.h\
        $(XDMICGINC)/xzah10.h\
        $(XDMICGINC)/xzis.h\
        $(DIRINC)/acli_EA_AS_F.h\
        $(XDMICGINC)/xdy.h

# LES SOURCES de tacli.x
SRC_C =  $(DIRSRC)/acli_dir.c\
        $(DIRSRC)/acli_mcl.c\
        $(DIRSRC)/acli_tcl.c\
        $(DIRSRC)/acli_hcl.c\
        $(DIRSRC)/acli_scl.c\
        $(DIRSRC)/acli_xzae102.c\
        $(DIRSRC)/acli_xzah10.c\
        $(DIRSRC)/acli_xzan34_cb.c\
        $(DIRSRC)/acli_xzag05_cb.c\
        $(DIRSRC)/acli_xzag06_cb.c\
        $(DIRSRC)/acli_xzac66_cb.c\
        $(DIRSRC)/acli_xzac62_cb.c\
        $(DIRSRC)/acli_xzac03_cb.c\
        $(DIRSRC)/acli_xzac67_cb.c\
        $(DIRSRC)/acli_xzac92_cb.c\
        $(DIRSRC)/acli_xzac98_cb.c\
        $(DIRSRC)/acli_xzac01_cb.c\
        $(DIRSRC)/acli_xzac61_cb.c\
        $(DIRSRC)/acli_xzac802_cb.c\
        $(DIRSRC)/acli_xzac303_cb.c\
        $(DIRSRC)/acli_xzac82_cb.c\
        $(DIRSRC)/acli_xzac84_cb.c\
        $(DIRSRC)/acli_xzac93_cb.c\
        $(DIRSRC)/acli_xzac99_cb.c\
        $(DIRSRC)/acli_xzac06_cb.c\
        $(DIRSRC)/acli_xzac63_cb.c\
        $(DIRSRC)/acli_xzac100_cb.c\
        $(DIRSRC)/acli_xzac108_cb.c\
        $(DIRSRC)/acli_xzac102_cb.c\
        $(DIRSRC)/acli_xzac109_cb.c\
        $(DIRSRC)/acli_xzac104_cb.c\
        $(DIRSRC)/acli_xzac110_cb.c\
        $(DIRSRC)/acli_xzac111_cb.c\
        $(DIRSRC)/acli_xzac112_cb.c\
        $(DIRSRC)/acli_xzac113_cb.c\
        $(DIRSRC)/acli_xzac114_cb.c\
	$(DIRSRC)/acli_xzao960_cb.c\
        $(DIRSRC)/acli_EA_AS_F.c\
        $(DIRSRC)/acli_acl.c

#
# librairie d'un executable
#

# LA LIBRAIRIE de tacli.x
OBJ_C =  $(DIRLIB)/acli_dir.a


#
# DEFINITION DU NOM DES EXECUTABLES
#
# nom des executables
#

EXE_C = $(DIREXE)/tacli.x

# Variables utiles a la Compilation pour taeqa.x

# LES INCLUDES de taeqa.x
INC_Q =  $(DIRINC)/aeqa_dir.h \
        $(DIRINC)/aeqa_calc.h\
        $(XDMICGINC)/asql_com.h\
        $(XDMICGINC)/xzaa.h\
        $(XDMICGINC)/xdf.h\
        $(XDMICGINC)/xdy.h

# LES SOURCES de taeqa.x
SRC_Q =  $(DIRSRC)/aeqa_dir.c\
        $(DIRSRC)/aeqa_calc.c

#
# librairie d'un executable
#

# LA LIBRAIRIE de taeqa.x
OBJ_Q =  $(DIRLIB)/aeqa_dir.a

#
# DEFINITION DU NOM DES EXECUTABLES
#
# nom des executables
#

EXE_Q = $(DIREXE)/taeqa.x


#
# Variables utiles a la Compilation pour tasts.x
#

INC_ST =  $(DIRINC)/asts_export.h \
	$(DIRINC)/asts_dir.h \
	$(XDMICGINC)/xzaa.h\
	$(XDMICGINC)/xdf.h\
	$(XDMICGINC)/xdy.h

# LES SOURCES de tasts.x
SRC_ST =  $(DIRSRC)/asts_dir.c\
	$(DIRSRC)/asts_export.c

# LA LIBRAIRIE de tasts.x
OBJ_ST = $(DIRLIB)/asts_dir.a



#
# Variables utiles a la Compilation pour tacts.x
#

INC_CT = $(DIRINC)/acts_dir.h\
	$(DIRINC)/acts_traf.h

SRC_CT = $(DIRSRC)/acts_dir.c\
	$(DIRSRC)/acts_traf.c

OBJ_CT = $(DIRLIB)/acts_dir.a



#
# Variables utiles a la Compilation pour taces.x / tacet.x
#

INC_CET = $(DIRINC)/acet_dir.h\
	$(DIRINC)/acet_evt.h

SRC_CET = $(DIRSRC)/acet_dir.c\
	$(DIRSRC)/acet_evt.c

OBJ_CET = $(DIRLIB)/acet_dir.a



#
# Variables utiles a la Compilation pour tases.x
#

INC_SE = $(DIRINC)/ases_dir.h\
	$(DIRINC)/ases_evt.h

SRC_SE = $(DIRSRC)/ases_dir.c\
	$(DIRSRC)/ases_evt.c\
	$(DIRSRC)/ases_tfm.c\
	$(DIRSRC)/ases_action.c\
	$(DIRSRC)/ases_pmv.c

OBJ_SE = $(DIRLIB)/ases_dir.a



#
# Variables utiles a la Compilation pour tagen.x
#

INC_GEN = $(DIRINC)/agen_dir.h\
	$(DIRINC)/agen_evt.h\
	$(DIRINC)/agen_rdt.h\
	$(DIRINC)/agen_tdp.h

SRC_GEN = $(DIRSRC)/agen_dir.c\
	$(DIRSRC)/agen_evt.c\
	$(DIRSRC)/agen_rdt.c\
	$(DIRSRC)/agen_tdp.c

OBJ_GEN =  $(DIRLIB)/agen_dir.a



#
# Variables utiles a la Compilation pour tacop.x
#

INC_COP = $(DIRINC)/acop_dir.h\
        $(DIRINC)/acop_evt.h

SRC_COP = $(DIRSRC)/acop_dir.c\
        $(DIRSRC)/acop_evt.c

OBJ_COP = $(DIRLIB)/acop_dir.a



#
# Variables utiles a la Compilation pour taweb.x
#

INC_WEB = $(DIRINC)/aweb_dir.h\
	$(DIRINC)/aweb_export.h\
	$(DIRINC)/aweb_ftp.h

SRC_WEB = $(DIRSRC)/aweb_dir.c\
	$(DIRSRC)/aweb_export.c\
	$(DIRSRC)/aweb_ftp.c

OBJ_WEB = $(DIRLIB)/aweb_dir.a



#
# Variables utiles a la Compilation pour tatdp.x
#

INC_CCI = $(DIRINC)/atdp_dir.h \
	$(DIRINC)/atdp_export.h\
	$(DIRINC)/atdp_ftp.h

SRC_CCI = $(DIRSRC)/atdp_dir.c\
	$(DIRSRC)/atdp_export.c\
	$(DIRSRC)/atdp_xml.c\
	$(DIRSRC)/atdp_ftp.c

OBJ_CCI = $(DIRLIB)/atdp_dir.a



#
# Variables utiles a la Compilation pour tanom.x
#

INC_NOMADE = $(DIRINC)/anom_dir.h\
        $(DIRINC)/anom_import.h

SRC_NOMADE = $(DIRSRC)/anom_dir.c\
        $(DIRSRC)/anom_import.c

OBJ_NOMADE = $(DIRLIB)/anom_dir.a



#
# Variables utiles a la Compilation pour tami2.x
#

INC_AMISOL =  $(DIRINC)/amisol_dir.h\
	$(DIRINC)/amisol_transfert.h\
	$(DIRINC)/amisol_tcpip.h

SRC_AMISOL =  $(DIRSRC)/amisol_dir.c\
	$(DIRSRC)/amisol_transfert.c\
	$(DIRSRC)/amisol_tcpip.c

OBJ_AMISOL = $(DIRLIB)/amisol_dir.a

#
# Variables utiles a la Compilation pour taneu.x
#
INC_NEU = $(DIRINC)/aneu_dir.h\
	$(DIRINC)/aneu_cfg.h\
	$(DIRINC)/aneu_cyc.h

SRC_NEU = $(DIRSRC)/aneu_dir.c\
	$(DIRSRC)/aneu_cfg.c\
	$(DIRSRC)/aneu_cyc.c

OBJ_NEU = $(DIRLIB)/aneu_dir.a

# tache tanet.x
INC_NET = $(DIRINC)/anet_dir.h\
        $(DIRINC)/anet_cfg.h\
        $(DIRINC)/anet_cyc.h\
        $(DIRINC)/anet_tra.h

SRC_NET = $(DIRSRC)/anet_dir.c\
        $(DIRSRC)/anet_cfg.c\
        $(DIRSRC)/anet_cyc.c\
        $(DIRSRC)/anet_tra.c

OBJ_NET = $(DIRLIB)/anet_dir.a


#
# Variables utiles a la Compilation pour tada2.x		
#
INC_ADA = $(DIRINC)/ada2_dir.h\
        $(DIRINC)/ada2_evt.h

SRC_ADA = $(DIRSRC)/ada2_dir.c\
        $(DIRSRC)/ada2_evt.c

OBJ_ADA = $(DIRLIB)/ada2_dir.a

#
# Variables utiles a la Compilation pour apat.x
#
INC_APAT = $(DIRINC)/apat_dir.h\
        $(DIRINC)/apat_evt.h

SRC_APAT = $(DIRSRC)/apat_dir.c\
        $(DIRSRC)/apat_evt.c

OBJ_APAT = $(DIRLIB)/apat_dir.a


#
# DEFINITION DU NOM DES EXECUTABLES
#

EXE_C = $(DIREXE)/tacli.x

EXE_S = $(DIREXE)/tasrv.x

EXE_ST = $(DIREXE)/tasts.x

EXE_CT = $(DIREXE)/tacts.x

EXE_CET = $(DIREXE)/tacet.x

EXE_SE = $(DIREXE)/tases.x

EXE_WEB = $(DIREXE)/taweb.x

EXE_NOMADE = $(DIREXE)/tanom.x

EXE_AMISOL = $(DIREXE)/tami2.x

EXE_GEN = $(DIREXE)/tagen.x

EXE_CCI = $(DIREXE)/tatdp.x

EXE_COP = $(DIREXE)/tacop.x

EXE_NEU = $(DIREXE)/taneu.x

EXE_NET = $(DIREXE)/tanet.x

EXE_ADA = $(DIREXE)/tada2.x

EXE_APAT = $(DIREXE)/tapat.x

#EXE = $(EXE_C) $(EXE_S)  $(EXE_ST) $(EXE_CT) $(EXE_CET) $(EXE_SE) $(EXE_GEN) $(EXE_COP) $(EXE_WEB) $(EXE_CCI) $(EXE_NOMADE) $(EXE_AMISOL) $(EXE_ADA) $(EXE_APAT)
EXE = $(EXE_C) $(EXE_S)  $(EXE_ST) $(EXE_CT) $(EXE_CET) $(EXE_SE) $(EXE_GEN) $(EXE_COP) $(EXE_WEB) $(EXE_CCI) $(EXE_NOMADE) $(EXE_AMISOL) $(EXE_ADA) $(EXE_APAT)



#
# DEFINITION DES REGLES DE GENERATION
#
# Premiere regle il faut tout faire : les communs et les executables

tout : verifier_plateforme $(EXE)
	echo
	@echo LE SOUS-SYSTEME $(SSYST) EST A JOUR.
	#SFO: desactivation TEMPORAIRE !!!          @chmod +x *.ksh *.sh
	echo

tasrv.x : $(EXE_S)
	echo
	@echo L EXECUTABLE tasrv.x EST A JOUR.
	echo

tacli.x : $(EXE_C)
	echo
	@echo L EXECUTABLE tacli.x EST A JOUR.
	echo

taeqa.x : $(EXE_Q)
	echo
	@echo L'EXECUTABLE taeqa.x EST A JOUR.
	echo

tasts.x : $(EXE_ST)
	echo
	@echo L EXECUTABLE tasts.x EST A JOUR.
	echo

tacts.x : $(EXE_CT)
	echo
	@echo L EXECUTABLE tacts.x EST A JOUR.
	echo

tacet.x : $(EXE_CET)
	echo
	@echo L EXECUTABLE tacet.x EST A JOUR.
	echo

tases.x : $(EXE_SE)
	echo
	@echo L EXECUTABLE tases.x EST A JOUR.
	echo

tagen.x : $(EXE_GEN)
	echo
	@echo L EXECUTABLE tagen.x EST A JOUR.
	echo

tacop.x : $(EXE_COP)
	echo
	@echo L EXECUTABLE tacop.x EST A JOUR.
	echo

taweb.x : $(EXE_WEB)
	echo
	@echo L EXECUTABLE taweb.x EST A JOUR
	echo

tatdp.x : $(EXE_CCI)
	echo
	@echo L EXECUTABLE tatdp.x EST A JOUR
	echo

tanom.x : $(EXE_NOMADE)
	echo
	@echo L EXECUTABLE tanom.x EST A JOUR
	echo

tami2.x : $(EXE_AMISOL)
	echo
	@echo L EXECUTABLE tami2.x EST A JOUR
	echo

taneu.x : $(EXE_NEU)
	echo
	@echo L EXECUTABLE taneu.x EST A JOUR.
	echo

tanet.x : $(EXE_NET)
	echo
	@echo L'EXECUTABLE tanet.x EST A JOUR
	echo

tada2.x : $(EXE_ADA)
	echo
	@echo L EXECUTABLE tada2.x EST A JOUR
	echo

tapat.x : $(EXE_APAT)
	echo
	@echo L EXECUTABLE tapat.x EST A JOUR
	echo

#
# GENERATION  D'UN EXECUTABLE
#
# Regle de generation d'un executable a partir de ses fichiers sources,
#  de ses objets et des librairies communes
#
# Phase edition de lien
#

#TASRV
$(EXE_S) : $(SRC_S) $(OBJ_S)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	$(RTLINK) -lm $(CFLAGS) $(OBJ_S) $(LIB_S) $(LDSIGNAL)  $(RT_LIB) -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -o $@
	echo
	echo "TAILLE DE L EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

# TACLI
$(EXE_C) : $(SRC_C) $(OBJ_C)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	$(RTLINK) -lm $(CFLAGS) $(OBJ_C) $(LIB_C) $(LDSIGNAL)  $(RT_LIB) -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -o $@
	echo
	echo "TAILLE DE L EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.
	cp $(EXE_C) $(DIREXE)/tapur.x
	cp $(EXE_C) $(DIREXE)/tacpc.x

# TAEQA
$(EXE_Q) : $(SRC_Q) $(OBJ_Q)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	$(RTLINK) -lm $(CFLAGS) $(OBJ_Q) $(LIB_Q)  $(RT_LIB)  $(SYBASE_LIB) -o $@
	echo
	echo "TAILLE DE L EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

# TASTS
$(EXE_ST) : $(SRC_ST) $(OBJ_ST) $(LIB_ST)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	$(RTLINK) -lm $(CFLAGS) $(OBJ_ST) $(LIB_ST)  $(RT_LIB) -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -o $@
	echo
	echo "TAILLE DE L EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.


# TACTS
$(EXE_CT) : $(SRC_CT) $(OBJ_CT) $(LIB_CT)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	$(RTLINK) -lm  $(CFLAGS) $(OBJ_CT) $(LIB_CT)  $(RT_LIB) -L$(SYBASE_PATH_LIB)  $(SYBASE_LIB) -o $@
	echo
	echo "TAILLE DE L EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

#TACET
$(EXE_CET) : $(SRC_CET) $(OBJ_CET) $(LIB_CET)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	$(RTLINK) -lm $(CFLAGS) $(OBJ_CET) $(LIB_CET)  $(RT_LIB) -L$(SYBASE_PATH_LIB)  $(SYBASE_LIB) -o $@
	echo
	echo "TAILLE DE L EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

#TASES
$(EXE_SE) : $(SRC_SE) $(OBJ_SE) $(LIB_SE)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	$(RTLINK) -lm  $(CFLAGS) $(OBJ_SE) $(LIB_SE)  $(RT_LIB) -L$(SYBASE_PATH_LIB)  $(SYBASE_LIB) -o $@
	echo
	echo "TAILLE DE L EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

#TAGEN
$(EXE_GEN) : $(SRC_GEN) $(OBJ_GEN) $(LIB_GEN)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	$(RTLINK) -lm $(CFLAGS) $(OBJ_GEN) $(LIB_GEN)  $(RT_LIB) -L$(SYBASE_PATH_LIB) $(SYBASE_LIB) -o $@
	echo
	echo "TAILLE DE L EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

#TACOP
$(EXE_COP) : $(SRC_COP) $(OBJ_COP) $(LIB_GEN)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	$(RTLINK) -lm  $(CFLAGS) $(OBJ_COP) $(LIB_GEN)  $(RT_LIB) -L$(SYBASE_PATH_LIB)  $(SYBASE_LIB) -L$(XML_PATH_LIB) $(XML_LIB) -o $@
	echo
	echo "TAILLE DE L EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

#TAWEB
$(EXE_WEB) : $(SRC_WEB) $(OBJ_WEB) $(LIB_WEB)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	$(RTLINK) -lm $(CFLAGS) $(OBJ_WEB) $(LIB_WEB)  $(RT_LIB) -L$(SYBASE_PATH_LIB)  $(SYBASE_LIB) -o $@
	echo
	echo "TAILLE DE L EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

#TACCI
$(EXE_CCI) : $(SRC_CCI) $(OBJ_CCI) $(LIB_CCI)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	$(RTLINK) -lm $(CFLAGS) $(OBJ_CCI) $(LIB_CCI)  $(RT_LIB) -L$(SYBASE_PATH_LIB)  $(SYBASE_LIB) -L$(XML_PATH_LIB) $(XML_LIB) -o $@
	echo
	echo "TAILLE DE L EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

#TAMISOL
$(EXE_AMISOL) : $(SRC_AMISOL) $(OBJ_AMISOL) $(LIB_AMISOL)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	$(RTLINK) -lm $(CFLAGS) $(OBJ_AMISOL) $(LIB_AMISOL)  $(RT_LIB) -L$(SYBASE_PATH_LIB)  $(SYBASE_LIB) -o $@
	echo
	echo "TAILLE DE L EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

#TANEU
$(EXE_NEU) : $(SRC_NEU) $(OBJ_NEU) $(LIB_NEU)
	echo
	@[ "$(MODELE)" = "$(CIBLE)" ] || { echo "Ce Makefile N'EST PAS DESTINE A CETTE PLATEFORME !!!" >&2 ; false ; }
	echo "PHASE EDITION DE LIEN :"$@
	$(RTLINK) $(CFLAGS) $(OBJ_NEU) $(LIB_NEU) $(RT_LIB) -L$(SYBASE)/OCS-15_0/lib -L$(SYBASE_PATH_LIB)  $(SYBASE_LIB) -o $@
	echo
	echo "TAILLE DE L EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

#TANET
$(EXE_NET) : $(SRC_NET) $(OBJ_NET) $(LIB_NET)
	echo
	@[ "$(MODELE)" = "$(CIBLE)" ] || { echo "Ce Makefile N'EST PAS DESTINE A CETTE PLATEFORME !!!" >&2 ; false ; }
	echo "PHASE EDITION DE LIEN :"$@
	$(RTLINK) $(CFLAGS) $(OBJ_NET) $(LIB_NET) $(RT_LIB) -L$(SYBASE)/OCS-15_0/lib -L$(SYBASE_PATH_LIB)  $(SYBASE_LIB) -o $@
	echo
	echo "TAILLE DE L EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.


$(EXE_NOMADE) : $(SRC_NOMADE) $(OBJ_NOMADE) $(LIB_NOMADE)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	$(RTLINK) -lm $(CFLAGS) $(OBJ_NOMADE) $(LIB_NOMADE)  $(RT_LIB) -L$(SYBASE_PATH_LIB)  $(SYBASE_LIB) -o $@
	echo
	echo "TAILLE DE L EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

#TADA2
$(EXE_ADA) : $(SRC_ADA) $(OBJ_ADA) $(LIB_GEN)
	echo
																											   
	echo "PHASE EDITION DE LIEN :"$@
	echo $(RTLINK) -lm  $(CFLAGS) $(OBJ_ADA) $(LIB_GEN) $(RT_LIB) -L$(SYBASE_PATH_LIB)  $(SYBASE_LIB) -L$(XML_PATH_LIB) $(XML_LIB) -o $@
	$(RTLINK) -lm  $(CFLAGS) $(OBJ_ADA) $(LIB_GEN) $(RT_LIB) -L$(SYBASE_PATH_LIB)  $(SYBASE_LIB) -L$(XML_PATH_LIB) $(XML_LIB) -o $@
	echo
	echo "TAILLE DE L EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

#TAPAT
$(EXE_APAT) : $(SRC_APAT) $(OBJ_APAT) $(LIB_GEN)
	echo
	echo "PHASE EDITION DE LIEN :"$@
	echo $(RTLINK) -lm  $(CFLAGS) $(OBJ_APAT) $(LIB_GEN) $(RT_LIB) -L$(SYBASE_PATH_LIB)  $(SYBASE_LIB) -L$(XML_PATH_LIB) $(XML_LIB) -o $@
	$(RTLINK) -lm  $(CFLAGS) $(OBJ_APAT) $(LIB_GEN) $(RT_LIB) -L$(SYBASE_PATH_LIB)  $(SYBASE_LIB) -L$(XML_PATH_LIB) $(XML_LIB) -o $@
	echo
	echo "TAILLE DE L EXECUTABLE :"$@
	@size $@
	@echo Executable $@ a jour.

#
# Regle liant les sources aux fichiers include communs et au makefile
#

#TASRV
$(SRC_S) : $(INC_S)
	touch $@

#TACLI
$(SRC_C) : $(INC_C)
	touch $@

#TAEQA
$(SRC_Q) : $(INC_Q)
	touch $@

#TASTS
$(SRC_ST) : $(INC_ST)
	touch $@

#TACTS
$(SRC_CT) : $(INC_CT)
	touch $@

#TACET
$(SRC_CET) : $(INC_CET)
	touch $@

#TASES
$(SRC_SE) : $(INC_SE)
	touch $@

#TAGEN
$(SRC_GEN) : $(INC_GEN)
	touch $@

#TACOP
$(SRC_COP) : $(INC_COP)
	touch $@

#TAWEB
$(SRC_WEB) : $(INC_WEB)
	touch $@

#TACCI
$(SRC_CCI) : $(INC_CCI)
	touch $@

#TANOM
$(SRC_NOMADE) : $(INCICG) $(INC_NOMADE)
	touch $@

#TAMISOL
$(SRC_AMISOL) : $(INC_AMISOL)
	touch $@

#TANEU
$(SRC_NEU) : $(INC_NEU)
	touch $@

#TANET
$(SRC_NET) : $(INC_NET)
	touch $@

#TADA2
$(SRC_ADA) : $(INC_ADA)
	touch $@

#TAPAT
$(SRC_APAT) : $(INC_APAT)
	touch $@

#
# Regle de generation d'une librairie  a partir
# de ses fichiers objet.
#

# TASRV :
$(OBJ_S):$(OBJ_S)(asrv_dir.o)\
        $(OBJ_S)(asrv_crp.o)\
        $(OBJ_S)(asrv_arp.o)\
        $(OBJ_S)(asrv_prp.o)\
        $(OBJ_S)(asrv_mrp.o)\
        $(OBJ_S)(asrv_rrp.o)\
        $(OBJ_S)(asrv_trp.o)\
        $(OBJ_S)(asrv_rpcom.o)


#TACLI :
$(OBJ_C):$(OBJ_C)(acli_dir.o)\
        $(OBJ_C)(acli_acl.o) \
        $(OBJ_C)(acli_tcl.o)\
        $(OBJ_C)(acli_mcl.o)\
        $(OBJ_C)(acli_hcl.o)\
        $(OBJ_C)(acli_scl.o)\
        $(OBJ_C)(acli_xzah10.o)\
        $(OBJ_C)(acli_xzae102.o)\
        $(OBJ_C)(acli_xzan34_cb.o)\
        $(OBJ_C)(acli_xzag05_cb.o)\
        $(OBJ_C)(acli_xzag06_cb.o)\
        $(OBJ_C)(acli_xzac66_cb.o)\
        $(OBJ_C)(acli_xzac62_cb.o)\
        $(OBJ_C)(acli_xzac03_cb.o)\
        $(OBJ_C)(acli_xzac67_cb.o)\
        $(OBJ_C)(acli_xzac92_cb.o)\
        $(OBJ_C)(acli_xzac98_cb.o)\
        $(OBJ_C)(acli_xzac01_cb.o)\
        $(OBJ_C)(acli_xzac61_cb.o)\
        $(OBJ_C)(acli_xzac802_cb.o)\
        $(OBJ_C)(acli_xzac303_cb.o)\
        $(OBJ_C)(acli_xzac93_cb.o)\
        $(OBJ_C)(acli_xzac99_cb.o)\
        $(OBJ_C)(acli_xzac06_cb.o)\
        $(OBJ_C)(acli_xzac63_cb.o)\
        $(OBJ_C)(acli_xzac82_cb.o)\
        $(OBJ_C)(acli_xzac84_cb.o)\
        $(OBJ_C)(acli_xzac100_cb.o)\
        $(OBJ_C)(acli_xzac101_cb.o)\
        $(OBJ_C)(acli_xzac102_cb.o)\
        $(OBJ_C)(acli_xzac103_cb.o)\
        $(OBJ_C)(acli_xzac104_cb.o)\
        $(OBJ_C)(acli_xzac110_cb.o)\
        $(OBJ_C)(acli_xzac111_cb.o)\
        $(OBJ_C)(acli_xzac112_cb.o)\
        $(OBJ_C)(acli_xzac113_cb.o)\
        $(OBJ_C)(acli_xzac114_cb.o)\
	$(OBJ_C)(acli_xzao960_cb.o)\
        $(OBJ_C)(acli_EA_AS_F.o)

 TAEQA :
$(OBJ_Q):$(OBJ_Q)(aeqa_dir.o)\
        $(OBJ_Q)(aeqa_calc.o)


# TASTS :
$(OBJ_ST):$(OBJ_ST)(asts_dir.o)\
	$(OBJ_ST)(asts_export.o)


#TACTS :
$(OBJ_CT):$(OBJ_CT)(acts_dir.o)\
	$(OBJ_CT)(acts_traf.o)

#TACET :
$(OBJ_CET):$(OBJ_CET)(acet_dir.o)\
	$(OBJ_CET)(acet_evt.o)

#TASES :
$(OBJ_SE):$(OBJ_SE)(ases_dir.o)\
	$(OBJ_SE)(ases_evt.o)\
	$(OBJ_SE)(ases_tfm.o)\
	$(OBJ_SE)(ases_action.o)\
	$(OBJ_SE)(ases_pmv.o)

#TAGEN :
$(OBJ_GEN):$(OBJ_GEN)(agen_dir.o)\
	$(OBJ_GEN)(agen_evt.o)\
	$(OBJ_GEN)(agen_rdt.o)\
	$(OBJ_GEN)(agen_tdp.o)

#TACOP :
$(OBJ_COP):$(OBJ_COP)(acop_dir.o)\
        $(OBJ_COP)(acop_evt.o)

#TAWEB
$(OBJ_WEB):$(OBJ_WEB)(aweb_dir.o)\
	$(OBJ_WEB)(aweb_export.o)\
	$(OBJ_WEB)(aweb_ftp.o)

#TACCI
$(OBJ_CCI):$(OBJ_CCI)(atdp_dir.o)\
	$(OBJ_CCI)(atdp_export.o)\
	$(OBJ_CCI)(atdp_xml.o)\
	$(OBJ_CCI)(atdp_ftp.o)


#TANOM
$(OBJ_NOMADE):$(OBJ_NOMADE)(anom_dir.o)\
	$(OBJ_NOMADE)(anom_import.o)

#TAMISOL
$(OBJ_AMISOL):$(OBJ_AMISOL)(amisol_dir.o)\
	$(OBJ_AMISOL)(amisol_transfert.o)\
	$(OBJ_AMISOL)(amisol_tcpip.o)

#TANEU
$(OBJ_NEU):$(OBJ_NEU)(aneu_dir.o)\
	$(OBJ_NEU)(aneu_cfg.o)\
	$(OBJ_NEU)(aneu_cyc.o)

#TANET
$(OBJ_NET):$(OBJ_NET)(anet_dir.o)\
        $(OBJ_NET)(anet_cfg.o)\
        $(OBJ_NET)(anet_cyc.o)\
        $(OBJ_NET)(anet_tra.o)

#TADA2 :
$(OBJ_ADA):$(OBJ_ADA)(ada2_dir.o)\
        $(OBJ_ADA)(ada2_evt.o)			   

#TAPAT :
$(OBJ_APAT):$(OBJ_APAT)(apat_dir.o)\
        $(OBJ_APAT)(apat_evt.o)

########### Fin de zone a modifier par le developpeur ################

verifier_plateforme :
	if test "$(MODELE)" != "$(CIBLE)" ; \
	then	echo "Ce fichier Makefile N'EST PAS DESTINE A CETTE PLATEFORME. NE PAS GENERER DE BINAIRE !!!" ; \
		false ; \
	fi
#
# phase de menage du makefile
#
clean: verifier_plateforme
	rm -f $(DIRLIB)/*.a
	rm -f $(EXE)

#
#
# Redefinition de la regles de construction d'un .o a partir d'un .c
#
#
.c.o :
	echo " "
	if test $(OPTLINT) = yes;\
          then echo "PHASE DE VERIFICATION SYNTAXIQUE : "   $<;\
               $(LINT) $(LFLAGS)  $<;\
          else echo $< "PAS DE VERIFICATION SYNTAXIQUE ";\
        fi;
	echo
	echo "PHASE DE COMPILATION             : "   $<
	echo " "
	echo $(CC) $(CFLAGS) -c $<
	$(CC)  $(CFLAGS) -c $<

#
# Redefinition de la regles de construction d'un .a a partir d'un .o
#
.o.a:
	echo "CREATION DE LIBRAIRIE "$@.a
	ar rv $@.a $<
	rm -f $<

#
# Redefinition de la regles de construction d'un .a a partir d'un .c
#
.c.a :
	echo " "
	if test $(OPTLINT) = yes;\
          then echo "PHASE DE VERIFICATION SYNTAXIQUE : "   $*.c;\
               $(LINT) $(LFLAGS)  $*.c;\
          else echo  "PAS DE VERIFICATION SYNTAXIQUE " $*.c;\
        fi;
	echo
	echo "PHASE DE COMPILATION             : "   $*.c
	echo " "
	$(CC)   $(CFLAGS) -c $*.c
	echo "MISE A JOUR DE LIBRAIRIE :"$@
	ar r $@ $*.o
	rm -f $*.o
